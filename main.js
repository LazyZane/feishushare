/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var H=Object.defineProperty;var ee=Object.getOwnPropertyDescriptor;var te=Object.getOwnPropertyNames;var ie=Object.prototype.hasOwnProperty;var oe=(M,s)=>()=>(M&&(s=M(M=0)),s);var N=(M,s)=>{for(var e in s)H(M,e,{get:s[e],enumerable:!0})},se=(M,s,e,t)=>{if(s&&typeof s=="object"||typeof s=="function")for(let o of te(s))!ie.call(M,o)&&o!==e&&H(M,o,{get:()=>s[o],enumerable:!(t=ee(s,o))||t.enumerable});return M};var re=M=>se(H({},"__esModule",{value:!0}),M);var f={};N(f,{Debug:()=>i});var i,Y=oe(()=>{i=class{static log(...s){if(this.enabled){let e=new Date().toISOString().substring(11,23);console.log(`[Feishu ${e}]`,...s)}}static warn(...s){if(this.enabled){let e=new Date().toISOString().substring(11,23);console.warn(`[Feishu ${e}] \u26A0\uFE0F`,...s)}}static error(...s){if(this.enabled){let e=new Date().toISOString().substring(11,23);console.error(`[Feishu ${e}] \u274C`,...s)}}static verbose(...s){if(this.enabled&&this.verboseMode){let e=new Date().toISOString().substring(11,23);console.log(`[Feishu ${e}] \u{1F50D}`,...s)}}static step(s,...e){if(this.enabled){let t=new Date().toISOString().substring(11,23);console.log(`[Feishu ${t}] \u{1F4CB} STEP: ${s}`,...e)}}static api(s,e,t){if(this.enabled&&this.verboseMode){let o=new Date().toISOString().substring(11,23);console.log(`[Feishu ${o}] \u{1F310} API: ${s} ${e}`,t||"")}}static result(s,e,t){if(this.enabled){let o=new Date().toISOString().substring(11,23);console.log(`[Feishu ${o}] ${e?"\u2705":"\u274C"} ${s}:`,t||"")}}static enable(){this.enabled=!0,console.log("[Feishu] \u{1F527} Debug logging enabled")}static disable(){this.enabled=!1,console.log("[Feishu] \u{1F507} Debug logging disabled")}static enableVerbose(){this.verboseMode=!0,console.log("[Feishu] \u{1F50D} Verbose logging enabled")}static disableVerbose(){this.verboseMode=!1,console.log("[Feishu] \u{1F92B} Verbose logging disabled")}static isEnabled(){return this.enabled}static isVerbose(){return this.verboseMode}static getStatus(){return`Debug: ${this.enabled?"ON":"OFF"}, Verbose: ${this.verboseMode?"ON":"OFF"}`}};i.enabled=!1,i.verboseMode=!1});var Ae={};N(Ae,{default:()=>J});module.exports=re(Ae);var q=require("obsidian");var R={BASE_URL:"https://open.feishu.cn/open-apis",AUTHORIZE_URL:"https://open.feishu.cn/open-apis/authen/v1/authorize",TOKEN_URL:"https://open.feishu.cn/open-apis/authen/v2/oauth/token",REFRESH_TOKEN_URL:"https://open.feishu.cn/open-apis/authen/v2/oauth/token",SCOPES:"contact:user.base:readonly docx:document drive:drive wiki:wiki offline_access",UPLOAD_URL:"https://open.feishu.cn/open-apis/drive/v1/medias/upload_all",DOC_CREATE_URL:"https://open.feishu.cn/open-apis/docx/v1/documents",FOLDER_LIST_URL:"https://open.feishu.cn/open-apis/drive/v1/files",USER_INFO_URL:"https://open.feishu.cn/open-apis/authen/v1/user_info"},Z={appId:"",appSecret:"",callbackUrl:"https://md2feishu.xinqi.life/oauth-callback",accessToken:"",refreshToken:"",userInfo:null,targetType:"wiki",defaultFolderId:"",defaultFolderName:"\u6211\u7684\u7A7A\u95F4",defaultWikiSpaceId:"",defaultWikiSpaceName:"",defaultWikiNodeToken:"",defaultWikiNodeName:"",titleSource:"filename",frontMatterHandling:"remove",enableLinkShare:!0,linkSharePermission:"anyone_readable",enableSubDocumentUpload:!0,enableLocalImageUpload:!0,enableLocalAttachmentUpload:!0,codeBlockFilterLanguages:[],enableShareMarkInFrontMatter:!0,suppressShareNotices:!1,simpleSuccessNotice:!1},L={1061002:"\u53C2\u6570\u9519\u8BEF\uFF0C\u8BF7\u68C0\u67E5\u6587\u4EF6\u683C\u5F0F\u548C\u5927\u5C0F",1061005:"\u6587\u4EF6\u5927\u5C0F\u8D85\u51FA\u9650\u5236",1061006:"\u6587\u4EF6\u7C7B\u578B\u4E0D\u652F\u6301",99991663:"access_token \u65E0\u6548",99991664:"access_token \u5DF2\u8FC7\u671F",99991665:"refresh_token \u65E0\u6548",99991666:"refresh_token \u5DF2\u8FC7\u671F"},X="\u2705 \u5206\u4EAB\u6210\u529F\uFF1A{title}",b={note:{emoji:"\u{1F4DD}",color:"blue",title:"\u7B14\u8BB0"},info:{emoji:"\u2139\uFE0F",color:"blue",title:"\u4FE1\u606F"},tip:{emoji:"\u{1F4A1}",color:"green",title:"\u63D0\u793A"},hint:{emoji:"\u{1F4A1}",color:"green",title:"\u63D0\u793A"},warning:{emoji:"\u26A0\uFE0F",color:"yellow",title:"\u8B66\u544A"},caution:{emoji:"\u26A0\uFE0F",color:"yellow",title:"\u6CE8\u610F"},attention:{emoji:"\u26A0\uFE0F",color:"yellow",title:"\u6CE8\u610F"},error:{emoji:"\u274C",color:"red",title:"\u9519\u8BEF"},danger:{emoji:"\u26D4",color:"red",title:"\u5371\u9669"},failure:{emoji:"\u274C",color:"red",title:"\u5931\u8D25"},fail:{emoji:"\u274C",color:"red",title:"\u5931\u8D25"},missing:{emoji:"\u2753",color:"red",title:"\u7F3A\u5931"},success:{emoji:"\u2705",color:"green",title:"\u6210\u529F"},check:{emoji:"\u2705",color:"green",title:"\u68C0\u67E5"},done:{emoji:"\u2705",color:"green",title:"\u5B8C\u6210"},question:{emoji:"\u2753",color:"purple",title:"\u95EE\u9898"},help:{emoji:"\u2753",color:"purple",title:"\u5E2E\u52A9"},faq:{emoji:"\u2753",color:"purple",title:"\u5E38\u89C1\u95EE\u9898"},quote:{emoji:"\u{1F4AC}",color:"gray",title:"\u5F15\u7528"},cite:{emoji:"\u{1F4D6}",color:"gray",title:"\u5F15\u7528"},abstract:{emoji:"\u{1F4C4}",color:"cyan",title:"\u6458\u8981"},summary:{emoji:"\u{1F4C4}",color:"cyan",title:"\u603B\u7ED3"},tldr:{emoji:"\u{1F4C4}",color:"cyan",title:"TL;DR"},example:{emoji:"\u{1F4CB}",color:"purple",title:"\u793A\u4F8B"},todo:{emoji:"\u2611\uFE0F",color:"blue",title:"\u5F85\u529E"},default:{emoji:"\u{1F4CC}",color:"blue",title:"\u63D0\u793A"}};var V=require("obsidian");Y();var k=require("obsidian");Y();var m=class{constructor(s){this.localFiles=[];this.calloutBlocks=[];this.app=s}process(s){let e=s;return e=this.processWikiLinks(e),e=this.processBlockReferences(e),e=this.processTags(e),e=this.processEmbeds(e),e=this.processImages(e),e=this.cleanupWhitespace(e),e}processWikiLinks(s,e){return s.replace(/\[\[([^\]|]+)(\|([^\]]+))?\]\]/g,(t,o,r,A)=>{if(this.isFileReference(o)){let n=this.isImageFile(o);if(n?(e==null?void 0:e.enableLocalImageUpload)!==!1:(e==null?void 0:e.enableLocalAttachmentUpload)!==!1){let l=this.generatePlaceholder(),c={originalPath:o,fileName:this.extractFileName(o),placeholder:l,isImage:n,altText:A||o};return this.localFiles.push(c),l}else return t}else{let n=this.findLinkedMarkdownFile(o);if(n&&e&&e.enableSubDocumentUpload!==!1){let a=(0,k.normalizePath)(n.path);if(e.processedFiles.has(a))return i.warn(`\u26A0\uFE0F Circular reference detected for file: ${a}`),`\u{1F4DD} ${A||o} (\u5FAA\u73AF\u5F15\u7528)`;if(e.currentDepth>=e.maxDepth)return i.warn(`\u26A0\uFE0F Max depth reached for file: ${a}`),`\u{1F4DD} ${A||o} (\u6DF1\u5EA6\u9650\u5236)`;let l=this.generatePlaceholder(),c={originalPath:n.path,fileName:n.basename,placeholder:l,isImage:!1,isSubDocument:!0,altText:A||o};return this.localFiles.push(c),l}else return`\u{1F4DD} ${A||o}`}})}processBlockReferences(s){return s.replace(/\[\[([^#\]]+)#\^([^\]]+)\]\]/g,(e,t,o)=>`\u{1F4DD} ${t} (\u5757\u5F15\u7528: ${o})`)}processTags(s){return s.replace(/#([a-zA-Z0-9_\u4e00-\u9fff]+)/g,(e,t)=>`#${t}`)}processEmbeds(s,e){return s.replace(/!\[\[([^\]]+)\]\]/g,(t,o)=>{let r=this.isImageFile(o);if(r?(e==null?void 0:e.enableLocalImageUpload)!==!1:(e==null?void 0:e.enableLocalAttachmentUpload)!==!1){let n=this.generatePlaceholder(),a={originalPath:o,fileName:this.extractFileName(o),placeholder:n,isImage:r,altText:o};return this.localFiles.push(a),n}else return t})}processImages(s,e){return s.replace(/!\[([^\]]*)\]\(([^)]+)\)/g,(t,o,r)=>{if(r.startsWith("http://")||r.startsWith("https://"))return t;if((e==null?void 0:e.enableLocalImageUpload)!==!1){let A=this.generatePlaceholder(),n=o||"\u56FE\u7247",a={originalPath:r,fileName:this.extractFileName(r),placeholder:A,isImage:!0,altText:n};return this.localFiles.push(a),A}else return t})}processLinks(s){return s.replace(/\[([^\]]+)\]\(([^)]+)\)/g,(e,t,o)=>o.startsWith("obsidian://")?`${t}(${o})`:e)}cleanupWhitespace(s){return s=s.replace(/\n{3,}/g,`

`),s=s.replace(/[ \t]+$/gm,""),s=s.replace(/\s+$/,`
`),s}processCodeBlocks(s,e){let t=((e==null?void 0:e.codeBlockFilterLanguages)||[]).map(r=>r.toLowerCase());if(t.length===0)return s;let o=/(^|\n)(```|~~~)\s*([^\n]*)\n([\s\S]*?)\n\2\s*(?=\n|$)/g;return s.replace(o,(r,A,n,a,l)=>{let c=(a||"").trim().split(/\s+/)[0].toLowerCase();return c&&t.includes(c)?A||"":r})}processMathFormulas(s){return s=s.replace(/\$([^$]+)\$/g,(e,t)=>`\u{1F4D0} \u6570\u5B66\u516C\u5F0F: ${t}`),s=s.replace(/\$\$([^$]+)\$\$/g,(e,t)=>`
\u{1F4D0} \u6570\u5B66\u516C\u5F0F\u5757:
${t}
`),s}processHighlights(s){return s.replace(/==([^=]+)==/g,(e,t)=>`<mark>${t}</mark>`)}processCallouts(s){let e=/^>\s*\[!([^\]]+)\](-?)\s*([^\n]*)\n((?:(?:>[^\n]*|)\n?)*?)(?=\n(?!>)|$)/gm;return s.replace(e,(t,o,r,A,n)=>{let a=o.toLowerCase().trim();i.log(`\u{1F3A8} Processing Callout: type="${a}", foldable="${r}", title="${A}"`);let l=b[a]||b.default;i.log(`\u{1F3A8} Style mapping: emoji="${l.emoji}", color="${l.color}", title="${l.title}"`);let c=A.trim()||l.title;c=this.escapeMarkdownInTitle(c);let E=n.split(`
`).map(p=>p.startsWith(">")?p.replace(/^>\s?/,""):p).filter((p,u,Q)=>!(p===""&&u===Q.length-1)).join(`
`),I=this.generatePlaceholder();i.log(`\u{1F517} Generated placeholder: ${I}`);let C={placeholder:I,type:a,title:c,content:E,foldable:r==="-",backgroundColor:this.mapColorToFeishu(l.color,"background"),borderColor:this.mapColorToFeishu(l.color,"border"),textColor:this.mapColorToFeishu(l.color,"text"),emojiId:this.mapEmojiToFeishu(l.emoji)};return i.log("\u{1F4E6} Created CalloutInfo:",JSON.stringify(C,null,2)),this.calloutBlocks.push(C),i.log(`\u{1F4DA} Total callout blocks: ${this.calloutBlocks.length}`),I})}escapeMarkdownInTitle(s){return s.replace(/\*\*/g,"*")}mapColorToFeishu(s,e){var o;let t={red:{background:1,border:1,text:1},orange:{background:2,border:2,text:2},yellow:{background:3,border:3,text:3},green:{background:4,border:4,text:4},blue:{background:5,border:5,text:5},purple:{background:6,border:6,text:6},gray:{background:7,border:7,text:7},cyan:{background:5,border:5,text:5}};return((o=t[s])==null?void 0:o[e])||t.blue[e]}mapEmojiToFeishu(s){return{"\u{1F4DD}":"memo","\u2139\uFE0F":"information_source","\u{1F4A1}":"bulb","\u26A0\uFE0F":"warning","\u274C":"x","\u26D4":"no_entry","\u2753":"question","\u2705":"white_check_mark","\u{1F4AC}":"speech_balloon","\u{1F4D6}":"book","\u{1F4C4}":"page_facing_up","\u{1F4CB}":"clipboard","\u2611\uFE0F":"ballot_box_with_check","\u{1F4CC}":"pushpin"}[s]||"pushpin"}processComplete(s){let e=s;return e=this.processWikiLinks(e),e=this.processBlockReferences(e),e=this.processEmbeds(e),e=this.processImages(e),e=this.processLinks(e),e=this.processTags(e),e=this.processHighlights(e),e=this.processMathFormulas(e),e=this.processCodeBlocks(e),e=this.cleanupWhitespace(e),e}processCompleteWithFiles(s,e=3,t="remove",o=!0,r=!0,A=!0,n="filename",a=[]){this.localFiles=[],this.calloutBlocks=[];let{content:l,frontMatter:c}=this.processFrontMatter(s,t),g={maxDepth:e,currentDepth:0,processedFiles:new Set,enableSubDocumentUpload:o,enableLocalImageUpload:r,enableLocalAttachmentUpload:A,codeBlockFilterLanguages:a,frontMatterHandling:t,titleSource:n};return{content:this.processCompleteWithContext(l,g),localFiles:[...this.localFiles],calloutBlocks:[...this.calloutBlocks],frontMatter:c,extractedTitle:(c==null?void 0:c.title)||null}}generatePlaceholder(){let s=Date.now(),e=Math.random().toString(36).substring(2,8);return`__OB_CONTENT_${s}_${e}__`}extractFileName(s){return s.split(/[/\\]/).pop()||s}isFileReference(s){let e=this.extractFileName(s);return e.includes(".")&&e.lastIndexOf(".")>0}isImageFile(s){let e=[".jpg",".jpeg",".png",".gif",".bmp",".svg",".webp"],t=s.toLowerCase().substring(s.lastIndexOf("."));return e.includes(t)}getLocalFiles(){return[...this.localFiles]}getCalloutBlocks(){return[...this.calloutBlocks]}clearLocalFiles(){this.localFiles=[],this.calloutBlocks=[]}findLinkedMarkdownFile(s){var e;try{let t=s.trim();t=t.replace(/^\.\//,"").replace(/^\//,""),t.includes(".")||(t=t+".md");let o=(0,k.normalizePath)(t),r=this.app.vault.getFileByPath(o);if(!r){let A=(e=o.split("/").pop())==null?void 0:e.toLowerCase();A&&(r=this.app.vault.getMarkdownFiles().find(a=>a.name.toLowerCase()===A)||null)}if(!r){let A=s.trim().toLowerCase();r=this.app.vault.getMarkdownFiles().find(a=>a.basename.toLowerCase()===A)||null}return r?i.log(`\u2705 Found linked markdown file: "${s}" -> "${r.path}"`):i.log(`\u274C Linked markdown file not found: "${s}"`),r}catch(t){return i.error(`Error finding linked file for "${s}":`,t),null}}async processSubDocument(s,e,t="remove",o="filename"){try{let r=(0,k.normalizePath)(s.path);e.processedFiles.add(r);let A=await this.app.vault.read(s),{content:n,frontMatter:a}=this.processFrontMatter(A,t),l=this.extractTitle(s.basename,a,o),c={...e,currentDepth:e.currentDepth+1},g=[...this.localFiles];this.localFiles=[];let h=this.processCompleteWithContext(n,c),E=[...this.localFiles];return this.localFiles=g,{content:h,localFiles:E,frontMatter:a,extractedTitle:l}}catch(r){return i.error(`Error processing sub-document ${s.path}:`,r),{content:`\u274C \u65E0\u6CD5\u8BFB\u53D6\u5B50\u6587\u6863: ${s.basename}`,localFiles:[],frontMatter:null,extractedTitle:null}}}processCompleteWithContext(s,e){let t=s;return t=this.processCodeBlocks(t,e),t=this.processCallouts(t),t=this.processWikiLinks(t,e),t=this.processBlockReferences(t),t=this.processEmbeds(t,e),t=this.processImages(t,e),t=this.processLinks(t),t=this.processTags(t),t=this.processHighlights(t),t=this.processMathFormulas(t),t=this.cleanupWhitespace(t),t}parseFrontMatter(s){if(!s.startsWith(`---
`)&&!s.startsWith(`---\r
`))return{frontMatter:null,content:s};let e=s.split(`
`),t=-1;for(let A=1;A<e.length;A++)if(e[A].trim()==="---"){t=A;break}if(t===-1)return{frontMatter:null,content:s};let o=e.slice(1,t).join(`
`),r=e.slice(t+1).join(`
`);try{return{frontMatter:this.parseSimpleYaml(o),content:r}}catch(A){return i.warn("Failed to parse Front Matter:",A),{frontMatter:null,content:s}}}parseSimpleYaml(s){let e={},t=s.split(`
`);for(let o of t){let r=o.trim();if(!r||r.startsWith("#"))continue;let A=r.indexOf(":");if(A===-1)continue;let n=r.substring(0,A).trim(),a=r.substring(A+1).trim();(a.startsWith('"')&&a.endsWith('"')||a.startsWith("'")&&a.endsWith("'"))&&(a=a.slice(1,-1)),e[n]=a}return e}processFrontMatter(s,e){let{frontMatter:t,content:o}=this.parseFrontMatter(s);if(!t)return{content:s,frontMatter:null};if(e==="remove")return{content:o,frontMatter:t};{let r=s.split(`
`),A=-1;for(let n=1;n<r.length;n++)if(r[n].trim()==="---"){A=n;break}if(A!==-1)return{content:"```yaml\n"+r.slice(1,A).join(`
`)+"\n```\n\n"+o,frontMatter:t}}return{content:o,frontMatter:t}}extractTitle(s,e,t){return t==="frontmatter"&&(e!=null&&e.title)?e.title:s}addShareMarkToFrontMatter(s,e){let t=new Date,o=new Date(t.getTime()+8*60*60*1e3),r=o.getUTCFullYear(),A=String(o.getUTCMonth()+1).padStart(2,"0"),n=String(o.getUTCDate()).padStart(2,"0"),a=String(o.getUTCHours()).padStart(2,"0"),l=String(o.getUTCMinutes()).padStart(2,"0"),c=`${r}-${A}-${n} ${a}:${l}`;if(!s.startsWith(`---
`)&&!s.startsWith(`---\r
`))return["---","feishushare: true",`feishu_url: "${e}"`,`feishu_shared_at: "${c}"`,"---",""].join(`
`)+s;let g=s.split(`
`),h=-1;for(let Q=1;Q<g.length;Q++)if(g[Q].trim()==="---"){h=Q;break}if(h===-1)return s;let E=g.slice(0,h+1),I=g.slice(h+1),C={feishushare:"true",feishu_url:`"${e}"`,feishu_shared_at:`"${c}"`},p=new Set;for(let Q=1;Q<E.length-1;Q++){let G=E[Q].trim();if(G&&!G.startsWith("#")){let S=G.indexOf(":");if(S!==-1){let F=G.substring(0,S).trim();C.hasOwnProperty(F)&&(E[Q]=`${F}: ${C[F]}`,p.add(F))}}}let u=[];for(let[Q,w]of Object.entries(C))p.has(Q)||u.push(`${Q}: ${w}`);return u.length>0&&E.splice(E.length-1,0,...u),[...E,...I].join(`
`)}};var O=class{constructor(){this.lastCallTime=0;this.callCount=0;this.resetTime=0}async throttle(s){let t={document:{perSecond:2,perMinute:90},import:{perSecond:1,perMinute:90},block:{perSecond:2,perMinute:150}}[s],o=Date.now();if(o-this.resetTime>6e4&&(this.callCount=0,this.resetTime=o),this.callCount>=t.perMinute){let n=6e4-(o-this.resetTime);i.log(`\u23F3 Rate limit reached, waiting ${n}ms...`),await new Promise(a=>setTimeout(a,n)),this.callCount=0,this.resetTime=Date.now()}let r=o-this.lastCallTime,A=1e3/t.perSecond;if(r<A){let n=A-r;await new Promise(a=>setTimeout(a,n))}this.lastCallTime=Date.now(),this.callCount++}},T=class{constructor(s,e,t){this.app=s,this.settings=e,this.feishuService=t}updateSettings(s){this.settings=s}isNetworkImage(s){return s.startsWith("http://")||s.startsWith("https://")}isImageHosting(s){let e=["imgur.com","i.imgur.com","github.com","raw.githubusercontent.com","gitee.com","gitee.io","sm.ms","i.loli.net","qiniu.com","qiniucdn.com","aliyuncs.com","alicdn.com","tencent-cloud.com","myqcloud.com","jsdelivr.net","unpkg.com","picgo.org","pic.rmb.bdstatic.com"];try{let t=new URL(s);return e.some(o=>t.hostname.includes(o)||t.hostname.endsWith(o))}catch(t){return!1}}async downloadImage(s){try{i.log(`\u{1F4E5} Downloading image from: ${s}`);let e=await(0,V.requestUrl)({url:s,method:"GET",headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"}});if(e.status!==200)throw new Error(`HTTP ${e.status}: Request failed`);let t=e.arrayBuffer;return i.log(`\u2705 Successfully downloaded image: ${t.byteLength} bytes`),t}catch(e){throw i.error(`\u274C Failed to download image from ${s}:`,e),new Error(`\u56FE\u7247\u4E0B\u8F7D\u5931\u8D25: ${e.message}`)}}async readLocalImage(s){try{i.log(`\u{1F4C1} Reading local image: ${s}`);let e=(0,V.normalizePath)(s);if(!await this.app.vault.adapter.exists(e))throw new Error(`\u6587\u4EF6\u4E0D\u5B58\u5728: ${e}`);let o=await this.app.vault.adapter.readBinary(e);return i.log(`\u2705 Successfully read local image: ${o.byteLength} bytes`),o}catch(e){throw i.error(`\u274C Failed to read local image ${s}:`,e),new Error(`\u672C\u5730\u56FE\u7247\u8BFB\u53D6\u5931\u8D25: ${e.message}`)}}async uploadImageToDocument(s,e,t,o){try{if(i.log(`\u{1F4E4} Uploading image to document ${s}, block ${e}`),!await this.feishuService.ensureValidToken())throw new Error("Token\u65E0\u6548\uFF0C\u8BF7\u91CD\u65B0\u6388\u6743");let A="---7MA4YWxkTrZu0gW",n=t.byteLength,a=[`--${A}`,'Content-Disposition: form-data; name="file_name"',"",o,`--${A}`,'Content-Disposition: form-data; name="parent_type"',"","docx_image",`--${A}`,'Content-Disposition: form-data; name="parent_node"',"",e,`--${A}`,'Content-Disposition: form-data; name="size"',"",n.toString(),`--${A}`,'Content-Disposition: form-data; name="extra"',"",JSON.stringify({drive_route_token:s}),`--${A}`,`Content-Disposition: form-data; name="file"; filename="${o}"`,`Content-Type: ${this.getImageMimeType(o)}`,"",""].join(`\r
`),l=`\r
--${A}--\r
`,c=new TextEncoder().encode(a),g=new TextEncoder().encode(l),h=c.length+n+g.length,E=new Uint8Array(h),I=0;E.set(c,I),I+=c.length,E.set(new Uint8Array(t),I),I+=n,E.set(g,I);let C=await(0,V.requestUrl)({url:R.UPLOAD_URL,method:"POST",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":`multipart/form-data; boundary=${A}`},body:E.buffer}),p=C.json||JSON.parse(C.text);if(p.code!==0)throw new Error(p.msg||"\u56FE\u7247\u4E0A\u4F20\u5931\u8D25");let u=p.data.file_token;return i.log(`\u2705 Successfully uploaded image, token: ${u}`),u}catch(r){throw i.error("\u274C Failed to upload image to document:",r),new Error(`\u56FE\u7247\u4E0A\u4F20\u5931\u8D25: ${r.message}`)}}getImageMimeType(s){switch(s.toLowerCase().split(".").pop()){case"jpg":case"jpeg":return"image/jpeg";case"png":return"image/png";case"gif":return"image/gif";case"webp":return"image/webp";case"svg":return"image/svg+xml";case"bmp":return"image/bmp";default:return"image/jpeg"}}async processImageBlock(s,e,t){try{i.log(`\u{1F5BC}\uFE0F Processing image block: ${t.fileName}`);let o;this.isNetworkImage(t.originalPath)?o=await this.downloadImage(t.originalPath):o=await this.readLocalImage(t.originalPath);let r=await this.uploadImageToDocument(s,e,o,t.fileName);return i.log(`\u2705 Image block processed successfully: ${r}`),r}catch(o){throw i.error("\u274C Failed to process image block:",o),o}}async processImageBlocks(s,e){let t=new Map;for(let[o,r]of e)try{let A=await this.processImageBlock(s,o,r);t.set(o,A)}catch(A){i.warn(`\u26A0\uFE0F Failed to process image block ${o}, skipping...`)}return t}async updateImageBlockToken(s,e,t){try{i.log(`\u{1F504} Updating image block ${e} with token ${t}`);let o=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${e}`,method:"PATCH",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify({replace_image:{token:t}})}),r=o.json||JSON.parse(o.text);if(r.code!==0)throw new Error(r.msg||"\u56FE\u7247\u5757\u66F4\u65B0\u5931\u8D25");i.log(`\u2705 Successfully updated image block ${e}`)}catch(o){throw i.error("\u274C Failed to update image block:",o),new Error(`\u56FE\u7247\u5757\u66F4\u65B0\u5931\u8D25: ${o.message}`)}}createImagePlaceholderBlock(s){var o,r,A,n;let e={width:((o=s.image)==null?void 0:o.width)||"\u672A\u77E5",height:((r=s.image)==null?void 0:r.height)||"\u672A\u77E5",token:((A=s.image)==null?void 0:A.token)||"\u65E0",align:((n=s.image)==null?void 0:n.align)||1};return{block_type:2,text:{elements:[{text_run:{content:`\u{1F5BC}\uFE0F [\u56FE\u7247\u5360\u4F4D\u7B26]
\u{1F4D0} \u5C3A\u5BF8: ${e.width}\xD7${e.height}px
\u{1F517} \u539F\u59CBToken: ${e.token}
\u{1F4A1} \u8BF4\u660E: \u7531\u4E8E\u98DE\u4E66API\u9650\u5236\uFF0C\u56FE\u7247\u65E0\u6CD5\u8DE8\u6587\u6863\u590D\u5236
\u{1F6E0}\uFE0F \u89E3\u51B3\u65B9\u6848: \u8BF7\u624B\u52A8\u91CD\u65B0\u63D2\u5165\u56FE\u7247\uFF0C\u6216\u4F7F\u7528\u63D2\u4EF6\u7684"\u91CD\u65B0\u5904\u7406\u56FE\u7247"\u529F\u80FD`}}]}}}async downloadImageFromFeishu(s){try{if(i.log(`\u{1F4E5} Downloading image from Feishu with token: ${s}`),!await this.feishuService.ensureValidToken())throw new Error("Token\u65E0\u6548\uFF0C\u8BF7\u91CD\u65B0\u6388\u6743");let t=await(0,V.requestUrl)({url:`${R.BASE_URL}/drive/v1/medias/${s}/download`,method:"GET",headers:{Authorization:`Bearer ${this.settings.accessToken}`}});if(t.status!==200)throw new Error(`HTTP ${t.status}: Download failed`);let o=t.arrayBuffer;return i.log(`\u2705 Successfully downloaded image: ${o.byteLength} bytes`),o}catch(e){throw i.error("\u274C Failed to download image from Feishu:",e),new Error(`\u56FE\u7247\u4E0B\u8F7D\u5931\u8D25: ${e.message}`)}}async reprocessImageBlock(s,e,t){try{i.log(`\u{1F504} Reprocessing image block ${e.block_id} with source token ${t}`);let o=await this.downloadImageFromFeishu(t),r=`image_${Date.now()}.jpg`,A=await this.uploadImageToDocument(s,e.block_id,o,r);return await this.updateImageBlockToken(s,e.block_id,A),i.log(`\u2705 Successfully reprocessed image block ${e.block_id}`),!0}catch(o){return i.error(`\u274C Failed to reprocess image block ${e.block_id}:`,o),!1}}},D=class{constructor(s,e){this.refreshPromise=null;this.documentIdCache=new Map;this.settings=s,this.app=e,this.markdownProcessor=new m(e),this.rateLimitController=new O,this.imageProcessingService=new T(e,s,this)}updateSettings(s){this.settings=s,this.imageProcessingService.updateSettings(s)}generateAuthUrl(){if(!this.settings.appId||!this.settings.appSecret)throw new Error("\u8BF7\u5148\u5728\u8BBE\u7F6E\u4E2D\u914D\u7F6E\u98DE\u4E66\u5E94\u7528\u7684 App ID \u548C App Secret");let s=this.generateRandomState();localStorage.setItem("feishu-oauth-state",s);let e=this.settings.callbackUrl,t=new URLSearchParams({client_id:this.settings.appId,redirect_uri:e,scope:R.SCOPES,state:s,response_type:"code"});return`${R.AUTHORIZE_URL}?${t.toString()}`}async processCallback(s){try{let e=new URL(s),t=e.searchParams.get("code"),o=e.searchParams.get("state"),r=e.searchParams.get("error");if(r)return i.error("OAuth error:",r),!1;if(!t)return i.error("No authorization code in callback"),!1;let A=localStorage.getItem("feishu-oauth-state");return A&&o!==A?(i.error("State mismatch"),!1):await this.handleOAuthCallback(t)}catch(e){return i.error("Process callback error:",e),!1}}async handleOAuthCallback(s){try{if(!this.settings.appId||!this.settings.appSecret)throw new Error("\u5E94\u7528\u914D\u7F6E\u4E0D\u5B8C\u6574");let e=await this.exchangeCodeForToken(s);if(!e.success)throw new Error(e.error||"\u83B7\u53D6\u8BBF\u95EE\u4EE4\u724C\u5931\u8D25");let t=await this.getUserInfo();if(t)return this.settings.userInfo=t,new V.Notice("\u2705 \u98DE\u4E66\u6388\u6743\u6210\u529F\uFF01"),!0;throw new Error("\u83B7\u53D6\u7528\u6237\u4FE1\u606F\u5931\u8D25")}catch(e){return i.error("OAuth callback error:",e),new V.Notice(`\u274C \u6388\u6743\u5931\u8D25: ${e.message}`),!1}}async exchangeCodeForToken(s){var e,t;try{let o={grant_type:"authorization_code",client_id:this.settings.appId,client_secret:this.settings.appSecret,code:s,redirect_uri:this.settings.callbackUrl},r;try{r=await(0,V.requestUrl)({url:R.TOKEN_URL,method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)})}catch(n){throw i.error("\u274C HTTP request failed:",n),n.response&&(i.error("Error response status:",n.response.status),i.error("Error response headers:",n.response.headers),i.error("Error response body:",n.response.body)),n}let A;if(r.json&&typeof r.json=="object")A=r.json;else if(r.text){let n=r.text;A=JSON.parse(n)}else i.log("Trying to call response.json()..."),A=await r.json();if(A.code===0){let n=A.access_token||((e=A.data)==null?void 0:e.access_token),a=A.refresh_token||((t=A.data)==null?void 0:t.refresh_token);return n?(this.settings.accessToken=n,this.settings.refreshToken=a||"",{success:!0}):(i.error("\u274C No access token in response:",A),{success:!1,error:"No access token received"})}else return i.error("\u274C Token exchange failed:",A),{success:!1,error:A.error_description||A.msg||`Error code: ${A.code}`}}catch(o){return i.error("Token exchange error:",o),o.response&&(i.error("Error response status:",o.response.status),i.error("Error response data:",o.response.data)),o.message&&o.message.includes("Request failed, status 400")&&(i.error("400 Bad Request - checking request format..."),i.error("Request URL:",R.TOKEN_URL),i.error("App ID:",this.settings.appId?"Present":"Missing"),i.error("App Secret:",this.settings.appSecret?"Present":"Missing")),{success:!1,error:o.message}}}async getUserInfo(){try{let s=await(0,V.requestUrl)({url:R.USER_INFO_URL,method:"GET",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"}}),e=s.json||JSON.parse(s.text);return e.code===0?{name:e.data.name,avatar_url:e.data.avatar_url,email:e.data.email,user_id:e.data.user_id}:(i.error("Get user info failed:",e),null)}catch(s){return i.error("Get user info error:",s),null}}async shareMarkdownWithFiles(s,e,t,o=!1){try{if(t&&t.setMessage("\u{1F50D} \u6B63\u5728\u68C0\u67E5\u6388\u6743\u72B6\u6001..."),!await this.ensureValidTokenWithReauth(t)){let A="\u6388\u6743\u672A\u5B8C\u6210\u3002\u8BF7\u70B9\u51FB\u5206\u4EAB\u6309\u94AE\u91CD\u65B0\u5C1D\u8BD5\uFF0C\u5E76\u786E\u4FDD\u5728\u6D4F\u89C8\u5668\u4E2D\u5B8C\u6210\u6388\u6743\u6D41\u7A0B\u3002";throw t&&(t.setMessage(`\u274C ${A}`),setTimeout(()=>t.hide(),8e3)),new Error(A)}return this.settings.targetType==="wiki"?await this.shareToWiki(s,e,t,o):await this.shareToDrive(s,e,t,o)}catch(r){return i.error("Share markdown error:",r),{success:!1,error:r.message}}}async shareToDrive(s,e,t,o=!1){try{t&&t.setMessage("\u{1F4E4} \u6B63\u5728\u4E0A\u4F20\u6587\u4EF6\u5230\u98DE\u4E66...");let r=await this.uploadMarkdownFile(s,e.content);if(!r.success)throw new Error(r.error||"\u6587\u4EF6\u4E0A\u4F20\u5931\u8D25");if(!r.fileToken)throw new Error("\u6587\u4EF6\u4E0A\u4F20\u6210\u529F\u4F46\u672A\u83B7\u53D6\u5230\u6587\u4EF6\u4EE4\u724C");let A=r.url||`https://feishu.cn/file/${r.fileToken}`;try{let n=s.endsWith(".md")?s.slice(0,-3):s,a=await this.createImportTaskWithCorrectFolder(r.fileToken,n);if(a.success&&a.ticket){i.log("Step 3: Waiting for import completion (15s timeout)...");let l=await this.waitForImportCompletionWithTimeout(a.ticket,15e3);if(i.log(`\u{1F50D} IMPORT RESULT DEBUG: success=${l.success}, documentToken=${l.documentToken}`),l.success&&l.documentToken){let c=`https://feishu.cn/docx/${l.documentToken}`,g=[];if(this.settings.enableLinkShare&&l.documentToken){let C=(async()=>{try{t&&t.setMessage("\u{1F517} \u6B63\u5728\u8BBE\u7F6E\u6587\u6863\u5206\u4EAB\u6743\u9650..."),await this.setDocumentSharePermissions(l.documentToken,!0),i.log("\u2705 Document share permissions set successfully")}catch(p){i.warn("\u26A0\uFE0F Failed to set document share permissions:",p)}})();g.push(C)}g.length>0&&await Promise.allSettled(g);let h=e.localFiles.length>0,E=e.calloutBlocks&&e.calloutBlocks.length>0;if(i.log(`\u{1F50D} NEW MODE DEBUG: hasLocalFiles=${h}, hasCalloutBlocks=${E}`),i.log(`\u{1F50D} NEW MODE DEBUG: localFiles.length=${e.localFiles.length}`),i.log("\u{1F50D} NEW MODE DEBUG: calloutBlocks=",e.calloutBlocks),h||E)try{let C=e.localFiles.filter(u=>u.isSubDocument),p=e.localFiles.filter(u=>!u.isSubDocument);C.length>0&&(t&&t.setMessage(`\u{1F4C4} \u6B63\u5728\u5904\u7406 ${C.length} \u4E2A\u5B50\u6587\u6863...`),await this.processSubDocuments(l.documentToken,C,t)),(p.length>0||E)&&await this.processAllPlaceholders(l.documentToken,p,e.calloutBlocks,t)}catch(C){i.warn("\u26A0\uFE0F File upload processing failed:",C)}i.log(`\u{1F4DD} Source file will be automatically deleted by Feishu after import: ${r.fileToken}`);let I={success:!0,title:n,url:c,sourceFileToken:o?r.fileToken:void 0};return o&&r.fileToken&&i.log(`\u{1F4DD} Returning source file token for temporary document: ${r.fileToken}`),i.log(`\u2705 Document creation completed successfully: ${c}`),I}else return i.warn("\u26A0\uFE0F Import task failed or timed out, falling back to file URL"),i.warn("Final result details:",l),{success:!0,title:s,url:A,sourceFileToken:o?r.fileToken:void 0}}else return i.warn("\u26A0\uFE0F Failed to create import task, falling back to file URL"),i.warn("Import result details:",a),{success:!0,title:s,url:A,sourceFileToken:o?r.fileToken:void 0}}catch(n){return i.warn("\u26A0\uFE0F Import process failed, falling back to file URL:",n.message),i.error("Import error details:",n),{success:!0,title:s,url:A,sourceFileToken:o?r.fileToken:void 0}}}catch(r){return i.error("Share markdown error:",r),{success:!1,error:r.message}}}async shareToWiki(s,e,t,o=!1){try{t&&t.setMessage("\u{1F4E4} \u6B63\u5728\u4E0A\u4F20\u6587\u4EF6\u5230\u98DE\u4E66\u4E91\u7A7A\u95F4...");let r=await this.uploadMarkdownFile(s,e.content);if(!r.success)throw new Error(r.error||"\u6587\u4EF6\u4E0A\u4F20\u5931\u8D25");if(!r.fileToken)throw new Error("\u6587\u4EF6\u4E0A\u4F20\u6210\u529F\u4F46\u672A\u83B7\u53D6\u5230\u6587\u4EF6\u4EE4\u724C");t&&t.setMessage("\u{1F504} \u6B63\u5728\u8F6C\u6362\u4E3A\u98DE\u4E66\u6587\u6863...");let A=s.endsWith(".md")?s.slice(0,-3):s,n=await this.createImportTaskWithCorrectFolder(r.fileToken,A);if(!n.success||!n.ticket)throw new Error("\u521B\u5EFA\u5BFC\u5165\u4EFB\u52A1\u5931\u8D25");let a=await this.waitForImportCompletionWithTimeout(n.ticket,15e3);if(!a.success||!a.documentToken)throw new Error("\u6587\u6863\u5BFC\u5165\u5931\u8D25\u6216\u8D85\u65F6");if(t&&t.setMessage("\u{1F4DA} \u6B63\u5728\u79FB\u52A8\u5230\u77E5\u8BC6\u5E93..."),!(await this.moveDocToWiki(this.settings.defaultWikiSpaceId,a.documentToken,"docx",this.settings.defaultWikiNodeToken||void 0)).success){i.warn("\u26A0\uFE0F Failed to move to wiki, falling back to cloud document");let I=`https://feishu.cn/docx/${a.documentToken}`;return{success:!0,title:A,url:I,sourceFileToken:o?r.fileToken:void 0}}let c=a.documentToken,g=`https://feishu.cn/docx/${a.documentToken}`,h=e.localFiles.length>0,E=e.calloutBlocks&&e.calloutBlocks.length>0;if(i.log(`\u{1F50D} WIKI MODE DEBUG: hasLocalFiles=${h}, hasCalloutBlocks=${E}`),i.log(`\u{1F50D} WIKI MODE DEBUG: localFiles.length=${e.localFiles.length}`),i.log("\u{1F50D} WIKI MODE DEBUG: calloutBlocks=",e.calloutBlocks),h||E)try{let I=e.localFiles.filter(p=>p.isSubDocument),C=e.localFiles.filter(p=>!p.isSubDocument);I.length>0&&(t&&t.setMessage(`\u{1F4C4} \u6B63\u5728\u5904\u7406 ${I.length} \u4E2A\u5B50\u6587\u6863...`),await this.processSubDocuments(c,I,t)),(C.length>0||E)&&await this.processAllPlaceholders(c,C,e.calloutBlocks,t)}catch(I){i.warn("\u26A0\uFE0F File upload processing failed:",I)}if(this.settings.enableLinkShare&&c)try{t&&t.setMessage("\u{1F517} \u6B63\u5728\u8BBE\u7F6E\u6587\u6863\u5206\u4EAB\u6743\u9650..."),await this.setDocumentSharePermissions(c,!0),i.log("\u2705 Document share permissions set successfully")}catch(I){i.warn("\u26A0\uFE0F Failed to set document share permissions:",I)}return{success:!0,title:A,url:g,sourceFileToken:o?r.fileToken:void 0}}catch(r){return i.error("Share to wiki error:",r),{success:!1,error:r.message}}}async shareMarkdown(s,e,t){try{if(t&&t.setMessage("\u{1F50D} \u6B63\u5728\u68C0\u67E5\u6388\u6743\u72B6\u6001..."),!await this.ensureValidTokenWithReauth(t)){let n="\u6388\u6743\u672A\u5B8C\u6210\u3002\u8BF7\u70B9\u51FB\u5206\u4EAB\u6309\u94AE\u91CD\u65B0\u5C1D\u8BD5\uFF0C\u5E76\u786E\u4FDD\u5728\u6D4F\u89C8\u5668\u4E2D\u5B8C\u6210\u6388\u6743\u6D41\u7A0B\u3002";throw t&&(t.setMessage(`\u274C ${n}`),setTimeout(()=>t.hide(),8e3)),new Error(n)}t&&t.setMessage("\u{1F4E4} \u6B63\u5728\u4E0A\u4F20\u6587\u4EF6\u5230\u98DE\u4E66...");let r=await this.uploadMarkdownFile(s,e);if(!r.success)throw new Error(r.error||"\u6587\u4EF6\u4E0A\u4F20\u5931\u8D25");if(!r.fileToken)throw new Error("\u6587\u4EF6\u4E0A\u4F20\u6210\u529F\u4F46\u672A\u83B7\u53D6\u5230\u6587\u4EF6\u4EE4\u724C");let A=`https://feishu.cn/file/${r.fileToken}`;t&&t.setMessage("\u{1F504} \u6B63\u5728\u8F6C\u6362\u4E3A\u98DE\u4E66\u6587\u6863...");try{let n=s.endsWith(".md")?s.slice(0,-3):s,a=await this.createImportTaskWithCorrectFolder(r.fileToken,n);if(a.success&&a.ticket){i.log("Step 3: Waiting for import completion (15s timeout)...");let l=await this.waitForImportCompletionWithTimeout(a.ticket,15e3);if(l.success&&l.documentToken){let c=`https://feishu.cn/docx/${l.documentToken}`,g=[];if(this.settings.enableLinkShare&&l.documentToken){let h=(async()=>{try{t&&t.setMessage("\u{1F517} \u6B63\u5728\u8BBE\u7F6E\u6587\u6863\u5206\u4EAB\u6743\u9650..."),await this.setDocumentSharePermissions(l.documentToken,!0),i.log("\u2705 Document share permissions set successfully")}catch(E){i.warn("\u26A0\uFE0F Failed to set document share permissions:",E)}})();g.push(h)}return i.log(`\u{1F4DD} Source file will be automatically deleted by Feishu: ${r.fileToken}`),await Promise.allSettled(g),{success:!0,title:n,url:c}}else return i.warn("\u26A0\uFE0F Import task failed or timed out, falling back to file URL"),i.warn("Final result details:",l),{success:!0,title:s,url:A}}else return i.warn("\u26A0\uFE0F Failed to create import task, falling back to file URL"),i.warn("Import result details:",a),{success:!0,title:s,url:A}}catch(n){return i.warn("\u26A0\uFE0F Import process failed, falling back to file URL:",n.message),i.error("Import error details:",n),{success:!0,title:s,url:A}}}catch(o){return i.error("Share markdown error:",o),{success:!1,error:o.message}}}async getFolderList(s){try{if(!await this.ensureValidToken())throw new Error("Token\u65E0\u6548\uFF0C\u8BF7\u91CD\u65B0\u6388\u6743");let t=`${R.BASE_URL}/drive/v1/files`,o=new URLSearchParams({folder_token:s||"",page_size:"50"}),r=await(0,V.requestUrl)({url:`${t}?${o.toString()}`,method:"GET",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"}}),A=r.json||JSON.parse(r.text);if(A.code===0)return{code:0,data:{folders:A.data.files.filter(a=>a.type==="folder").map(a=>({...a,folder_token:a.token,token:a.token})),has_more:A.data.has_more}};throw new Error(A.msg||"\u83B7\u53D6\u6587\u4EF6\u5939\u5217\u8868\u5931\u8D25")}catch(e){throw i.error("Get folder list error:",e),e}}async getTenantAccessToken(){try{if(!this.settings.appId||!this.settings.appSecret)return i.error("\u274C App ID or App Secret not configured"),null;let s={app_id:this.settings.appId,app_secret:this.settings.appSecret},e=await(0,V.requestUrl)({url:`${R.BASE_URL}/auth/v3/tenant_access_token/internal`,method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)}),t=e.json||JSON.parse(e.text);return i.log("\u{1F4CB} Tenant token response:",t),t.code===0?(i.log("\u2705 Got tenant access token"),t.tenant_access_token):(i.error(`\u274C Failed to get tenant token - Code: ${t.code}, Message: ${t.msg}`),null)}catch(s){return i.error("\u274C Get tenant token error:",s),null}}async testApiConnection(){try{if(!this.settings.accessToken)return{success:!1,error:"No access token available"};i.log("\u{1F9EA} Testing API connection with user info endpoint");let s=await(0,V.requestUrl)({url:R.USER_INFO_URL,method:"GET",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"}});i.log(`\u{1F4E5} User info response status: ${s.status}`),i.log("\u{1F4E5} User info response:",s.json);let e=s.json||JSON.parse(s.text);return e.code===0?{success:!0,userInfo:e.data}:{success:!1,error:`API Error: ${e.code} - ${e.msg}`}}catch(s){return i.error("\u274C API connection test failed:",s),{success:!1,error:s.message}}}async getWikiSpaceList(){try{let s=this.settings.accessToken,e="user";if(i.log(`\u{1F50D} Initial token check - User token available: ${!!s}`),s&&i.log(`\u{1F511} User token preview: ${s.substring(0,20)}...`),s||(i.log("\u{1F50D} No user token, trying tenant token..."),s=await this.getTenantAccessToken(),e="tenant",s&&i.log(`\u{1F511} Tenant token preview: ${s.substring(0,20)}...`)),!s)throw i.error("\u274C No valid token available"),new Error("\u65E0\u6CD5\u83B7\u53D6\u6709\u6548\u7684\u8BBF\u95EE\u4EE4\u724C\uFF0C\u8BF7\u91CD\u65B0\u6388\u6743");if(i.log(`\u2705 Using ${e} token for API call`),e==="user"){i.log("\u{1F9EA} Testing API connection before wiki call...");let a=await this.testApiConnection();i.log("\u{1F9EA} API test result:",a),a.success?i.log("\u2705 API connection test passed"):i.error(`\u274C API connection test failed: ${a.error}`)}let t=`${R.BASE_URL}/wiki/v2/spaces`,o=new URLSearchParams({page_size:"50"});i.log(`\u{1F50D} Calling wiki API: ${t}?${o.toString()}`),i.log(`\u{1F511} Using ${e} token: ${s.substring(0,20)}...`);let r,A;try{i.log(`\u{1F680} Making request to: ${t}?${o.toString()}`),i.log(`\u{1F511} Authorization header: Bearer ${s.substring(0,10)}...`),r=await(0,V.requestUrl)({url:`${t}?${o.toString()}`,method:"GET",headers:{Authorization:`Bearer ${s}`,"Content-Type":"application/json"}}),i.log(`\u{1F4E5} Response received - Status: ${r.status}`),i.log("\u{1F4E5} Response headers:",r.headers),i.log("\u{1F4E5} Response text:",r.text),i.log("\u{1F4E5} Response json:",r.json),A=r.json||JSON.parse(r.text),i.log("\u{1F4CB} Parsed response data:",A)}catch(a){i.error("\u274C Request failed with error:",a),i.error(`\u274C Error type: ${typeof a}`),i.error(`\u274C Error constructor: ${a.constructor.name}`);for(let l in a)i.log(`\u274C Error.${l}:`,a[l]);if(a.status===400&&a.headers){i.log("\u{1F50D} Attempting to extract response body from 400 error...");try{let l=await fetch(`${t}?${o.toString()}`,{method:"GET",headers:{Authorization:`Bearer ${s}`,"Content-Type":"application/json"}}),c=await l.text();if(i.log(`\u{1F50D} Fetch response status: ${l.status}`),i.log(`\u{1F50D} Fetch response text: ${c}`),c)try{let g=JSON.parse(c);i.log("\u{1F50D} Parsed error data from fetch:",g)}catch(g){i.log("\u{1F50D} Failed to parse fetch response as JSON:",g)}}catch(l){i.log("\u{1F50D} Fetch attempt failed:",l)}}throw a}let n=A;if(n.code===0)return i.log(`\u2705 Successfully got ${n.data.items.length} wiki spaces`),n.data.items;if(i.error(`\u274C Wiki API error - Code: ${n.code}, Message: ${n.msg}`),e==="user"){i.log("\u{1F504} User token failed, trying tenant token...");let a=await this.getTenantAccessToken();if(a){let l=await(0,V.requestUrl)({url:`${t}?${o.toString()}`,method:"GET",headers:{Authorization:`Bearer ${a}`,"Content-Type":"application/json"}}),c=l.json||JSON.parse(l.text);if(c.code===0)return i.log(`\u2705 Successfully got ${c.data.items.length} wiki spaces with tenant token`),c.data.items}}throw new Error(n.msg||"\u83B7\u53D6\u77E5\u8BC6\u7A7A\u95F4\u5217\u8868\u5931\u8D25")}catch(s){i.error("\u274C Get wiki space list error:",s);let e="Unknown error",t="Unknown",o="",r=null,A="";try{if(A=JSON.stringify(s,Object.getOwnPropertyNames(s),2),i.error(`\u274C Complete error object: ${A}`),s.message&&(e=s.message),s.status&&(t=s.status),s.text&&(o=s.text,i.log(`\u{1F4E5} Error response text from error.text: ${o}`)),s.json&&(r=s.json,o=JSON.stringify(r),i.log("\u{1F4E5} Error response json from error.json:",r),r.code&&(t=r.code),(r.msg||r.message)&&(e=r.msg||r.message)),s.response&&(o=s.response.text||s.response.data||"",i.log(`\u{1F4E5} Error response text from error.response: ${o}`),o&&!r))try{r=JSON.parse(o),t=r.code||t,e=r.msg||r.message||e,i.log("\u{1F4CB} Parsed error data from response:",r)}catch(a){i.log("Failed to parse error response:",a)}if(e.includes("Request failed, status")){let a=e.match(/status (\d+)/);a&&(t=parseInt(a[1]),i.log(`\u{1F4CB} Extracted status code from message: ${t}`))}}catch(a){i.log("Error parsing error details:",a)}throw i.error("\u274C Final Error Summary:"),i.error(`   - Code: ${t}`),i.error(`   - Message: ${e}`),i.error(`   - Response Text: ${o}`),i.error(`   - Error Data: ${r?JSON.stringify(r):"null"}`),e.includes("400")||t==="400"||t===400||t==="131006"||e.includes("permission")||e.includes("\u6743\u9650")?new Error(`\u83B7\u53D6\u77E5\u8BC6\u5E93\u5217\u8868\u5931\u8D25 (\u9519\u8BEF\u7801: ${t})\uFF1A
${e}

\u53EF\u80FD\u7684\u89E3\u51B3\u65B9\u6848\uFF1A
1. \u68C0\u67E5\u5E94\u7528\u662F\u5426\u5DF2\u7533\u8BF7\u77E5\u8BC6\u5E93\u76F8\u5173\u6743\u9650\uFF08wiki:wiki \u6216 wiki:wiki.readonly\uFF09
2. \u786E\u8BA4\u5E94\u7528\u5DF2\u88AB\u6DFB\u52A0\u4E3A\u77E5\u8BC6\u5E93\u6210\u5458\u6216\u7BA1\u7406\u5458
3. \u9A8C\u8BC1App ID\u548CApp Secret\u914D\u7F6E\u662F\u5426\u6B63\u786E
4. \u68C0\u67E5\u5E94\u7528\u662F\u5426\u5DF2\u6B63\u786E\u53D1\u5E03
5. \u8BE6\u7EC6\u914D\u7F6E\u65B9\u6CD5\u8BF7\u53C2\u8003\u98DE\u4E66\u5F00\u53D1\u6587\u6863

\u8C03\u8BD5\u4FE1\u606F\uFF1A
- \u54CD\u5E94\u6587\u672C: ${o}
- \u9519\u8BEF\u6570\u636E: ${r?JSON.stringify(r,null,2):"null"}
- \u5B8C\u6574\u9519\u8BEF: ${A}`):new Error(`\u83B7\u53D6\u77E5\u8BC6\u5E93\u5217\u8868\u5931\u8D25\uFF1A${e} (\u9519\u8BEF\u7801: ${t})

\u8C03\u8BD5\u4FE1\u606F\uFF1A
- \u54CD\u5E94\u6587\u672C: ${o}
- \u5B8C\u6574\u9519\u8BEF: ${A}`)}}async getWikiNodeList(s,e){try{if(!await this.ensureValidToken())throw new Error("Token\u65E0\u6548\uFF0C\u8BF7\u91CD\u65B0\u6388\u6743");let o=`${R.BASE_URL}/wiki/v2/spaces/${s}/nodes`,r=new URLSearchParams({page_size:"50"});e&&r.append("parent_node_token",e);let A=await(0,V.requestUrl)({url:`${o}?${r.toString()}`,method:"GET",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"}}),n=A.json||JSON.parse(A.text);if(n.code===0)return n.data.items;throw new Error(n.msg||"\u83B7\u53D6\u77E5\u8BC6\u5E93\u8282\u70B9\u5217\u8868\u5931\u8D25")}catch(t){throw i.error("Get wiki node list error:",t),t.message&&t.message.includes("400")?new Error(`\u83B7\u53D6\u77E5\u8BC6\u5E93\u8282\u70B9\u5217\u8868\u5931\u8D25\uFF1A\u6743\u9650\u4E0D\u8DB3\u3002\u8BF7\u786E\u4FDD\uFF1A
1. \u5E94\u7528\u5DF2\u7533\u8BF7\u77E5\u8BC6\u5E93\u76F8\u5173\u6743\u9650\uFF08wiki:wiki \u6216 wiki:wiki.readonly\uFF09
2. \u5E94\u7528\u5DF2\u88AB\u6DFB\u52A0\u4E3A\u77E5\u8BC6\u5E93\u6210\u5458\u6216\u7BA1\u7406\u5458
3. \u8BE6\u7EC6\u914D\u7F6E\u65B9\u6CD5\u8BF7\u53C2\u8003\u98DE\u4E66\u5F00\u53D1\u6587\u6863`):t}}async moveDocToWiki(s,e,t,o){try{if(!await this.ensureValidToken())throw new Error("Token\u65E0\u6548\uFF0C\u8BF7\u91CD\u65B0\u6388\u6743");let A=`${R.BASE_URL}/wiki/v2/spaces/${s}/nodes/move_docs_to_wiki`,n={obj_type:t,obj_token:e};o&&(n.parent_wiki_token=o);let a=await(0,V.requestUrl)({url:A,method:"POST",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(n)}),l=a.json||JSON.parse(a.text);return l.code===0?{success:!0,wikiToken:l.data.wiki_token,taskId:l.data.task_id}:{success:!1,error:l.msg||"\u79FB\u52A8\u6587\u6863\u5230\u77E5\u8BC6\u5E93\u5931\u8D25"}}catch(r){return i.error("Move doc to wiki error:",r),{success:!1,error:r.message}}}async uploadMarkdownFile(s,e){try{if(!await this.ensureValidToken())throw new Error("Token\u65E0\u6548\uFF0C\u8BF7\u91CD\u65B0\u6388\u6743");let o="---7MA4YWxkTrZu0gW",r=s.endsWith(".md")?s:`${s}.md`,A=new TextEncoder().encode(e),n=A.length,a=[];a.push(`--${o}`),a.push('Content-Disposition: form-data; name="file_name"'),a.push(""),a.push(r),a.push(`--${o}`),a.push('Content-Disposition: form-data; name="parent_type"'),a.push(""),a.push("ccm_import_open"),a.push(`--${o}`),a.push('Content-Disposition: form-data; name="size"'),a.push(""),a.push(n.toString()),a.push(`--${o}`),a.push('Content-Disposition: form-data; name="extra"'),a.push(""),a.push('{"obj_type":"docx","file_extension":"md"}'),a.push(`--${o}`),a.push(`Content-Disposition: form-data; name="file"; filename="${r}"`),a.push("Content-Type: text/markdown"),a.push("");let l=a.join(`\r
`)+`\r
`,c=`\r
--${o}--\r
`,g=new TextEncoder().encode(l),h=new TextEncoder().encode(c),E=g.length+A.length+h.length,I=new Uint8Array(E),C=0;I.set(g,C),C+=g.length,I.set(A,C),C+=A.length,I.set(h,C);let p=await(0,V.requestUrl)({url:R.UPLOAD_URL,method:"POST",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":`multipart/form-data; boundary=${o}`},body:I.buffer}),u=p.json||JSON.parse(p.text);if(u.code===0){let Q=`https://feishu.cn/file/${u.data.file_token}`;return{success:!0,fileToken:u.data.file_token,url:Q}}else{let Q=L[u.code]||u.msg||"\u4E0A\u4F20\u5931\u8D25";return i.error("Upload failed:",u),{success:!1,error:Q}}}catch(t){return i.error("Upload file error:",t),{success:!1,error:t.message}}}async refreshAccessToken(){if(this.refreshPromise)return i.log("\u{1F504} Refresh already in progress, waiting..."),await this.refreshPromise;this.refreshPromise=this.doRefreshAccessToken();try{return await this.refreshPromise}finally{this.refreshPromise=null}}async doRefreshAccessToken(){var s,e;try{if(!this.settings.refreshToken)return i.error("\u274C No refresh token available"),!1;i.log("\u{1F504} Attempting token refresh...");let t={grant_type:"refresh_token",client_id:this.settings.appId,client_secret:this.settings.appSecret,refresh_token:this.settings.refreshToken},o=await(0,V.requestUrl)({url:R.REFRESH_TOKEN_URL,method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});i.log("\u{1F4CB} Refresh response status:",o.status);let r=o.json||JSON.parse(o.text);if(i.log("\u{1F4CB} Refresh response data:",r),r.code===0){let A=r.access_token||((s=r.data)==null?void 0:s.access_token),n=r.refresh_token||((e=r.data)==null?void 0:e.refresh_token);return A?(this.settings.accessToken=A,this.settings.refreshToken=n||"",i.log("\u2705 Token refresh successful, tokens updated"),!0):(i.error("\u274C No access token in refresh response:",r),!1)}else return i.error("\u274C Token refresh failed with code:",r.code),i.error("\u274C Error message:",r.msg||r.error_description||"Unknown error"),i.error("\u274C Full response:",r),!1}catch(t){return i.error("\u274C Token refresh error:",t),t.message&&t.message.includes("Request failed, status 400")&&(i.error("\u274C 400 Bad Request - Refresh token is invalid or expired"),i.error("\u{1F4A1} Solution: Clear authorization in settings and re-authorize"),this.settings.refreshToken="",i.log("\u{1F9F9} Cleared invalid refresh token")),!1}}generateRandomState(){return Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)}async ensureValidToken(){if(!this.settings.accessToken)return!1;try{let s=await(0,V.requestUrl)({url:R.USER_INFO_URL,method:"GET",headers:{Authorization:`Bearer ${this.settings.accessToken}`}}),e=s.json||JSON.parse(s.text);return e.code===0?!0:this.isTokenExpiredError(e.code)?(i.log(`\u26A0\uFE0F Token expired (code: ${e.code}), attempting refresh`),await this.refreshAccessToken()):!1}catch(s){return i.error("Token validation error:",s),!1}}async ensureValidTokenWithReauth(s){if(i.log("\u{1F50D} Starting token validation with reauth support"),!this.settings.accessToken)return i.log("\u274C No access token available, triggering reauth"),s&&s.setMessage("\u{1F511} \u68C0\u6D4B\u5230\u9700\u8981\u91CD\u65B0\u6388\u6743\uFF0C\u6B63\u5728\u81EA\u52A8\u6253\u5F00\u6388\u6743\u9875\u9762..."),await this.triggerReauth("\u9700\u8981\u91CD\u65B0\u6388\u6743",s);try{let e=await(0,V.requestUrl)({url:R.USER_INFO_URL,method:"GET",headers:{Authorization:`Bearer ${this.settings.accessToken}`}}),t=e.json||JSON.parse(e.text);return t.code===0?(i.log("\u2705 Token is valid"),!0):this.isTokenExpiredError(t.code)?(i.log(`\u26A0\uFE0F Token expired (code: ${t.code}), attempting refresh`),await this.refreshAccessToken()?(i.log("\u2705 Token refreshed successfully"),!0):(i.log("\u274C Token refresh failed, triggering reauth"),await this.triggerReauth("Token\u5237\u65B0\u5931\u8D25",s)?(i.log("\u2705 Reauth completed successfully"),!0):(i.log("\u274C Reauth failed"),!1))):(i.log(`\u274C Token invalid (code: ${t.code}), triggering reauth`),await this.triggerReauth(`Token\u65E0\u6548 (\u9519\u8BEF\u7801: ${t.code})`,s)?(i.log("\u2705 Reauth completed successfully"),!0):(i.log("\u274C Reauth failed"),!1))}catch(e){return i.error("Token\u9A8C\u8BC1\u51FA\u9519:",e),!!await this.triggerReauth("Token\u9A8C\u8BC1\u51FA\u9519",s)}}isTokenExpiredError(s){return[99991664,99991663,99991665,99991666,20005,1].includes(s)}async triggerReauth(s,e){e?e.setMessage(`\u{1F504} ${s}\uFF0C\u6B63\u5728\u81EA\u52A8\u91CD\u65B0\u6388\u6743...`):new V.Notice(`\u{1F504} ${s}\uFF0C\u6B63\u5728\u81EA\u52A8\u91CD\u65B0\u6388\u6743...`);try{if(!this.settings.appId||!this.settings.appSecret){let r="\u274C \u5E94\u7528\u914D\u7F6E\u4E0D\u5B8C\u6574\uFF0C\u8BF7\u5728\u8BBE\u7F6E\u4E2D\u914D\u7F6E App ID \u548C App Secret";return e?(e.setMessage(r),setTimeout(()=>e.hide(),3e3)):new V.Notice(r),!1}let t=this.generateAuthUrl();window.open(t,"_blank"),e?e.setMessage("\u{1F310} \u5DF2\u6253\u5F00\u6D4F\u89C8\u5668\u8FDB\u884C\u6388\u6743\uFF0C\u8BF7\u5728\u6D4F\u89C8\u5668\u4E2D\u5B8C\u6210\u6388\u6743\u540E\u8FD4\u56DE..."):new V.Notice("\u{1F310} \u5DF2\u6253\u5F00\u6D4F\u89C8\u5668\u8FDB\u884C\u6388\u6743\uFF0C\u8BF7\u5728\u6D4F\u89C8\u5668\u4E2D\u5B8C\u6210\u6388\u6743\u540E\u8FD4\u56DE...");let o=await this.waitForReauth(e);if(!o){let r="\u23F0 \u6388\u6743\u8D85\u65F6\u6216\u5931\u8D25\u3002\u8BF7\u786E\u4FDD\u5728\u6D4F\u89C8\u5668\u4E2D\u5B8C\u6210\u6388\u6743\uFF0C\u7136\u540E\u91CD\u65B0\u5C1D\u8BD5\u5206\u4EAB\u3002";e?(e.setMessage(r),setTimeout(()=>e.hide(),5e3)):new V.Notice(r)}return o}catch(t){return i.error("\u91CD\u65B0\u6388\u6743\u5931\u8D25:",t),new V.Notice(`\u274C \u91CD\u65B0\u6388\u6743\u5931\u8D25: ${t.message}`),!1}}async waitForReauth(s){return new Promise(e=>{let t=setTimeout(()=>{window.removeEventListener("feishu-auth-success",o);let r="\u23F0 \u6388\u6743\u7B49\u5F85\u8D85\u65F6\uFF0C\u8BF7\u624B\u52A8\u91CD\u8BD5\u5206\u4EAB";s?(s.setMessage(r),setTimeout(()=>s.hide(),3e3)):new V.Notice(r),e(!1)},3e5),o=()=>{clearTimeout(t),window.removeEventListener("feishu-auth-success",o),s&&s.setMessage("\u2705 \u6388\u6743\u6210\u529F\uFF0C\u6B63\u5728\u7EE7\u7EED\u5206\u4EAB..."),setTimeout(()=>{e(!0)},1e3)};window.addEventListener("feishu-auth-success",o)})}async createImportTaskWithCorrectFolder(s,e){try{await this.rateLimitController.throttle("import");let t={file_extension:"md",file_token:s,type:"docx",file_name:e,point:{mount_type:1,mount_key:this.settings.defaultFolderId||"nodcn2EG5YG1i5Rsh5uZs0FsUje"}},o=await(0,V.requestUrl)({url:`${R.BASE_URL}/drive/v1/import_tasks`,method:"POST",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(t)}),r=o.json||JSON.parse(o.text);return r.code===0?{success:!0,ticket:r.data.ticket}:{success:!1,error:r.msg||"\u521B\u5EFA\u5BFC\u5165\u4EFB\u52A1\u5931\u8D25"}}catch(t){return i.error("Create import task error:",t),{success:!1,error:t.message}}}async waitForImportCompletionWithTimeout(s,e){let t=Date.now(),o=25;for(let r=1;r<=o;r++){let A=Date.now()-t;if(A>=e)return i.warn(`Import timeout after ${A}ms`),{success:!1,error:`\u5BFC\u5165\u4EFB\u52A1\u8D85\u65F6 (${e}ms)`};try{let n=await this.checkImportStatus(s);if(n.success&&(n.status===3||n.status===0)){if(n.documentToken)return{success:!0,documentToken:n.documentToken};i.warn("Import completed but no document token returned, continuing to wait...")}else if(n.success&&n.status===2){if(i.log(`\u{1F50D} Status 2 detected. Document token: ${n.documentToken||"none"}`),n.documentToken)return i.log(`\u2705 Import completed despite failure status, got document token: ${n.documentToken}`),{success:!0,documentToken:n.documentToken};if(i.warn(`\u26A0\uFE0F Import shows failure status (${n.status}), no document token yet. Attempt ${r}/8, continuing to wait...`),!(r<=8))return i.error("\u274C Import failed after extended waiting"),{success:!1,error:"\u5BFC\u5165\u4EFB\u52A1\u5931\u8D25"}}else i.log(`\u{1F4CA} Other status: ${n.status}, success: ${n.success}`);if(r<o){let a=this.getDelayForAttempt(r);await new Promise(l=>setTimeout(l,a))}}catch(n){i.error("Check import status error:",n);let a=this.getDelayForAttempt(r);await new Promise(l=>setTimeout(l,a))}}return{success:!1,error:"\u5BFC\u5165\u4EFB\u52A1\u8D85\u65F6"}}getDelayForAttempt(s){return s<=3?1e3:s<=8?2e3:3e3}async checkImportStatus(s){try{await this.rateLimitController.throttle("import");let e=await(0,V.requestUrl)({url:`${R.BASE_URL}/drive/v1/import_tasks/${s}`,method:"GET",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"}}),t=e.json||JSON.parse(e.text);if(t.code===0){let o=t.data.result;return{success:!0,status:o.job_status,documentToken:o.token}}else return i.error("\u274C Import status check failed:",t),{success:!1,error:t.msg||"\u68C0\u67E5\u5BFC\u5165\u72B6\u6001\u5931\u8D25"}}catch(e){return i.error("Check import status error:",e),{success:!1,error:e.message}}}async deleteSourceFile(s){try{i.verbose(`\u{1F5D1}\uFE0F Attempting to delete source file: ${s}`);let e=!1;try{let A=await(0,V.requestUrl)({url:`${R.BASE_URL}/drive/v1/files/${s}/meta`,method:"GET",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"}});e=(A.json||JSON.parse(A.text)).code===0,i.verbose(`\u{1F5D1}\uFE0F File existence check: ${e?"exists":"not found"}`)}catch(A){i.verbose("\u{1F5D1}\uFE0F File existence check failed, assuming file exists:",A.message),e=!0}if(!e){i.log(`\u{1F4DD} Source file ${s} does not exist, skipping deletion`);return}let t,o="trash";try{i.verbose(`\u{1F5D1}\uFE0F Trying trash method for file: ${s}`),t=await(0,V.requestUrl)({url:`${R.BASE_URL}/drive/v1/files/${s}/trash`,method:"POST",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify({})}),i.verbose(`\u{1F5D1}\uFE0F Trash method response status: ${t.status}`)}catch(A){let n=A.message||A.toString();if(n.includes("404")){i.log(`\u{1F4DD} Source file ${s} not found (404), likely already deleted`);return}i.warn(`\u26A0\uFE0F Trash method failed for ${s}:`,n),i.log("\u{1F504} Falling back to direct delete method..."),o="direct";try{t=await(0,V.requestUrl)({url:`${R.BASE_URL}/drive/v1/files/${s}?type=file`,method:"DELETE",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"}}),i.verbose(`\u{1F5D1}\uFE0F Direct delete response status: ${t.status}`)}catch(a){if((a.message||a.toString()).includes("404")){i.log(`\u{1F4DD} Source file ${s} not found during direct delete, likely already deleted`);return}throw a}}if(t.status!==200)throw new Error(`\u5220\u9664\u8BF7\u6C42\u5931\u8D25\uFF0C\u72B6\u6001\u7801: ${t.status}`);let r=t.json||JSON.parse(t.text);i.verbose("\u{1F5D1}\uFE0F Delete response data:",r),r.code!==0?(i.warn(`\u26A0\uFE0F Delete API returned non-zero code: ${r.code} - ${r.msg}`),i.log(`\u{1F4DD} Source file deletion completed with warning (method: ${o})`)):i.log(`\u2705 Source file deleted successfully using ${o} method: ${s}`)}catch(e){i.error("\u274C Delete source file error:",e),i.warn(`\u26A0\uFE0F Failed to delete source file ${s}, but continuing with process`)}}async findPlaceholderBlocks(s,e,t){try{let o=[],r="",A=!0,n=this.compilePlaceholderPatterns(e,t),a=[...e.map(g=>g.placeholder),...(t==null?void 0:t.map(g=>g.placeholder))||[]],l=new Set(a),c=a.length;for(i.log(`\u{1F50D} Searching for ${l.size} placeholders in document (${e.length} files + ${(t==null?void 0:t.length)||0} callouts)...`);A&&l.size>0;){let g=new URLSearchParams({page_size:"500"});r&&g.append("page_token",r);let h=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks?${g.toString()}`,method:"GET",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"}}),E=h.json||JSON.parse(h.text);if(E.code!==0)throw new Error(E.msg||"\u83B7\u53D6\u6587\u6863\u5757\u5931\u8D25");let I=this.searchPlaceholdersInBlocks(E.data.items,n,l);if(o.push(...I),l.size===0){i.log(`\u2705 All ${c} placeholders found, stopping search early`);break}A=E.data.has_more,r=E.data.page_token}return i.log(`\u{1F3AF} Found ${o.length}/${c} placeholder blocks`),o}catch(o){throw i.error("Find placeholder blocks error:",o),o}}compilePlaceholderPatterns(s,e){let t=new Map;return s.forEach(o=>{let r=o.placeholder,A=r.replace(/^__/,"").replace(/__$/,""),n=[new RegExp(this.escapeRegExp(r)),new RegExp(this.escapeRegExp(`!${A}`)),new RegExp(this.escapeRegExp(A))];t.set(r,{fileInfo:o,patterns:n})}),e&&e.forEach(o=>{let r=o.placeholder,A=r.replace(/^__/,"").replace(/__$/,""),n=[new RegExp(this.escapeRegExp(r)),new RegExp(this.escapeRegExp(`!${A}`)),new RegExp(this.escapeRegExp(A))];t.set(r,{calloutInfo:o,patterns:n})}),t}searchPlaceholdersInBlocks(s,e,t){let o=[];for(let r=0;r<s.length;r++){let A=s[r],n=null;if(A.text&&A.text.elements?n=A.text:A.heading1&&A.heading1.elements?n=A.heading1:A.heading2&&A.heading2.elements?n=A.heading2:A.heading3&&A.heading3.elements?n=A.heading3:A.heading4&&A.heading4.elements?n=A.heading4:A.heading5&&A.heading5.elements?n=A.heading5:A.heading6&&A.heading6.elements?n=A.heading6:A.heading7&&A.heading7.elements?n=A.heading7:A.heading8&&A.heading8.elements?n=A.heading8:A.heading9&&A.heading9.elements?n=A.heading9:A.bullet&&A.bullet.elements?n=A.bullet:A.ordered&&A.ordered.elements&&(n=A.ordered),!n)continue;let a=this.extractBlockTextContentFromData(n);if(this.hasPlaceholderFeatures(a))for(let l of t){let c=e.get(l);if(!c)continue;if(c.patterns.some(h=>h.test(a))){i.log(`\u2705 Found placeholder: "${l}" in block ${A.block_id}`);let h=s.find(C=>C.block_id===A.parent_id),E=0;h&&h.children&&(E=h.children.indexOf(A.block_id),E===-1&&(E=0));let I={blockId:A.block_id,parentId:A.parent_id,index:E,placeholder:l};if(i.log(`\u{1F4CD} Placeholder block position: parentId=${A.parent_id}, index=${E} (was ${r})`),c.fileInfo&&(I.fileInfo=c.fileInfo),c.calloutInfo&&(I.calloutInfo=c.calloutInfo),o.push(I),t.delete(l),t.size===0)return o}}}return o}extractBlockTextContent(s){let e=null;return s.text&&s.text.elements?e=s.text:s.bullet&&s.bullet.elements?e=s.bullet:s.ordered&&s.ordered.elements&&(e=s.ordered),e?this.extractBlockTextContentFromData(e):""}extractBlockTextContentFromData(s){return s.elements.filter(e=>e.text_run&&e.text_run.content).map(e=>e.text_run.content).join("")}hasPlaceholderFeatures(s){return s.includes("OB_CONTENT_")||s.includes("__OB_CONTENT_")||s.includes("FEISHU_FILE_")||s.includes("__FEISHU_FILE_")}escapeRegExp(s){return s.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}async insertCalloutBlock(s,e){if(!e.calloutInfo)throw new Error("Callout \u4FE1\u606F\u7F3A\u5931");let t=e.calloutInfo;i.log(`\u{1F3A8} Creating Callout block: ${t.type}`),i.log(`\u{1F4CD} Position: parentId=${e.parentId}, index=${e.index}`),i.log(`\u{1F3A8} Style: bg=${t.backgroundColor}, border=${t.borderColor}, text=${t.textColor}`),i.log(`\u{1F4DD} Content: title="${t.title}", content="${t.content}"`),i.log(`\u{1F517} Placeholder: ${t.placeholder}`);try{let o={index:e.index,children:[{block_type:19,callout:{background_color:t.backgroundColor,border_color:t.borderColor,text_color:t.textColor}}]};i.log(`\u{1F310} API Request: POST ${R.BASE_URL}/docx/v1/documents/${s}/blocks/${e.parentId}/children`),i.log("\u{1F4E4} Request body:",JSON.stringify(o,null,2));let r=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${e.parentId}/children`,method:"POST",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(o)});i.log(`\u{1F4E5} API Response status: ${r.status}`);let A=r.json||JSON.parse(r.text);if(i.log("\u{1F4E5} API Response data:",JSON.stringify(A,null,2)),A.code!==0)throw i.error(`\u274C Callout block creation failed: code=${A.code}, msg=${A.msg}`),new Error(A.msg||"\u63D2\u5165 Callout \u5757\u5931\u8D25");let n=A.data.children[0].block_id;return i.log(`\u2705 Created Callout block: ${n}`),await new Promise(a=>setTimeout(a,500)),i.log(`\u{1F50D} NEW MODE: About to call addCalloutContentSimple for Callout: ${t.type}`),await this.addCalloutContentSimple(s,n,t),n}catch(o){throw i.error("Insert Callout block error:",o),o}}async addCalloutContentSimple(s,e,t){try{let o={index:0,children:[{block_type:2,text:{elements:[{text_run:{content:t.title,text_element_style:{bold:!0}}}]}}]};i.log(`\u{1F4DD} Adding title to Callout block: ${e}`);let r=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${e}/children`,method:"POST",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(o)}),A=r.json||JSON.parse(r.text);if(A.code!==0)throw new Error(A.msg||"\u6DFB\u52A0\u6807\u9898\u5931\u8D25");if(i.log("\u2705 Successfully added title to Callout block"),t.content.trim()){await new Promise(g=>setTimeout(g,800)),i.log(`\u{1F3A8} Original Markdown content: "${t.content}"`);let n=this.parseMarkdownToTextElements(t.content);i.log(`\u{1F3A8} Parsed ${n.length} text elements from Markdown content`),i.log("\u{1F3A8} Parsed elements:",JSON.stringify(n,null,2));let a={index:1,children:[{block_type:2,text:{elements:n}}]};i.log(`\u{1F4DD} Adding content to Callout block: ${e}`);let l=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${e}/children`,method:"POST",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(a)}),c=l.json||JSON.parse(l.text);if(c.code!==0)throw new Error(c.msg||"\u6DFB\u52A0\u5185\u5BB9\u5931\u8D25");i.log("\u2705 Successfully added content to Callout block")}i.log(`\u2705 Added content to Callout block: ${e}`)}catch(o){throw i.error("Add Callout content error:",o),o}}parseMarkdownToTextElements(s){let e=[],t=0,o=s;for(;t<o.length;){let r=o.substring(t).match(/^==(.+?)==/),A=o.substring(t).match(/^\*\*(.*?)\*\*/),n=o.substring(t).match(/^\*(.*?)\*/),a=o.substring(t).match(/^`(.*?)`/),l=o.substring(t).match(/^~~(.*?)~~/);if(r)e.push({text_run:{content:r[1],text_element_style:{bold:!0}}}),t+=r[0].length;else if(A)e.push({text_run:{content:A[1],text_element_style:{bold:!0}}}),t+=A[0].length;else if(n&&!o.substring(t).startsWith("**"))e.push({text_run:{content:n[1],text_element_style:{italic:!0}}}),t+=n[0].length;else if(a)e.push({text_run:{content:a[1],text_element_style:{inline_code:!0}}}),t+=a[0].length;else if(l)e.push({text_run:{content:l[1],text_element_style:{strikethrough:!0}}}),t+=l[0].length;else{let c=o.length,g=o.indexOf("==",t),h=o.indexOf("**",t),E=o.indexOf("*",t),I=o.indexOf("`",t),C=o.indexOf("~~",t);[g,h,E,I,C].forEach(u=>{u!==-1&&u<c&&(c=u)});let p=o.substring(t,c);p&&e.push({text_run:{content:p}}),t=c}}return e}async addCalloutContent(s,e,t){if(await this.addCalloutContentWithRetry(s,e,{index:0,children:[{block_type:2,text:{elements:[{text_run:{content:t.title,text_element_style:{bold:!0}}}]}}]},"title"),t.content.trim()){i.log(`\u23F1\uFE0F Waiting ${800}ms before adding content...`),await new Promise(A=>setTimeout(A,800)),i.log(`\u{1F3A8} Original Markdown content: "${t.content}"`);let r=this.parseMarkdownToTextElements(t.content);i.log(`\u{1F3A8} Parsed ${r.length} text elements from Markdown content`),i.log("\u{1F3A8} Parsed elements:",JSON.stringify(r,null,2)),await this.addCalloutContentWithRetry(s,e,{index:1,children:[{block_type:2,text:{elements:r}}]},"content")}i.log(`\u2705 Added content to Callout block: ${e}`)}async addCalloutContentWithRetry(s,e,t,o){let A=null;for(let n=1;n<=3;n++)try{if(n>1){let c=Math.min(2e3*Math.pow(2,n-1),1e4);i.log(`\u23F1\uFE0F Waiting ${c}ms before retry attempt ${n} for ${o}...`),await new Promise(g=>setTimeout(g,c))}i.log(`\u{1F4DD} Adding ${o} to Callout block (attempt ${n}/${3}): ${e}`);let a=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${e}/children`,method:"POST",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(t)}),l=a.json||JSON.parse(a.text);if(l.code!==0)throw new Error(l.msg||`\u6DFB\u52A0 ${o} \u5931\u8D25`);i.log(`\u2705 Successfully added ${o} to Callout block`);return}catch(a){if(A=a instanceof Error?a:new Error(String(a)),i.warn(`\u26A0\uFE0F Add ${o} attempt ${n} failed:`,A.message),A.message.includes("429")&&n<3){let l=this.extractRateLimitReset(a);l>0&&(i.log(`\u{1F504} Rate limit detected, will wait ${l}s as suggested by server...`),await new Promise(c=>setTimeout(c,l*1e3)));continue}if(n===3)throw i.error(`\u274C All ${3} attempts failed for adding ${o} to Callout block`),A}}extractRateLimitReset(s){try{if(s&&s.headers&&s.headers["x-ogw-ratelimit-reset"]){let e=parseInt(s.headers["x-ogw-ratelimit-reset"]);if(!isNaN(e)&&e>0)return Math.min(e,60)}}catch(e){i.warn("Failed to extract rate limit reset time:",e)}return 0}async insertFileBlock(s,e){try{if(!e.fileInfo)throw new Error("\u6587\u4EF6\u4FE1\u606F\u7F3A\u5931");let t=e.fileInfo.isImage?27:23,o=e.fileInfo.isImage?{image:{}}:{file:{}},r={index:e.index,children:[{block_type:t,...o}]},A=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${e.parentId}/children`,method:"POST",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(r)}),n=A.json||JSON.parse(A.text);if(n.code!==0)throw new Error(n.msg||"\u63D2\u5165\u6587\u4EF6\u5757\u5931\u8D25");let a=n.data.children[0],l=a.block_id;return!e.fileInfo.isImage&&a.block_type===33&&(a.children&&a.children.length>0?l=a.children[0]:i.warn("\u26A0\uFE0F View Block created but no child File Block found")),l}catch(t){throw i.error("Insert file block error:",t),t}}async uploadFileToDocument(s,e,t,o){try{if(!await this.ensureValidToken())throw new Error("Token\u65E0\u6548\uFF0C\u8BF7\u91CD\u65B0\u6388\u6743");let A="---7MA4YWxkTrZu0gW",n=t.isImage?"docx_image":"docx_file",a=o.byteLength,l=[];l.push(`--${A}`),l.push('Content-Disposition: form-data; name="file_name"'),l.push(""),l.push(t.fileName),l.push(`--${A}`),l.push('Content-Disposition: form-data; name="parent_type"'),l.push(""),l.push(n),l.push(`--${A}`),l.push('Content-Disposition: form-data; name="parent_node"'),l.push(""),l.push(e),l.push(`--${A}`),l.push('Content-Disposition: form-data; name="size"'),l.push(""),l.push(a.toString()),l.push(`--${A}`),l.push('Content-Disposition: form-data; name="extra"'),l.push(""),l.push(`{"drive_route_token":"${s}"}`),l.push(`--${A}`),l.push('Content-Disposition: form-data; name="file"'),l.push("Content-Type: application/octet-stream"),l.push("");let c=l.join(`\r
`)+`\r
`,g=`\r
--${A}--\r
`,h=new TextEncoder().encode(c),E=new TextEncoder().encode(g),I=h.length+a+E.length,C=new Uint8Array(I),p=0;C.set(h,p),p+=h.length,C.set(new Uint8Array(o),p),p+=a,C.set(E,p);let u=await(0,V.requestUrl)({url:R.UPLOAD_URL,method:"POST",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":`multipart/form-data; boundary=${A}`},body:C.buffer}),Q=u.json||JSON.parse(u.text);if(Q.code===0)return i.log(`\u2705 Uploaded ${t.isImage?"image":"file"} material: ${Q.data.file_token}`),Q.data.file_token;{let w=L[Q.code]||Q.msg||"\u4E0A\u4F20\u6587\u4EF6\u7D20\u6750\u5931\u8D25";throw new Error(w)}}catch(r){throw i.error("Upload file to document error:",r),r}}async setFileBlockContent(s,e,t,o){try{let r=o?{replace_image:{token:t}}:{replace_file:{token:t}};i.log(`\u{1F527} Setting ${o?"image":"file"} block content:`,{documentId:s,blockId:e,fileToken:t,requestData:r});let A=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${e}`,method:"PATCH",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(r)});i.log(`\u{1F4CB} Set block content response status: ${A.status}`);let n=A.json||JSON.parse(A.text);if(i.log("\u{1F4CB} Set block content response:",n),n.code!==0)throw new Error(n.msg||"\u8BBE\u7F6E\u6587\u4EF6\u5757\u5185\u5BB9\u5931\u8D25");i.log(`\u2705 Set ${o?"image":"file"} block content: ${e}`)}catch(r){throw i.error("Set file block content error:",r),r.message&&r.message.includes("400")&&(i.error("\u274C 400 Error details: This might be due to:"),i.error("  1. Invalid file token or block ID"),i.error("  2. File type not supported for this block type"),i.error("  3. Block already has content"),i.error("  4. API parameter format issue")),r}}async findRemainingPlaceholders(s,e){try{i.log(`\u{1F50D} Checking ${e.length} placeholders for remaining content...`);let t=[],o=new Set,r="",A=!0,n=[];for(;A;){let a=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks?page_size=500${r?`&page_token=${r}`:""}`,method:"GET",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"}}),l=a.json||JSON.parse(a.text);if(l.code!==0){i.warn("Failed to get document blocks for placeholder check:",l.msg);break}n.push(...l.data.items),A=l.data.has_more,r=l.data.page_token}i.log(`\u{1F4CB} Retrieved ${n.length} blocks from document`);for(let a of e){if(o.has(a.blockId))continue;o.add(a.blockId);let l=n.find(c=>c.block_id===a.blockId);if(l){let c=this.extractBlockTextContent(l);if(i.log(`\u{1F50D} Checking block ${a.blockId} (type: ${l.block_type}): "${c.substring(0,100)}..."`),c.length===0){i.log(`\u26A0\uFE0F Block has no text content: ${a.blockId}`);continue}let g=a.placeholder,h=g.replace(/^__/,"").replace(/__$/,""),E=`!${h}!`,I=c.includes(g),C=c.includes(E),p=c.includes(h);if(I||C||p){let u=I?"original":C?"feishu":"clean";i.log(`\u2705 Found remaining placeholder: ${g} (format: ${u}) in block type ${l.block_type}`),t.push(a)}else i.log(`\u274C Placeholder already cleaned: ${g}`)}else i.log(`\u26A0\uFE0F Block not found: ${a.blockId}`)}return i.log(`\u{1F3AF} Found ${t.length} remaining placeholders out of ${e.length}`),t}catch(t){return i.error("Error finding remaining placeholders:",t),i.log("\u{1F504} Falling back to processing all placeholders due to error"),e}}async batchReplacePlaceholderText(s,e){if(e.length!==0)try{i.log(`\u{1F527} Batch replacing ${e.length} placeholder texts...`),i.log("\u26A0\uFE0F Batch replacement requires individual processing for precise placeholder removal, falling back to individual replacement..."),await this.fallbackIndividualReplace(s,e)}catch(t){i.error("Batch replace placeholder text error:",t),await this.fallbackIndividualReplace(s,e)}}async fallbackIndividualReplace(s,e){i.log(`\u{1F504} Falling back to individual replacement for ${e.length} blocks...`);for(let t of e)try{await this.replacePlaceholderText(s,t)}catch(o){i.error(`\u274C Failed to replace placeholder ${t.blockId}:`,o)}}async replacePlaceholderText(s,e){try{i.log(`\u{1F527} Starting placeholder replacement for block: ${e.blockId}`),i.log(`\u{1F3AF} Target placeholder: ${e.placeholder}`);let t=await this.getBlockContent(s,e.blockId);if(!t){i.warn(`\u26A0\uFE0F Cannot get block content for ${e.blockId}, trying delete method...`),await this.deletePlaceholderBlock(s,e);return}i.log(`\u{1F4CB} Retrieved ${t.elements.length} elements from block`),t.elements.forEach((r,A)=>{r.text_run&&i.log(`  Element ${A+1}: "${r.text_run.content}"`)});let o=this.extractContentAfterPlaceholder(t.elements,e.placeholder);i.log(`\u{1F50D} Content after placeholder: "${o}"`),o&&this.shouldCreateSeparateBlock(o)?await this.handlePlaceholderWithSeparateBlock(s,e,o):await this.handlePlaceholderWithTextReplacement(s,e,t)}catch(t){i.error("Replace placeholder text error:",t);try{await this.deletePlaceholderBlock(s,e)}catch(o){i.error("Both replace and delete failed:",o)}}}extractContentAfterPlaceholder(s,e){let t=e.replace(/^__/,"").replace(/__$/,""),o=[e,`!${t}!`,t,`!${t}`,`${t}!`];for(let r of s)if(r.text_run&&r.text_run.content){let A=r.text_run.content;for(let n of o){let a=A.indexOf(n);if(a!==-1){let l=A.substring(a+n.length);return l.length>0?l:null}}}return null}shouldCreateSeparateBlock(s){let e=s.trim();return e==="---"||e==="***"||e==="___"?(i.log(`\u{1F50D} Detected separator: "${e}"`),!0):s.startsWith(`
`)&&e.length>0&&!e.startsWith("!")?(i.log(`\u{1F50D} Detected content after newline: "${e}"`),!0):!1}async handlePlaceholderWithSeparateBlock(s,e,t){i.log("\u{1F527} Handling placeholder with separate block creation");try{await this.deletePlaceholderBlock(s,e);let o=t.trim();if(o.length>0){i.log(`\u{1F4DD} Creating new block for content: "${o}"`);let r={index:e.index,children:[{block_type:2,text:{elements:[{text_run:{content:o}}]}}]},A=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${e.parentId}/children`,method:"POST",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(r)}),n=A.json||JSON.parse(A.text);n.code!==0?i.warn(`\u26A0\uFE0F Failed to create new block: ${n.msg}`):i.log("\u2705 Successfully created new block for content")}}catch(o){throw i.error("Handle placeholder with separate block error:",o),o}}async handlePlaceholderWithTextReplacement(s,e,t){i.log("\u{1F527} Handling placeholder with text replacement");let o=this.buildTextElementsWithoutPlaceholder(t.elements,e.placeholder);i.log(`\u{1F504} Built ${o.length} new elements after placeholder removal`),o.forEach((a,l)=>{a.text_run&&i.log(`  New Element ${l+1}: "${a.text_run.content}"`)});let r={update_text_elements:{elements:o}};i.log(`\u{1F527} Replacing placeholder text in block: ${e.blockId}`);let A=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${e.blockId}`,method:"PATCH",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(r)}),n=A.json||JSON.parse(A.text);i.log("\u{1F4CB} Replace placeholder response:",n),n.code!==0?(i.warn(`\u26A0\uFE0F Failed to replace placeholder text: ${n.msg}, trying delete method...`),await this.deletePlaceholderBlock(s,e)):i.log(`\u2705 Replaced placeholder text in block: ${e.blockId}`)}async batchDeletePlaceholderBlocks(s,e){i.log(`\u{1F5D1}\uFE0F Batch deleting ${e.length} placeholder blocks...`);for(let t=0;t<e.length;t++){let o=e[t];try{t>0&&(i.log(`\u23F1\uFE0F Waiting ${500}ms between deletions...`),await new Promise(A=>setTimeout(A,500))),await this.deletePlaceholderBlock(s,o),i.log(`\u2705 Deleted placeholder block: ${o.blockId}`)}catch(r){i.error(`\u274C Failed to delete placeholder block ${o.blockId}:`,r)}}}async deleteBlockByPlaceholderText(s,e){try{i.log(`\u{1F50D} Searching for block containing placeholder text: ${e}`);let t=await this.getAllDocumentBlocks(s),o=null,r="",A=-1;i.log(`\u{1F50D} Analyzing ${t.length} blocks for placeholder text...`);for(let g of t){let h=null,E="";if(g.block_type===2&&g.text&&g.text.elements?(h=g.text,E="text block"):g.block_type===3&&g.heading1&&g.heading1.elements?(h=g.heading1,E="heading1 block"):g.block_type===4&&g.heading2&&g.heading2.elements?(h=g.heading2,E="heading2 block"):g.block_type===5&&g.heading3&&g.heading3.elements?(h=g.heading3,E="heading3 block"):g.block_type===6&&g.heading4&&g.heading4.elements?(h=g.heading4,E="heading4 block"):g.block_type===7&&g.heading5&&g.heading5.elements?(h=g.heading5,E="heading5 block"):g.block_type===8&&g.heading6&&g.heading6.elements?(h=g.heading6,E="heading6 block"):g.block_type===9&&g.heading7&&g.heading7.elements?(h=g.heading7,E="heading7 block"):g.block_type===10&&g.heading8&&g.heading8.elements?(h=g.heading8,E="heading8 block"):g.block_type===11&&g.heading9&&g.heading9.elements&&(h=g.heading9,E="heading9 block"),h){i.log(`\u{1F4C4} Checking ${E}: ${g.block_id}, elements: ${h.elements.length}`);let I="";for(let p of h.elements)p.text_run&&p.text_run.content&&(I+=p.text_run.content,i.log(`\u{1F4DD} Text element: "${p.text_run.content}"`));i.log(`\u{1F4C4} Full text content: "${I}"`);let C=e.replace(/^__/,"").replace(/__$/,"");if(i.log(`\u{1F50D} Comparing: "${I}" contains "${C}"?`),I.includes(C)){i.log(`\u{1F3AF} Found placeholder in block: ${g.block_id}`);let p=I.trim(),u=C.trim();if(p===u){i.log("\u{1F3AF} Block contains only placeholder, will delete entire block"),o=g,r=g.parent_id;break}else{i.log("\u{1F3AF} Block contains placeholder + other text, will update block content"),i.log(`\u{1F4DD} Full text: "${I}"`),i.log(`\u{1F4DD} Placeholder: "${C}"`),await this.updateBlockContentRemovePlaceholder(s,g,h,C);return}}}}if(!o){i.warn(`\u26A0\uFE0F Placeholder text not found: ${e}`);return}let n=t.find(g=>g.block_id===r);if(n&&n.children&&(A=n.children.indexOf(o.block_id)),A===-1){i.warn(`\u26A0\uFE0F Could not find index for block: ${o.block_id}`);return}i.log(`\u{1F3AF} Found placeholder block: ${o.block_id} at index ${A} in parent ${r}`);let a={start_index:A,end_index:A+1},l=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${r}/children/batch_delete`,method:"DELETE",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(a)}),c=l.json||JSON.parse(l.text);if(c.code!==0)throw new Error(c.msg||"\u5220\u9664\u5360\u4F4D\u7B26\u5757\u5931\u8D25");i.log(`\u2705 Successfully deleted placeholder block: ${o.block_id}`)}catch(t){throw i.error("Delete placeholder by text error:",t),t}}async updateBlockContentRemovePlaceholder(s,e,t,o){try{i.log(`\u{1F527} Updating block content to remove placeholder: ${e.block_id}`);let r=[];for(let l of t.elements)if(l.text_run&&l.text_run.content){let c=l.text_run.content;if(c.includes(o)){let g=c.replace(o,"").trim();g.length>0?(r.push({text_run:{content:g,text_element_style:l.text_run.text_element_style||{}}}),i.log(`\u{1F4DD} Kept cleaned content: "${g}"`)):i.log("\u{1F4DD} Removed element containing only placeholder")}else r.push(l),i.log(`\u{1F4DD} Kept element: "${c}"`)}if(r.length===0){i.log("\u26A0\uFE0F No content left after removing placeholder, will delete entire block");let l=await this.findParentBlock(e.block_id);l&&await this.deleteBlockFromParent(l.block_id,e.block_id);return}let A={update_text_elements:{elements:r}};i.log("\u{1F4E4} Update request data:",JSON.stringify(A,null,2));let n=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${e.block_id}`,method:"PATCH",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(A)}),a=n.json||JSON.parse(n.text);if(a.code!==0)throw new Error(a.msg||"\u66F4\u65B0\u5757\u5185\u5BB9\u5931\u8D25");i.log(`\u2705 Successfully updated block content: ${e.block_id}`)}catch(r){throw i.error("Update block content error:",r),r}}async findParentBlock(s){return null}async deleteBlockFromParent(s,e){}async deletePlaceholderBlock(s,e){let o=null;for(let r=1;r<=3;r++)try{if(r>1){let l=Math.min(1e3*Math.pow(2,r-1),5e3);i.log(`\u23F1\uFE0F Waiting ${l}ms before retry attempt ${r}...`),await new Promise(c=>setTimeout(c,l))}let A={start_index:e.index,end_index:e.index+1};i.log(`\u{1F5D1}\uFE0F Attempting to delete placeholder block (attempt ${r}/${3}): ${e.blockId}`);let n=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${e.parentId}/children/batch_delete`,method:"DELETE",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(A)}),a=n.json||JSON.parse(n.text);if(a.code!==0)throw new Error(a.msg||"\u5220\u9664\u5360\u4F4D\u7B26\u5757\u5931\u8D25");i.log(`\u2705 Deleted placeholder block: ${e.blockId}`);return}catch(A){if(o=A instanceof Error?A:new Error(String(A)),i.warn(`\u26A0\uFE0F Delete attempt ${r} failed:`,o.message),o.message.includes("429")&&r<3){i.log(`\u{1F504} Rate limit hit, will retry (${r}/${3})...`);continue}if(r===3)throw i.error(`\u274C All ${3} delete attempts failed for block ${e.blockId}`),o}}async readLocalFile(s){var e;try{let t=s.trim();t=t.replace(/^\.[\\/]/,"");let o=(0,V.normalizePath)(t);i.log(`\u{1F50D} Trying to read file: "${s}" -> "${o}"`);let r=this.app.vault.getFileByPath(o);if(!r){let n=this.app.vault.getFiles(),a=(e=o.split("/").pop())==null?void 0:e.toLowerCase();if(a){let l=n.find(c=>c.name.toLowerCase()===a);l&&(r=l,i.log(`\u2705 Found file by name: ${r.path}`))}}if(!r){i.warn(`\u274C File not found: ${o}`);let a=this.app.vault.getFiles().filter(l=>l.name.includes(o.split("/").pop()||""));return a.length>0&&i.log("\u{1F4CB} Similar files found:",a.map(l=>l.path)),null}let A=await this.app.vault.readBinary(r);return i.log(`\u2705 Successfully read file: ${r.path} (${A.byteLength} bytes)`),A}catch(t){return i.error(`\u274C Error reading local file ${s}:`,t),null}}async processAllPlaceholders(s,e,t,o){var A;let r=e.length+((t==null?void 0:t.length)||0);if(i.log(`\u{1F3AF} Processing placeholders: ${e.length} files + ${(t==null?void 0:t.length)||0} callouts = ${r} total`),t&&t.length>0&&(i.log("\u{1F4CB} Callout blocks to process:"),t.forEach((n,a)=>{i.log(`  ${a+1}: ${n.type} - "${n.title}" (placeholder: ${n.placeholder})`)})),r===0){i.log("\u{1F4DD} No placeholders to process");return}try{o&&o.setMessage(`\u{1F50D} \u6B63\u5728\u67E5\u627E\u5360\u4F4D\u7B26 (${r} \u4E2A\u9879\u76EE)...`);let n=await this.findPlaceholderBlocks(s,e,t);if(n.length===0){i.warn("\u26A0\uFE0F No placeholder blocks found in document");return}i.log(`\u{1F3AF} Found ${n.length} placeholder blocks to process`);let a=n.filter(c=>c.fileInfo),l=n.filter(c=>c.calloutInfo);if(l.length>0){let c=new Map;for(let I of l){let C=c.get(I.parentId)||[];C.push(I),c.set(I.parentId,C)}let g=[];for(let[,I]of c)I.sort((C,p)=>C.index-p.index),g.push(...I);let h=new Map;o&&o.setMessage(`\u{1F3A8} \u6B63\u5728\u521B\u5EFA ${l.length} \u4E2A\u9AD8\u4EAE\u5757...`);let E=[];for(let I=0;I<g.length;I++){let C=g[I];try{I>0&&(i.log(`\u23F1\uFE0F Waiting ${1500}ms between Callout block creations...`),await new Promise(w=>setTimeout(w,1500)));let p=h.get(C.parentId)||0,u={...C,index:C.index+p};await this.insertCalloutBlock(s,u),E.push(C),h.set(C.parentId,p+1),i.log(`\u2705 Successfully created Callout block: ${(A=C.calloutInfo)==null?void 0:A.type}`)}catch(p){i.error("\u274C Failed to create Callout block:",p)}}if(E.length>0){o&&o.setMessage(`\u{1F9F9} \u6B63\u5728\u6E05\u7406 ${E.length} \u4E2A\u5360\u4F4D\u7B26...`);let I=2e3;i.log(`\u23F1\uFE0F Waiting ${I}ms before deleting placeholders...`),await new Promise(C=>setTimeout(C,I)),i.log("\u{1F50D} Searching for placeholder text blocks to delete...");for(let C of t||[])try{await this.deleteBlockByPlaceholderText(s,C.placeholder)}catch(p){i.error(`\u274C Failed to delete placeholder for ${C.placeholder}:`,p)}}}a.length>0&&await this.processFileBlocks(s,a,o)}catch(n){throw i.error("Process all placeholders error:",n),n}}async processFileBlocks(s,e,t){let o=e.filter(l=>l.fileInfo);if(o.length===0)return;t&&t.setMessage(`\u{1F4D6} \u6B63\u5728\u5E76\u884C\u8BFB\u53D6 ${o.length} \u4E2A\u6587\u4EF6...`);let r=o.map(async l=>{try{let c=await this.readLocalFile(l.fileInfo.originalPath);return{placeholderBlock:l,fileContent:c,success:!!c}}catch(c){return i.warn(`\u26A0\uFE0F Failed to read file: ${l.fileInfo.originalPath}`,c),{placeholderBlock:l,fileContent:null,success:!1}}}),n=(await Promise.all(r)).filter(l=>l.success);i.log(`\u{1F4C1} Successfully read ${n.length}/${o.length} files`);let a=[];for(let l=0;l<n.length;l++){let{placeholderBlock:c,fileContent:g}=n[l],h=c.fileInfo;t&&t.setMessage(`\u{1F4E4} \u6B63\u5728\u4E0A\u4F20\u6587\u4EF6 ${l+1}/${n.length}: ${h.fileName}...`);try{let E={...c,index:c.index+l};i.log(`\u{1F4CD} Adjusted insert position for ${h.fileName}: ${c.index} -> ${E.index}`);let I=await this.insertFileBlock(s,E),C=await this.uploadFileToDocument(s,I,h,g);await this.setFileBlockContent(s,I,C,h.isImage),a.push(c),i.log(`\u2705 Successfully processed file: ${h.fileName}`)}catch(E){i.error(`\u274C Failed to process file ${h.fileName}:`,E)}}a.length>0&&(t&&t.setMessage(`\u{1F504} \u6B63\u5728\u6E05\u7406 ${a.length} \u4E2A\u5360\u4F4D\u7B26...`),await this.batchReplacePlaceholderText(s,a))}async processFileUploads(s,e,t){if(e.length===0){i.log("\u{1F4DD} No local files to process");return}try{t&&t.setMessage(`\u{1F50D} \u6B63\u5728\u67E5\u627E\u5360\u4F4D\u7B26 (${e.length} \u4E2A\u6587\u4EF6)...`);let o=await this.findPlaceholderBlocks(s,e);if(o.length===0){i.warn("\u26A0\uFE0F No placeholder blocks found in document");return}i.log(`\u{1F3AF} Found ${o.length} placeholder blocks to process`);let r=this.sortPlaceholdersByOriginalOrder(o,e);i.log("\u{1F4CB} Sorted placeholder blocks by original order"),t&&t.setMessage(`\u{1F4D6} \u6B63\u5728\u5E76\u884C\u8BFB\u53D6 ${r.length} \u4E2A\u6587\u4EF6...`);let A=r.map(async c=>{var g;try{if(!c.fileInfo)throw new Error("File info is missing");let h=await this.readLocalFile(c.fileInfo.originalPath);return{placeholderBlock:c,fileContent:h,success:!!h}}catch(h){return i.warn(`\u26A0\uFE0F Failed to read file: ${((g=c.fileInfo)==null?void 0:g.originalPath)||"unknown"}`,h),{placeholderBlock:c,fileContent:null,success:!1}}}),a=(await Promise.all(A)).filter(c=>c.success);i.log(`\uFFFD Successfully read ${a.length}/${r.length} files`);let l=[];for(let c=0;c<a.length;c++){let{placeholderBlock:g,fileContent:h}=a[c],E=g.fileInfo;if(!E){i.warn("\u26A0\uFE0F Skipping file processing: fileInfo is missing");continue}t&&t.setMessage(`\u{1F4E4} \u6B63\u5728\u4E0A\u4F20\u6587\u4EF6 ${c+1}/${a.length}: ${E.fileName}...`);try{let I={...g,index:g.index+c};i.log(`\u{1F4CD} Adjusted insert position for ${E.fileName}: ${g.index} -> ${I.index}`);let C=await this.insertFileBlock(s,I),p=await this.uploadFileToDocument(s,C,E,h);await this.setFileBlockContent(s,C,p,E.isImage),l.push(g),i.log(`\u2705 Successfully processed file: ${E.fileName}`)}catch(I){i.error(`\u274C Failed to process file ${E.fileName}:`,I)}}if(l.length>0){t&&t.setMessage(`\u{1F504} \u6B63\u5728\u68C0\u67E5\u5E76\u6E05\u7406 ${l.length} \u4E2A\u5360\u4F4D\u7B26...`);let c=await this.findRemainingPlaceholders(s,l);c.length>0?(i.log(`\u{1F504} Found ${c.length} remaining placeholders to clean up`),await this.batchReplacePlaceholderText(s,c)):i.log("\u2705 All placeholders have already been cleaned up")}i.log(`\u{1F389} File upload processing completed: ${l.length} files processed`)}catch(o){throw i.error("Process file uploads error:",o),o}}sortPlaceholdersByOriginalOrder(s,e){i.log("\u{1F4CB} Original localFiles order:"),e.forEach((r,A)=>{i.log(`  ${A}: ${r.fileName} -> ${r.placeholder}`)}),i.log("\u{1F4CB} Found placeholder blocks:"),s.forEach((r,A)=>{var a,l;let n=((a=r.fileInfo)==null?void 0:a.fileName)||((l=r.calloutInfo)==null?void 0:l.type)||"unknown";i.log(`  ${A}: ${n} -> ${r.placeholder} (index: ${r.index})`)});let t=new Map;e.forEach((r,A)=>{t.set(r.placeholder,A)});let o=s.sort((r,A)=>{var g,h,E,I,C,p;let n=(g=t.get(r.placeholder))!=null?g:999,a=(h=t.get(A.placeholder))!=null?h:999,l=((E=r.fileInfo)==null?void 0:E.fileName)||((I=r.calloutInfo)==null?void 0:I.type)||"unknown",c=((C=A.fileInfo)==null?void 0:C.fileName)||((p=A.calloutInfo)==null?void 0:p.type)||"unknown";return i.log(`\u{1F504} Comparing: ${l}(order:${n}, index:${r.index}) vs ${c}(order:${a}, index:${A.index})`),n!==a?n-a:r.index-A.index});return i.log("\u{1F4CB} Sorted placeholder blocks:"),o.forEach((r,A)=>{var a,l;let n=((a=r.fileInfo)==null?void 0:a.fileName)||((l=r.calloutInfo)==null?void 0:l.type)||"unknown";i.log(`  ${A}: ${n} -> ${r.placeholder}`)}),o}async processSubDocuments(s,e,t){var o;i.log(`\u{1F680} Starting sub-document processing for ${e.length} documents`);for(let r=0;r<e.length;r++){let A=e[r];try{t&&t.setMessage(`\u{1F4C4} \u6B63\u5728\u5904\u7406\u5B50\u6587\u6863 ${r+1}/${e.length}: ${A.fileName}...`),i.log(`\u{1F4C4} Processing sub-document: ${A.fileName} (${A.originalPath})`);let n=await this.readSubDocumentContent(A.originalPath);if(!n){i.warn(`\u26A0\uFE0F Could not read sub-document: ${A.originalPath}, skipping...`);continue}let a=this.markdownProcessor.processCompleteWithFiles(n,3,this.settings.frontMatterHandling,!1,this.settings.enableLocalImageUpload,this.settings.enableLocalAttachmentUpload,this.settings.titleSource,this.settings.codeBlockFilterLanguages||[]),l=this.markdownProcessor.extractTitle(A.fileName.replace(".md",""),a.frontMatter,this.settings.titleSource);i.step(`Processing sub-document: ${A.fileName}`),i.verbose(`Sub-document path: ${A.originalPath}`),i.verbose(`Sub-document title: ${l}`),i.verbose("Front Matter:",a.frontMatter);let c=this.getExistingFeishuUrl(a.frontMatter),g,h=!1;if(i.verbose(`Existing URL check result: ${c||"No URL found"}`),c){i.step("Sub-document has existing URL, checking accessibility"),i.log(`\u{1F4CB} Sub-document already has URL: ${A.fileName} -> ${c}`),i.verbose(`Checking URL accessibility for: ${c}`);let E=await this.checkDocumentUrlAccessibility(c);if(i.verbose("URL accessibility result:",E),E.isAccessible){i.step("URL is accessible, reusing without any operations"),i.log(`\u2705 Existing URL is accessible, reusing directly: ${c}`);let I=this.extractDocumentIdFromUrl(c);i.verbose(`Extracted document ID: ${I}`),g={success:!0,documentToken:I||void 0,url:c,title:l},i.result("Sub-document URL reused",!0,{fileName:A.fileName,url:c,documentId:I})}else if(E.needsReauth){i.step("Sub-document needs reauth, token should already be refreshed by main document"),i.log(`\u{1F511} Sub-document URL needs reauth, retrying: ${A.fileName}`);let I=await this.checkDocumentUrlAccessibility(c);if(i.verbose("Retry accessibility result:",I),I.isAccessible){i.step("URL is now accessible after reauth, reusing"),i.log(`\u2705 Sub-document URL accessible after reauth: ${c}`);let C=this.extractDocumentIdFromUrl(c);g={success:!0,documentToken:C||void 0,url:c,title:l},i.result("Sub-document URL reused after reauth",!0,{fileName:A.fileName,url:c,documentId:C})}else i.step("URL still not accessible after reauth, creating new document"),i.warn(`\u26A0\uFE0F Sub-document URL still not accessible after reauth: ${c}, reason: ${I.error}`),g=await this.uploadSubDocument(l,a.content,t),h=!0,g.success&&i.result("Sub-document URL changed after failed reauth",!0,{fileName:A.fileName,oldUrl:c,newUrl:g.url})}else i.step("URL is not accessible, creating new document"),i.warn(`\u26A0\uFE0F Existing URL is not accessible: ${c}, reason: ${E.error}`),i.log(`\u{1F4E4} Creating new sub-document to replace inaccessible one: ${A.fileName}`),i.verbose(`Starting uploadSubDocument for: ${A.fileName}`),g=await this.uploadSubDocument(l,a.content,t),h=!0,g.success&&i.result("Sub-document URL changed",!0,{fileName:A.fileName,oldUrl:c,newUrl:g.url})}else i.step("No existing URL, creating new document"),((o=a.frontMatter)==null?void 0:o.feishu_shared_at)&&(i.warn(`\u26A0\uFE0F Sub-document has feishu_shared_at but no feishu_url, URL may have been lost: ${A.fileName}`),i.warn("\u26A0\uFE0F This may indicate a previous sharing issue or manual Front Matter modification")),i.log(`\u{1F4E4} Sub-document has no existing URL, creating new: ${A.fileName}`),i.verbose(`Starting uploadSubDocument for new document: ${A.fileName}`),g=await this.uploadSubDocument(l,a.content,t);if(!g.success){i.warn(`\u26A0\uFE0F Failed to process sub-document: ${A.fileName}, error: ${g.error}`);continue}try{if(this.settings.targetType==="wiki"&&this.settings.defaultWikiSpaceId){let E=g.documentToken;if(!E&&g.url&&(E=this.extractDocumentIdFromUrl(g.url)||void 0),E){let I=this.settings.defaultWikiNodeToken||void 0;i.log(`\u{1F4DA} Moving sub-document to wiki: space=${this.settings.defaultWikiSpaceId}, node=${I||"root"}`),await this.moveDocToWiki(this.settings.defaultWikiSpaceId,E,"docx",I)}}}catch(E){i.warn(`\u26A0\uFE0F Failed to move sub-document to wiki: ${A.fileName}`,E)}if(!c||h){if(a.localFiles.length>0&&g.documentToken)try{i.log(`\u{1F4CE} Processing ${a.localFiles.length} local files in sub-document: ${A.fileName}`),await this.processFileUploads(g.documentToken,a.localFiles,t),i.log(`\u2705 Successfully processed local files in sub-document: ${A.fileName}`)}catch(E){i.warn(`\u26A0\uFE0F Failed to process local files in sub-document ${A.fileName}:`,E)}}else i.log(`\u{1F4CB} Skipping file processing for sub-document with existing URL: ${A.fileName}`);try{let E=g.documentToken||g.url&&this.extractDocumentIdFromUrl(g.url)||void 0;E&&a.calloutBlocks&&a.calloutBlocks.length>0&&(i.log(`\u{1F3A8} Processing ${a.calloutBlocks.length} callouts in sub-document: ${A.fileName}`),await this.processAllPlaceholders(E,[],a.calloutBlocks,t))}catch(E){i.warn(`\u26A0\uFE0F Failed to process callouts in sub-document ${A.fileName}:`,E)}if(await this.insertSubDocumentLink(s,A,g),this.settings.enableShareMarkInFrontMatter&&g.url)try{let E=this.app.vault.getAbstractFileByPath(A.originalPath);if(E instanceof V.TFile){let I=!1,C="";if(h?(i.log(`\u{1F504} URL changed for sub-document: ${A.fileName}`),i.log(`   Old URL: ${c}`),i.log(`   New URL: ${g.url}`),I=!0,C=`\u5B50\u6587\u6863 "${A.fileName}" \u7684\u98DE\u4E66\u94FE\u63A5\u5DF2\u66F4\u65B0\uFF08\u539F\u94FE\u63A5\u4E0D\u53EF\u8BBF\u95EE\uFF09`):c?i.log(`\u{1F4CB} Sub-document URL unchanged, skipping Front Matter update: ${A.fileName}`):(i.log(`\u{1F4DD} Adding share mark to new sub-document: ${A.fileName}`),I=!0),I){let p=this.markdownProcessor.addShareMarkToFrontMatter(n,g.url);await this.app.vault.modify(E,p),i.log(`\u2705 Share mark updated for sub-document: ${A.fileName}`),C&&new V.Notice(C,5e3)}}else i.warn(`\u26A0\uFE0F Could not find sub-document file: ${A.originalPath}`)}catch(E){i.warn(`\u26A0\uFE0F Failed to update share mark for sub-document ${A.fileName}: ${E.message}`)}i.log(`\u2705 Successfully processed sub-document: ${A.fileName}`)}catch(n){i.error(`\u274C Error processing sub-document ${A.fileName}:`,n)}}i.log("\u2705 Completed sub-document processing")}async readSubDocumentContent(s){var e;try{let t=s.trim(),o=(0,V.normalizePath)(t);i.log(`\u{1F50D} Reading sub-document: "${s}" -> "${o}"`);let r=this.app.vault.getFileByPath(o);if(!r){let n=this.app.vault.getMarkdownFiles(),a=(e=o.split("/").pop())==null?void 0:e.toLowerCase();if(a){let l=n.find(c=>c.name.toLowerCase()===a);l&&(r=l,i.log(`\u2705 Found sub-document by name: ${r.path}`))}}if(!r)return i.warn(`\u274C Sub-document not found: ${o}`),null;let A=await this.app.vault.read(r);return i.log(`\u2705 Successfully read sub-document: ${r.path} (${A.length} characters)`),A}catch(t){return i.error(`\u274C Error reading sub-document ${s}:`,t),null}}getExistingFeishuUrl(s){if(i.verbose("Checking Front Matter for existing URL:",s),!s)return i.verbose("No Front Matter found"),null;let e=s.feishu_url;return i.verbose("feishu_url field value:",e),e&&typeof e=="string"&&e.trim()?(i.result("Found existing Feishu URL",!0,e),e.trim()):(i.verbose("No valid Feishu URL found in Front Matter"),null)}async checkDocumentUrlAccessibility(s){try{i.step("Checking document URL accessibility"),i.verbose(`Target URL: ${s}`);let e=this.extractDocumentIdFromUrl(s);if(i.verbose(`Extracted document ID: ${e}`),!e)return i.result("URL format validation",!1,"Cannot extract document ID"),{isAccessible:!1,error:"URL\u683C\u5F0F\u65E0\u6548\uFF0C\u65E0\u6CD5\u63D0\u53D6\u6587\u6863ID"};i.verbose(`Checking document access for ID: ${e}`);let t=await this.checkDocumentAccess(e);return i.verbose("Access check result:",t),t.hasAccess?(i.result("Document URL accessibility",!0,s),{isAccessible:!0}):t.needsReauth?(i.result("Document URL accessibility",!1,{url:s,reason:t.error,needsReauth:!0}),{isAccessible:!1,error:t.error,needsReauth:!0}):(i.result("Document URL accessibility",!1,{url:s,reason:t.error}),{isAccessible:!1,error:t.error})}catch(e){return i.error("Check document URL accessibility error:",e),{isAccessible:!1,error:e instanceof Error?e.message:"\u68C0\u67E5URL\u53EF\u8BBF\u95EE\u6027\u5931\u8D25"}}}async uploadSubDocument(s,e,t){try{i.log(`\u{1F4E4} Uploading sub-document: ${s}`);let o=await this.uploadMarkdownFile(s,e);if(!o.success)return{success:!1,error:o.error||"\u5B50\u6587\u6863\u4E0A\u4F20\u5931\u8D25"};let r=s.endsWith(".md")?s.slice(0,-3):s,A=await this.createImportTaskWithCorrectFolder(o.fileToken,r);if(!A.success)return{success:!1,error:A.error||"\u5B50\u6587\u6863\u5BFC\u5165\u4EFB\u52A1\u521B\u5EFA\u5931\u8D25"};let n=await this.waitForImportCompletionWithTimeout(A.ticket,15e3);if(n.success&&n.documentToken){let a=`https://feishu.cn/docx/${n.documentToken}`,l=[];if(this.settings.enableLinkShare){let g=(async()=>{try{t&&t.setMessage(`\u{1F517} \u6B63\u5728\u8BBE\u7F6E\u5B50\u6587\u6863\u6743\u9650: ${r}...`),i.log(`\u{1F517} Setting permissions for sub-document: ${r}`),await this.setDocumentSharePermissions(n.documentToken,!0),i.log(`\u2705 Sub-document permissions set successfully: ${r}`)}catch(h){i.warn(`\u26A0\uFE0F Failed to set sub-document permissions for ${r}:`,h)}})();l.push(g)}let c=(async()=>{try{await this.deleteSourceFile(o.fileToken)}catch(g){i.warn("\u26A0\uFE0F Failed to delete sub-document source file:",g)}})();return l.push(c),await Promise.allSettled(l),{success:!0,documentToken:n.documentToken,url:a,title:r}}else return{success:!1,error:"\u5B50\u6587\u6863\u5BFC\u5165\u8D85\u65F6\u6216\u5931\u8D25"}}catch(o){return i.error("Upload sub-document error:",o),{success:!1,error:o.message}}}async insertSubDocumentLink(s,e,t){try{i.log(`\u{1F517} Inserting sub-document link for: ${e.fileName}`);let o=await this.findPlaceholderBlocks(s,[e]);if(o.length===0){i.warn(`\u26A0\uFE0F No placeholder found for sub-document: ${e.fileName}`);return}let r=o[0],A=e.placeholder.replace(/^__/,"").replace(/__$/,"");await this.replaceTextWithLink(s,r.blockId,t.title,t.url,A),i.log(`\u2705 Successfully inserted sub-document link: ${e.fileName}`)}catch(o){i.error(`\u274C Error inserting sub-document link for ${e.fileName}:`,o)}}async getBlockContent(s,e){var t;try{let o=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${e}`,method:"GET",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"}}),r=o.json||JSON.parse(o.text);if(r.code!==0)return i.error(`\u274C Failed to get block content: ${r.msg}`),null;let A=(t=r.data)==null?void 0:t.block;if(!A)return i.error(`\u274C No block data found for ${e}`),null;let n=[];if(A.text&&A.text.elements)n=A.text.elements;else if(A.bullet&&A.bullet.elements)n=A.bullet.elements;else if(A.ordered&&A.ordered.elements)n=A.ordered.elements;else return i.warn(`\u26A0\uFE0F No text elements found in block ${e}, block type: ${A.block_type}`),{elements:[]};return i.log(`\u{1F4CB} Retrieved ${n.length} elements from block ${e}`),{elements:n}}catch(o){return i.error(`\u274C Error getting block content for ${e}:`,o),null}}buildTextElementsWithoutPlaceholder(s,e){i.log(`\u{1F527} Building text elements without placeholder: ${e}`);let t=[],o=e.replace(/^__/,"").replace(/__$/,""),r=[e,`!${o}!`,o,`!${o}`,`${o}!`];i.log(`\u{1F3AF} Clean placeholder: ${o}`),i.log("\u{1F50D} Possible placeholder formats:",r);for(let A=0;A<s.length;A++){let n=s[A];if(n.text_run&&n.text_run.content){let a=n.text_run.content,l=!1;i.log(`\u{1F4DD} Processing element ${A+1}: "${a}"`);for(let c of r){let g=a.indexOf(c);if(g!==-1){i.log(`\u2705 Found placeholder "${c}" at position ${g}`);let h=a.substring(0,g),E=a.substring(g+c.length);if(i.log(`  Before: "${h}"`),i.log(`  After: "${E}"`),h.length>0&&(t.push({text_run:{content:h,text_element_style:n.text_run.text_element_style}}),i.log(`  \u2795 Added before text: "${h}"`)),E.length>0){let I=E.trim();if(i.log(`  \u{1F50D} After placeholder analysis: length=${E.length}, trimmed="${I}"`),E.startsWith(`
`)&&(I==="---"||I==="")){i.log("  \u26A0\uFE0F Detected separator or empty content after newline, adjusting format");let C=E.replace(/^\n+/,"");C.length>0&&(t.push({text_run:{content:C,text_element_style:n.text_run.text_element_style}}),i.log(`  \u2795 Added cleaned after text: "${C}"`))}else t.push({text_run:{content:E,text_element_style:n.text_run.text_element_style}}),i.log(`  \u2795 Added after text: "${E}"`)}l=!0;break}}if(!l){let c=a.trim();if(i.log(`\u{1F50D} No placeholder found, checking for residual exclamation: "${c}"`),c==="!"||c.endsWith("!")&&c.length<=10)if(i.log("\u26A0\uFE0F Detected residual exclamation mark pattern"),c==="!")i.log("\u2705 Removed standalone exclamation mark"),l=!0;else{let g=a.replace(/\s*!\s*$/,"");g.length>0&&(t.push({text_run:{content:g,text_element_style:n.text_run.text_element_style}}),i.log(`\u2705 Removed trailing exclamation, new content: "${g}"`),l=!0)}}l||(t.push(n),i.log(`\u274C No placeholder or residual pattern found, keeping original: "${a}"`))}else t.push(n)}return t.length===0&&(i.log("\u26A0\uFE0F All elements were removed, adding empty text element to prevent API error"),t.push({text_run:{content:"",text_element_style:{}}})),i.log(`\u{1F504} Final result: ${t.length} elements`),t.forEach((A,n)=>{A.text_run&&i.log(`  Final Element ${n+1}: "${A.text_run.content}"`)}),t}buildTextElementsWithLink(s,e,t,o){let r=encodeURIComponent(t),A=[];for(let n of s)if(n.text_run&&n.text_run.content){let a=n.text_run.content,l=a.indexOf(o);if(l!==-1){let c=a.substring(0,l),g=a.substring(l+o.length);c.length>0&&A.push({text_run:{content:c,text_element_style:n.text_run.text_element_style}}),A.push({text_run:{content:e,text_element_style:{...n.text_run.text_element_style,link:{url:r}}}}),g.length>0&&A.push({text_run:{content:g,text_element_style:n.text_run.text_element_style}})}else A.push(n)}else A.push(n);return A}async replaceTextWithLink(s,e,t,o,r){try{let A=await this.getBlockContent(s,e);if(!A)throw new Error("\u65E0\u6CD5\u83B7\u53D6\u5757\u5185\u5BB9");let a={update_text_elements:{elements:this.buildTextElementsWithLink(A.elements,t,o,r)}};i.log(`\u{1F517} Replacing placeholder in block ${e} with link: "${t}" -> "${o}"`);let l=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${e}`,method:"PATCH",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(a)}),c=l.json||JSON.parse(l.text);if(c.code!==0)throw new Error(c.msg||"\u66FF\u6362\u6587\u672C\u4E3A\u94FE\u63A5\u5931\u8D25");i.log(`\u2705 Successfully replaced placeholder with link in block ${e}`)}catch(A){throw i.error(`\u274C Error replacing placeholder with link in block ${e}:`,A),A}}async setDocumentSharePermissions(s,e=!1){try{if(!await this.ensureValidToken())throw new Error("Token\u65E0\u6548\uFF0C\u8BF7\u91CD\u65B0\u6388\u6743");if(e)i.log(`\u{1F527} Setting document permissions (skipping check): ${this.settings.linkSharePermission}`);else try{let a=(await this.getDocumentPermissions(s)).link_share_entity,l=this.settings.linkSharePermission;if(a===l){i.log(`\u2705 Document permissions already correct: ${a}`);return}i.log(`\u{1F504} Document permissions need update: ${a} \u2192 ${l}`)}catch(n){i.warn("\u26A0\uFE0F Failed to get current permissions, proceeding with update:",n)}let o={};this.settings.enableLinkShare&&(o.link_share_entity=this.settings.linkSharePermission,this.settings.linkSharePermission==="anyone_readable"||this.settings.linkSharePermission,o.external_access_entity="open",o.share_entity="anyone",o.manage_collaborator_entity="collaborator_can_view"),i.log(`\u{1F527} Setting document share permissions for ${s}:`,o);let r=await(0,V.requestUrl)({url:`${R.BASE_URL}/drive/v2/permissions/${s}/public?type=docx`,method:"PATCH",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(o)});i.log(`\u{1F4CB} Set document permissions response status: ${r.status}`);let A;try{A=r.json||JSON.parse(r.text)}catch(n){throw i.error("\u274C Failed to parse response:",r.text),new Error(`API\u54CD\u5E94\u89E3\u6790\u5931\u8D25: ${r.status} - ${r.text}`)}if(i.log("\u{1F4CB} Set document permissions response data:",A),A.code!==0)throw i.error("\u274C API returned error:",{code:A.code,msg:A.msg,requestData:o,documentToken:s}),new Error(`\u8BBE\u7F6E\u6587\u6863\u5206\u4EAB\u6743\u9650\u5931\u8D25 (${A.code}): ${A.msg}`);i.log(`\u2705 Successfully set document share permissions for ${s}`)}catch(t){throw i.error("Set document share permissions error:",t),t}}async getDocumentPermissions(s){try{if(!await this.ensureValidToken())throw new Error("Token\u65E0\u6548\uFF0C\u8BF7\u91CD\u65B0\u6388\u6743");let t=await(0,V.requestUrl)({url:`${R.BASE_URL}/drive/v2/permissions/${s}/public?type=docx`,method:"GET",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"}}),o=t.json||JSON.parse(t.text);if(o.code!==0)throw new Error(o.msg||"\u83B7\u53D6\u6587\u6863\u6743\u9650\u8BBE\u7F6E\u5931\u8D25");return o.data.permission_public}catch(e){throw i.error("Get document permissions error:",e),e}}async getAllDocumentBlocks(s){try{i.log(`\u{1F4CB} Getting all blocks for document: ${s}`);let e=[],t="",o=!0;for(;o;){let r=new URLSearchParams({page_size:"500"});t&&r.append("page_token",t);let A=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks?${r.toString()}`,method:"GET",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"}}),n=A.json||JSON.parse(A.text);if(n.code!==0)throw new Error(n.msg||"\u83B7\u53D6\u6587\u6863\u5757\u5931\u8D25");e.push(...n.data.items),o=n.data.has_more,t=n.data.page_token}return i.log(`\u{1F4CB} Retrieved ${e.length} blocks from document`),e}catch(e){throw i.error("Get all document blocks error:",e),e}}async clearDocumentContent(s){try{if(i.log(`\u{1F9F9} Starting to clear document content: ${s}`),!await this.ensureValidToken())throw new Error("Token\u65E0\u6548\uFF0C\u8BF7\u91CD\u65B0\u6388\u6743");let t=await this.getAllDocumentBlocks(s);if(t.length===0)return i.log("\u{1F4C4} Document is already empty"),{success:!0};let o=t.find(n=>n.block_type===1);if(!o)throw new Error("\u672A\u627E\u5230\u6587\u6863\u6839\u5757");i.log(`\u{1F4C4} Found root block: ${o.block_id}`);let r=o.children||[];if(r.length===0)return i.log("\u{1F4C4} Document has no content to clear"),{success:!0};i.log(`\u{1F5D1}\uFE0F Found ${r.length} child blocks to delete`);let A=await this.batchDeleteBlocks(s,o.block_id,0,r.length);if(A.success)return i.log(`\u2705 Successfully cleared document content: ${r.length} blocks deleted`),{success:!0};throw new Error(A.error||"\u6279\u91CF\u5220\u9664\u5931\u8D25")}catch(e){return i.error("Clear document content error:",e),{success:!1,error:e instanceof Error?e.message:"\u6E05\u7A7A\u6587\u6863\u5185\u5BB9\u5931\u8D25"}}}async batchDeleteBlocks(s,e,t,o){try{i.log(`\u{1F5D1}\uFE0F Batch deleting blocks from ${t} to ${o} in parent ${e}`);let r={start_index:t,end_index:o},A=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${e}/children/batch_delete`,method:"DELETE",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(r)}),n=A.json||JSON.parse(A.text);if(n.code!==0)throw new Error(n.msg||"\u6279\u91CF\u5220\u9664\u5757\u5931\u8D25");return i.log(`\u2705 Successfully deleted blocks from ${t} to ${o}`),{success:!0}}catch(r){return i.error("Batch delete blocks error:",r),{success:!1,error:r instanceof Error?r.message:"\u6279\u91CF\u5220\u9664\u5757\u5931\u8D25"}}}extractDocumentIdFromUrl(s){try{if(this.documentIdCache.has(s)){let t=this.documentIdCache.get(s);return i.verbose(`\u{1F50D} Using cached document ID for: ${s} -> ${t}`),t||null}i.verbose(`\u{1F50D} Extracting document ID from URL: ${s}`);let e=[/\/docx\/([a-zA-Z0-9]+)/,/\/docs\/([a-zA-Z0-9]+)/,/documents\/([a-zA-Z0-9]+)/];for(let t of e){let o=s.match(t);if(o&&o[1]){let r=o[1];return i.log(`\u2705 Extracted document ID: ${r}`),this.documentIdCache.set(s,r),r}}return i.warn(`\u26A0\uFE0F Could not extract document ID from URL: ${s}`),this.documentIdCache.set(s,null),null}catch(e){return i.error("Extract document ID error:",e),this.documentIdCache.set(s,null),null}}async checkDocumentAccess(s){for(let e=1;e<=2;e++)try{if(i.log(`\u{1F510} Checking document access: ${s}`),e===1&&!await this.ensureValidToken())return{hasAccess:!1,error:"Token\u65E0\u6548\uFF0C\u8BF7\u91CD\u65B0\u6388\u6743",needsReauth:!0};let t=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}`,method:"GET",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"}}),o=t.json||JSON.parse(t.text);if(o.code===0)return i.log(`\u2705 Document access confirmed: ${s}`),{hasAccess:!0};if(o.code===403)return{hasAccess:!1,error:"\u6CA1\u6709\u8BBF\u95EE\u8BE5\u6587\u6863\u7684\u6743\u9650"};if(o.code===404)return{hasAccess:!1,error:"\u6587\u6863\u4E0D\u5B58\u5728\u6216\u5DF2\u88AB\u5220\u9664"};if(this.isTokenExpiredError(o.code))if(e===1){if(await this.refreshAccessToken())continue;return{hasAccess:!1,error:"Token\u5DF2\u5931\u6548",needsReauth:!0}}else return{hasAccess:!1,error:"Token\u5DF2\u5931\u6548",needsReauth:!0};else return{hasAccess:!1,error:o.msg||"\u6587\u6863\u8BBF\u95EE\u68C0\u67E5\u5931\u8D25"}}catch(t){i.error(`Check document access error (attempt ${e}):`,t);let o=t instanceof Error?t.message:"\u6587\u6863\u8BBF\u95EE\u68C0\u67E5\u5931\u8D25",r=o.includes("401")||o.includes("403")||o.includes("Unauthorized")||o.includes("status 401")||o.includes("status 403");if(r&&e===1&&await this.refreshAccessToken())continue;return{hasAccess:!1,error:o,needsReauth:r}}return{hasAccess:!1,error:"\u6587\u6863\u8BBF\u95EE\u68C0\u67E5\u5931\u8D25",needsReauth:!0}}async copyContentToDocument(s,e,t,o){try{i.log(`\u{1F4CB} Copying content from ${s} to ${e}`);let r=await this.getAllDocumentBlocks(s),A=r.find(E=>E.block_type===1);if(!A)throw new Error("\u6E90\u6587\u6863\u6839\u5757\u672A\u627E\u5230");let n=A.children||[];if(n.length===0)return i.log("\u{1F4C4} Source document has no content to copy"),{success:!0};let l=(await this.getAllDocumentBlocks(e)).find(E=>E.block_type===1);if(!l)throw new Error("\u76EE\u6807\u6587\u6863\u6839\u5757\u672A\u627E\u5230");i.log(`\u{1F4CB} Found ${n.length} blocks to copy`);let c=await this.copyBlocksToTarget(s,e,n,l.block_id);if(!c.success)throw new Error(c.error||"\u590D\u5236\u5757\u5931\u8D25");i.log(`\u2705 Successfully copied ${n.length} blocks to target document`);try{await this.processImageBlocksAfterCopy(s,e,r)}catch(E){i.error("\u274C Failed to process image blocks:",E)}let g=!1,h=o&&o.length>0;if(g||h){i.log(`\u{1F3AF} Processing placeholders after content copy: ${(t==null?void 0:t.length)||0} files + ${(o==null?void 0:o.length)||0} callouts`);try{await this.processAllPlaceholders(e,[],o),i.log("\u2705 Successfully processed all placeholders")}catch(E){i.error("\u274C Failed to process placeholders:",E)}}return{success:!0}}catch(r){return i.error("Copy content to document error:",r),{success:!1,error:r instanceof Error?r.message:"\u590D\u5236\u6587\u6863\u5185\u5BB9\u5931\u8D25"}}}async processImageBlocksAfterCopy(s,e,t){var o,r;try{i.log("\u{1F5BC}\uFE0F Processing image blocks after copy...");let n=(await this.getAllDocumentBlocks(e)).filter(g=>g.block_type===27);if(n.length===0){i.log("\u{1F4C4} No image blocks found in target document");return}i.log(`\u{1F5BC}\uFE0F Found ${n.length} image blocks to process`);let a=new Map,l=0;for(let g of t)g.block_type===27&&((o=g.image)!=null&&o.token)&&(a.set(l,g.image.token),l++);let c=0;for(let g of n)try{if((r=g.image)!=null&&r.token)i.log(`\u2705 Image block ${g.block_id} already has token: ${g.image.token}`);else{i.log(`\u{1F5BC}\uFE0F Processing empty image block: ${g.block_id}`);let h=a.get(c);h?(i.log(`\u{1F504} Found source token for image block ${g.block_id}: ${h}`),await this.imageProcessingService.reprocessImageBlock(e,g,h)?i.log(`\u2705 Successfully reprocessed image block ${g.block_id}`):i.warn(`\u26A0\uFE0F Failed to reprocess image block ${g.block_id}`)):i.warn(`\u26A0\uFE0F No source token found for image block ${g.block_id}`)}c++}catch(h){i.error(`\u274C Failed to process image block ${g.block_id}:`,h),c++}i.log("\u2705 Completed processing image blocks")}catch(A){throw i.error("\u274C Failed to process image blocks after copy:",A),A}}async copyBlocksToTarget(s,e,t,o){try{i.log(`\u{1F4CB} Copying ${t.length} blocks to target parent: ${o}`);let r=await this.getAllDocumentBlocks(s),A=new Map(r.map(a=>[a.block_id,a])),n=await this.tryBatchNestedCopy(t,A,e,o);return n.success?(i.log(`\u2705 Successfully batch copied ${t.length} blocks`),{success:!0}):(i.warn(`\u26A0\uFE0F Batch copy failed, falling back to individual copy: ${n.error}`),await this.fallbackToIndividualCopy(t,A,e,o))}catch(r){return i.error("Copy blocks to target error:",r),{success:!1,error:r instanceof Error?r.message:"\u590D\u5236\u5757\u5230\u76EE\u6807\u6587\u6863\u5931\u8D25"}}}async tryBatchNestedCopy(s,e,t,o){try{let r=this.buildNestedBlocksFromSource(s,e);if(r.length===0)return{success:!0};let A=this.countTotalBlocks(r);return i.log(`\u{1F4CA} Total blocks to copy: ${A} (root blocks: ${r.length})`),A>1e3?(i.log("\u{1F4E6} Block count exceeds 1000, splitting into batches..."),await this.batchCopyInChunks(r,t,o)):(i.log(`\u{1F680} Attempting single batch copy of ${r.length} root blocks (${A} total blocks)`),await this.executeSingleBatch(r,t,o))}catch(r){return{success:!1,error:r instanceof Error?r.message:"\u6279\u91CF\u5D4C\u5957\u590D\u5236\u5931\u8D25"}}}async executeSingleBatch(s,e,t){try{i.log(`\u{1F680} Attempting batch copy of ${s.length} blocks`);let o=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${e}/blocks/${t}/children`,method:"POST",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify({children:s})}),r=o.json||JSON.parse(o.text);return r.code!==0?(i.error(`\u274C Batch copy failed: ${r.msg}`),{success:!1,error:r.msg||"\u6279\u91CF\u521B\u5EFA\u5D4C\u5957\u5757\u5931\u8D25"}):{success:!0}}catch(o){if(i.error("\u274C Single batch execution error:",o),o&&typeof o=="object"&&"response"in o)try{let A=o.response;i.error("\u274C Error response status:",A==null?void 0:A.status),i.error("\u274C Error response text:",A==null?void 0:A.text)}catch(A){i.error("\u274C Failed to parse error response:",A)}let r="\u5355\u6279\u6B21\u590D\u5236\u5931\u8D25";return o instanceof Error&&(r=o.message,o.message.includes("status 400")&&(r+=" (\u53EF\u80FD\u662F\u5757\u6570\u636E\u683C\u5F0F\u95EE\u9898\u6216\u5305\u542B\u65E0\u6548\u7684\u56FE\u7247\u5757)")),{success:!1,error:r}}}async batchCopyInChunks(s,e,t){try{let o=this.splitBlocksIntoBatches(s,800);i.log(`\u{1F4E6} Split into ${o.length} batches`);let r=t;for(let A=0;A<o.length;A++){let n=o[A],a=this.countTotalBlocks(n);i.log(`\u{1F4E6} Processing batch ${A+1}/${o.length} (${a} blocks)`);let l=await this.executeSingleBatch(n,e,r);if(!l.success)return{success:!1,error:`Batch ${A+1} failed: ${l.error}`};A<o.length-1&&(i.log(`\u23F1\uFE0F Waiting ${500}ms between batches...`),await new Promise(g=>setTimeout(g,500)))}return i.log(`\u2705 Successfully completed all ${o.length} batches`),{success:!0}}catch(o){return{success:!1,error:o instanceof Error?o.message:"\u5206\u6279\u590D\u5236\u5931\u8D25"}}}splitBlocksIntoBatches(s,e){let t=[],o=[],r=0;for(let A of s){let n=this.countTotalBlocks([A]);if(n>e){o.length>0&&(t.push([...o]),o=[],r=0),t.push([A]);continue}r+n>e&&o.length>0?(t.push([...o]),o=[A],r=n):(o.push(A),r+=n)}return o.length>0&&t.push(o),t}async fallbackToIndividualCopy(s,e,t,o){try{i.log(`\u{1F4CB} Falling back to individual copy for ${s.length} blocks`);for(let r=0;r<s.length;r++){let A=s[r],n=e.get(A);if(!n){i.warn(`\u26A0\uFE0F Source block not found: ${A}`);continue}try{r>0&&(i.verbose(`\u23F1\uFE0F Waiting ${300}ms between block copies...`),await new Promise(l=>setTimeout(l,300))),await this.copyIndividualBlock(n,t,o),i.log(`\u2705 Copied block ${r+1}/${s.length}: ${A}`)}catch(a){i.error(`\u274C Failed to copy block ${A}:`,a)}}return{success:!0}}catch(r){return i.error("Fallback individual copy error:",r),{success:!1,error:r instanceof Error?r.message:"\u9010\u4E2A\u590D\u5236\u5931\u8D25"}}}buildNestedBlocksFromSource(s,e){let t=[];for(let o of s){let r=e.get(o);if(!r){i.warn(`\u26A0\uFE0F Source block not found: ${o}`);continue}if(r.block_type===27&&(!r.image||!r.image.token)){i.warn(`\u26A0\uFE0F Skipping empty image block in batch copy: ${r.block_id}`);continue}let A=this.buildBlockDataForCopy(r);r.children&&r.children.length>0&&(A.children=this.buildNestedBlocksFromSource(r.children,e)),t.push(A)}return t}countTotalBlocks(s){let e=0;for(let t of s)e++,t.children&&Array.isArray(t.children)&&(e+=this.countTotalBlocks(t.children));return e}async copyIndividualBlock(s,e,t){let r=0;for(;r<3;)try{if(await this.rateLimitController.throttle("block"),s.block_type===27&&(!s.image||!s.image.token)){i.warn(`\u26A0\uFE0F Skipping empty image block: ${s.block_id}`);return}let n={children:[this.buildBlockDataForCopy(s)]};if(s.block_type===27&&(i.log("\u{1F5BC}\uFE0F Image block copy request data:",JSON.stringify(n,null,2)),i.log("\u{1F5BC}\uFE0F Original image block:",JSON.stringify(s,null,2))),i.verbose(`\u{1F4DD} Creating block in target document (attempt ${r+1}/${3}):`,{type:s.block_type,targetParent:t}),r>0){let c=Math.min(1e3*Math.pow(2,r-1),5e3);i.verbose(`\u23F1\uFE0F Waiting ${c}ms before retry...`),await new Promise(g=>setTimeout(g,c))}let a;try{a=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${e}/blocks/${t}/children`,method:"POST",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(n)}),s.block_type===27&&(i.log(`\u{1F5BC}\uFE0F Image block API response status: ${a.status}`),i.log("\u{1F5BC}\uFE0F Image block API response:",a.json||a.text))}catch(c){throw s.block_type===27&&(i.log("\u{1F5BC}\uFE0F Image block request failed:",c),i.log("\u{1F5BC}\uFE0F Error message:",c.message),i.log("\u{1F5BC}\uFE0F Error status:",c.status),c.response&&i.log("\u{1F5BC}\uFE0F Error response:",c.response),c.json&&i.log("\u{1F5BC}\uFE0F Error json:",c.json),c.text&&i.log("\u{1F5BC}\uFE0F Error text:",c.text),c.data&&i.log("\u{1F5BC}\uFE0F Error data:",c.data)),c}let l=a.json||JSON.parse(a.text);if(l.code!==0)throw new Error(l.msg||"\u521B\u5EFA\u5757\u5931\u8D25");i.log("\u2705 Successfully created block in target document");return}catch(A){if(r++,A.message.includes("429")||A.message.includes("Request failed, status 429")){if(i.warn(`\u26A0\uFE0F Rate limit hit, retrying... (${r}/${3})`),r>=3){if(i.error("\u274C Max retries reached for rate limit, giving up on block"),s.block_type===27){i.warn("\u26A0\uFE0F Image block copy failed due to rate limit, continuing...");return}throw new Error(`API\u9891\u7387\u9650\u5236\uFF0C\u91CD\u8BD5${3}\u6B21\u540E\u4ECD\u5931\u8D25: ${A.message}`)}}else{if(i.error("Copy individual block error:",A),s.block_type===27&&(i.log("\u{1F5BC}\uFE0F Image block API error details:",A),A.response?(i.log("\u{1F5BC}\uFE0F Error response status:",A.response.status),i.log("\u{1F5BC}\uFE0F Error response data:",A.response.data)):A.json?i.log("\u{1F5BC}\uFE0F Error json:",A.json):A.text&&i.log("\u{1F5BC}\uFE0F Error text:",A.text)),r>=3){if(s.block_type===27){i.warn(`\u26A0\uFE0F Image block copy failed after ${3} attempts, continuing...`);return}throw A}let n=Math.min(1e3*Math.pow(2,r-1),5e3);await new Promise(a=>setTimeout(a,n))}}}buildBlockDataForCopy(s,e){let t=s.block_type;switch(t){case 2:return{block_type:2,text:s.text||{elements:[{text_run:{content:""}}]}};case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:return{block_type:t,[this.getHeadingFieldName(t)]:s[this.getHeadingFieldName(t)]||{elements:[{text_run:{content:""}}]}};case 12:return{block_type:12,bullet:s.bullet||{elements:[{text_run:{content:""}}]}};case 13:return{block_type:13,ordered:s.ordered||{elements:[{text_run:{content:""}}]}};case 14:return{block_type:14,code:s.code||{elements:[{text_run:{content:""}}]}};case 15:return{block_type:15,quote:s.quote||{elements:[{text_run:{content:""}}]}};case 17:return{block_type:17,todo:s.todo||{elements:[{text_run:{content:""}}]}};case 22:return s.text?{block_type:2,text:s.text}:{block_type:t,...s};case 27:return this.buildImageBlockData(s,e);case 33:return{block_type:33,view:s.view||{}};default:return i.warn(`\u26A0\uFE0F Unsupported block type for copy: ${t}`),s.text?{block_type:2,text:s.text}:{block_type:t,...s}}}buildImageBlockData(s,e){var t,o,r,A;return(t=s.image)!=null&&t.token?{block_type:27,image:{width:((o=s.image)==null?void 0:o.width)||100,height:((r=s.image)==null?void 0:r.height)||100,align:((A=s.image)==null?void 0:A.align)||1}}:this.imageProcessingService.createImagePlaceholderBlock(s)}findLocalFileForImageBlock(s,e){var o;if(!e||!e.localFiles)return null;let t=(o=s.image)==null?void 0:o.token;return t&&e.localFiles.find(r=>r.isImage&&(r.placeholder.includes(t)||r.fileName.includes(t)||!1))||null}getHeadingFieldName(s){return{3:"heading1",4:"heading2",5:"heading3",6:"heading4",7:"heading5",8:"heading6",9:"heading7",10:"heading8",11:"heading9"}[s]||"text"}async updateExistingDocument(s,e,t,o){let r=null,A=null,n=null,a=null;try{if(i.log(`\u{1F504} Starting document update process for: ${s}`),o&&o.setMessage("\u{1F50D} \u6B63\u5728\u89E3\u6790\u6587\u6863\u94FE\u63A5..."),a=this.extractDocumentIdFromUrl(s),!a)throw new Error("\u65E0\u6CD5\u4ECEURL\u4E2D\u63D0\u53D6\u6587\u6863ID\uFF0C\u8BF7\u68C0\u67E5\u94FE\u63A5\u683C\u5F0F\u662F\u5426\u6B63\u786E");i.verbose(`\u{1F4CB} Skipping duplicate access check for document: ${a}`),o&&o.setMessage("\u{1F4BE} \u6B63\u5728\u5907\u4EFD\u539F\u59CB\u6587\u6863\u5185\u5BB9..."),o&&o.setMessage("\u{1F4BE} \u6B63\u5728\u5907\u4EFD\u539F\u59CB\u6587\u6863\u5185\u5BB9...");try{n=await this.getAllDocumentBlocks(a),i.log(`\u2705 Original content backed up: ${n.length} blocks`)}catch(E){i.warn("\u26A0\uFE0F Failed to backup original content:",E)}o&&o.setMessage("\u{1F4C4} \u6B63\u5728\u521B\u5EFA\u4E34\u65F6\u6587\u6863...");let l={content:t.content,localFiles:[],frontMatter:t.frontMatter,extractedTitle:t.extractedTitle},c=await this.shareToDrive(e+"_temp",l,o,!0);if(!c.success)throw new Error(c.error||"\u521B\u5EFA\u4E34\u65F6\u6587\u6863\u5931\u8D25");if(r=this.extractDocumentIdFromUrl(c.url),!r)throw new Error("\u65E0\u6CD5\u4ECE\u4E34\u65F6\u6587\u6863URL\u4E2D\u63D0\u53D6\u6587\u6863ID");A=c.sourceFileToken||null,i.log(`\u2705 Temporary document created: ${r}`),A&&i.log(`\u{1F4DD} Temporary source file token saved: ${A}`),o&&o.setMessage("\u{1F9F9} \u6B63\u5728\u6E05\u7A7A\u73B0\u6709\u6587\u6863\u5185\u5BB9...");let g=await this.clearDocumentContent(a);if(!g.success)throw new Error(g.error||"\u6E05\u7A7A\u6587\u6863\u5185\u5BB9\u5931\u8D25");o&&o.setMessage("\u{1F4CB} \u6B63\u5728\u590D\u5236\u5185\u5BB9\u5230\u76EE\u6807\u6587\u6863...");let h=await this.copyContentToDocument(r,a,[],t.calloutBlocks);if(!h.success)throw new Error(h.error||"\u590D\u5236\u5185\u5BB9\u5931\u8D25");if(t.localFiles.length>0)try{let E=t.localFiles.filter(C=>C.isSubDocument),I=t.localFiles.filter(C=>!C.isSubDocument);E.length>0&&(o&&o.setMessage(`\u{1F4C4} \u6B63\u5728\u5904\u7406 ${E.length} \u4E2A\u5B50\u6587\u6863...`),await this.processSubDocuments(a,E,o)),I.length>0&&(o&&o.setMessage(`\u{1F4CE} \u6B63\u5728\u5904\u7406 ${I.length} \u4E2A\u9644\u4EF6...`),await this.processFileUploads(a,I,o))}catch(E){i.warn("\u26A0\uFE0F File upload failed, but document content was updated:",E)}try{o&&o.setMessage("\u{1F5D1}\uFE0F \u6B63\u5728\u6E05\u7406\u4E34\u65F6\u6587\u6863..."),await this.deleteDocument(r),r=null,i.log("\u2705 Temporary document deleted successfully"),i.log("\u{1F4DD} Temporary source file handled by shareMarkdownWithFiles, no additional deletion needed")}catch(E){i.warn("\u26A0\uFE0F Failed to delete temporary document:",E)}return i.log(`\u2705 Document update completed successfully: ${s}`),{success:!0,url:s,title:e}}catch(l){return i.error("Update existing document error:",l),await this.handleUpdateError(l,a,r,A,n,e,o),{success:!1,error:l instanceof Error?l.message:"\u66F4\u65B0\u6587\u6863\u5931\u8D25"}}}async handleUpdateError(s,e,t,o,r,A,n){try{if(i.log("\u{1F504} Starting error handling and rollback process..."),t)try{n&&n.setMessage("\u{1F5D1}\uFE0F \u6B63\u5728\u6E05\u7406\u4E34\u65F6\u6587\u6863..."),await this.deleteDocument(t),i.log("\u2705 Temporary document cleaned up"),i.log("\u{1F4DD} Temporary source file handled by shareMarkdownWithFiles, no additional cleanup needed")}catch(a){i.warn("\u26A0\uFE0F Failed to cleanup temporary document:",a)}if(e&&r&&r.length>0)try{n&&n.setMessage("\u{1F504} \u6B63\u5728\u5C1D\u8BD5\u56DE\u6EDA\u5230\u539F\u59CB\u5185\u5BB9...");let a=await this.rollbackDocumentContent(e,r);a.success?(i.log("\u2705 Successfully rolled back to original content"),n&&n.setMessage("\u2705 \u5DF2\u56DE\u6EDA\u5230\u539F\u59CB\u5185\u5BB9")):i.warn("\u26A0\uFE0F Failed to rollback content:",a.error)}catch(a){i.error("\u274C Rollback failed:",a)}i.error("\u{1F4CB} Update error details:",{originalError:s,documentId:e,tempDocumentId:t,hasBackup:!!r,backupSize:(r==null?void 0:r.length)||0})}catch(a){i.error("\u274C Error in error handler:",a)}}async rollbackDocumentContent(s,e){try{i.log(`\u{1F504} Rolling back document content: ${e.length} blocks`);let t=await this.clearDocumentContent(s);if(!t.success)throw new Error(t.error||"\u6E05\u7A7A\u6587\u6863\u5931\u8D25");let o=e.find(A=>A.block_type===1);if(!o||!o.children||o.children.length===0)return i.log("\u{1F4C4} No content to restore"),{success:!0};let r=e.filter(A=>o.children.includes(A.block_id)).map(A=>this.buildBlockDataForCopy(A));if(r.length>0){let A={children:r},n=await(0,V.requestUrl)({url:`${R.BASE_URL}/docx/v1/documents/${s}/blocks/${o.block_id}/children`,method:"POST",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(A)}),a=n.json||JSON.parse(n.text);if(a.code!==0)throw new Error(a.msg||"\u6062\u590D\u5185\u5BB9\u5931\u8D25")}return i.log(`\u2705 Successfully rolled back ${r.length} blocks`),{success:!0}}catch(t){return i.error("Rollback document content error:",t),{success:!1,error:t instanceof Error?t.message:"\u56DE\u6EDA\u5931\u8D25"}}}async deleteDocument(s){try{if(i.log(`\u{1F5D1}\uFE0F Starting to delete document: ${s}`),!await this.ensureValidToken())throw new Error("Token\u65E0\u6548\uFF0C\u65E0\u6CD5\u5220\u9664\u6587\u6863");let t=`${R.BASE_URL}/drive/v1/files/${s}?type=docx`;i.log(`\u{1F517} Delete API URL: ${t}`),i.log(`\u{1F511} Using access token: ${this.settings.accessToken?this.settings.accessToken.substring(0,10)+"...":"null"}`);let o=await(0,V.requestUrl)({url:t,method:"DELETE",headers:{Authorization:`Bearer ${this.settings.accessToken}`,"Content-Type":"application/json"}});i.log(`\u{1F4E1} Delete response status: ${o.status}`);let r={"content-type":o.headers["content-type"],"request-id":o.headers["request-id"],"x-tt-logid":o.headers["x-tt-logid"]};i.verbose("\u{1F4E1} Delete response headers (key):",r);let A;try{A=o.json||JSON.parse(o.text),i.log("\u{1F4E1} Delete response:",{code:A.code,msg:A.msg,success:A.code===0})}catch(n){throw i.log("\u{1F4E1} Delete response text:",o.text),new Error(`\u89E3\u6790\u5220\u9664\u54CD\u5E94\u5931\u8D25: ${n.message}`)}if(A.code!==0)throw i.error(`\u274C Delete failed with code ${A.code}: ${A.msg}`),new Error(`\u5220\u9664\u6587\u6863\u5931\u8D25 (${A.code}): ${A.msg||"\u672A\u77E5\u9519\u8BEF"}`);i.log(`\u2705 Document deleted successfully: ${s}`),A.data&&A.data.task_id&&i.log(`\u{1F4CB} Async delete task created: ${A.data.task_id}`)}catch(e){throw i.error("Delete document error details:",{documentId:s,error:e.message,stack:e.stack}),e}}async verifyDocumentLinkSharing(s){try{let e=await this.getDocumentPermissions(s);i.log("\u{1F50D} Analyzing document permissions:",e);let t=e.link_share_entity,o=e.external_access_entity,r=!1,A="none",n="none",a="";t==="close"?a="\u94FE\u63A5\u5206\u4EAB\u5DF2\u5173\u95ED\uFF0C\u53EA\u6709\u534F\u4F5C\u8005\u53EF\u4EE5\u8BBF\u95EE\u6587\u6863":t==="tenant_readable"?(r=!0,A="tenant",n="readable",a="\u7EC4\u7EC7\u5185\u83B7\u5F97\u94FE\u63A5\u7684\u4EBA\u53EF\u4EE5\u9605\u8BFB\u6587\u6863"):t==="tenant_editable"?(r=!0,A="tenant",n="editable",a="\u7EC4\u7EC7\u5185\u83B7\u5F97\u94FE\u63A5\u7684\u4EBA\u53EF\u4EE5\u7F16\u8F91\u6587\u6863"):t==="anyone_can_view"&&o==="open"?(r=!0,A="internet",n="readable",a="\u4E92\u8054\u7F51\u4E0A\u83B7\u5F97\u94FE\u63A5\u7684\u4EFB\u4F55\u4EBA\u90FD\u53EF\u4EE5\u9605\u8BFB\u6587\u6863"):t==="anyone_can_edit"&&o==="open"?(r=!0,A="internet",n="editable",a="\u4E92\u8054\u7F51\u4E0A\u83B7\u5F97\u94FE\u63A5\u7684\u4EFB\u4F55\u4EBA\u90FD\u53EF\u4EE5\u7F16\u8F91\u6587\u6863"):a=`\u672A\u77E5\u7684\u94FE\u63A5\u5206\u4EAB\u8BBE\u7F6E: ${t}, external_access: ${o}`;let l={isLinkSharingEnabled:r,shareScope:A,accessLevel:n,explanation:a};return i.log("\u{1F4CA} Link sharing analysis result:",l),l}catch(e){throw i.error("Verify document link sharing error:",e),e}}};var x=require("obsidian");var U=require("obsidian"),j=class extends U.Modal{constructor(e,t,o){super(e);this.feishuApi=t,this.onSuccess=o}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h2",{text:"\u{1F510} \u98DE\u4E66\u624B\u52A8\u6388\u6743"});let t=e.createDiv("setting-item-description"),r=t.createEl("p").createEl("strong");r.textContent="\u{1F680} \u7B80\u5316\u6388\u6743\u6D41\u7A0B - \u53EA\u9700\u590D\u5236\u7C98\u8D34URL\uFF1A";let A=t.createEl("ol");A.createEl("li").textContent='\u70B9\u51FB\u4E0B\u65B9\u7684"\u6253\u5F00\u6388\u6743\u9875\u9762"\u6309\u94AE',A.createEl("li").textContent="\u5728\u5F39\u51FA\u7684\u98DE\u4E66\u9875\u9762\u4E2D\u767B\u5F55\u5E76\u786E\u8BA4\u6388\u6743",A.createEl("li").textContent="\u6388\u6743\u6210\u529F\u540E\uFF0C\u4F1A\u8DF3\u8F6C\u5230\u4E00\u4E2A\u663E\u793A\u9519\u8BEF\u7684\u9875\u9762\uFF08\u8FD9\u662F\u6B63\u5E38\u7684\uFF09";let n=A.createEl("li");n.createEl("strong").textContent="\u590D\u5236\u6D4F\u89C8\u5668\u5730\u5740\u680F\u7684\u5B8C\u6574URL",n.appendText("\uFF08\u5305\u542B code= \u53C2\u6570\uFF09"),A.createEl("li").textContent="\u5C06\u5B8C\u6574URL\u7C98\u8D34\u5230\u4E0B\u65B9\u8F93\u5165\u6846\u4E2D",A.createEl("li").textContent='\u70B9\u51FB"\u5B8C\u6210\u6388\u6743"\u6309\u94AE';let a=t.createDiv({cls:"setting-item"}),l=a.createEl("strong");l.textContent="\u{1F4A1} \u63D0\u793A\uFF1A",a.appendText("\u65E0\u9700\u624B\u52A8\u63D0\u53D6\u6388\u6743\u7801\uFF0C\u76F4\u63A5\u590D\u5236\u5B8C\u6574\u7684\u56DE\u8C03URL\u5373\u53EF\uFF01"),new U.Setting(e).setName("\u7B2C\u4E00\u6B65\uFF1A\u6253\u5F00\u6388\u6743\u9875\u9762").setDesc("\u70B9\u51FB\u6309\u94AE\u5728\u6D4F\u89C8\u5668\u4E2D\u6253\u5F00\u98DE\u4E66\u6388\u6743\u9875\u9762").addButton(g=>{g.setButtonText("\u{1F310} \u6253\u5F00\u6388\u6743\u9875\u9762").setCta().onClick(()=>{try{let h=this.feishuApi.generateAuthUrl();window.open(h,"_blank"),new U.Notice("\u2705 \u6388\u6743\u9875\u9762\u5DF2\u6253\u5F00\uFF0C\u8BF7\u5728\u6D4F\u89C8\u5668\u4E2D\u5B8C\u6210\u6388\u6743")}catch(h){new U.Notice(`\u274C \u751F\u6210\u6388\u6743\u94FE\u63A5\u5931\u8D25: ${h.message}`)}})});let c="";new U.Setting(e).setName("\u7B2C\u4E8C\u6B65\uFF1A\u7C98\u8D34\u56DE\u8C03URL").setDesc("\u4ECE\u6D4F\u89C8\u5668\u5730\u5740\u680F\u590D\u5236\u5B8C\u6574\u7684\u56DE\u8C03URL\u5E76\u7C98\u8D34\u5230\u6B64\u5904").addTextArea(g=>{g.setPlaceholder("\u7C98\u8D34\u5B8C\u6574\u7684\u56DE\u8C03URL\uFF0C\u4F8B\u5982\uFF1Ahttps://example.com/callback?code=xxx&state=xxx").setValue(c).onChange(h=>{c=h.trim()}),g.inputEl.addClass("mod-align-left")}),new U.Setting(e).setName("\u7B2C\u4E09\u6B65\uFF1A\u5B8C\u6210\u6388\u6743").setDesc("\u89E3\u6790\u56DE\u8C03URL\u5E76\u5B8C\u6210\u6388\u6743\u6D41\u7A0B").addButton(g=>{g.setButtonText("\u2705 \u5B8C\u6210\u6388\u6743").setCta().onClick(async()=>{await this.processCallback(c)})}),new U.Setting(e).addButton(g=>{g.setButtonText("\u53D6\u6D88").onClick(()=>{this.close()})})}async processCallback(e){try{if(!e){new U.Notice("\u274C \u8BF7\u5148\u7C98\u8D34\u56DE\u8C03URL");return}let t=new URL(e),o=t.searchParams.get("code"),r=t.searchParams.get("state");if(!o){new U.Notice("\u274C \u56DE\u8C03URL\u4E2D\u672A\u627E\u5230\u6388\u6743\u7801\uFF0C\u8BF7\u68C0\u67E5URL\u662F\u5426\u5B8C\u6574");return}let A=localStorage.getItem("feishu-oauth-state");if(A&&r!==A){new U.Notice("\u274C \u72B6\u6001\u9A8C\u8BC1\u5931\u8D25\uFF0C\u8BF7\u91CD\u65B0\u6388\u6743");return}new U.Notice("\u{1F504} \u6B63\u5728\u5904\u7406\u6388\u6743..."),await this.feishuApi.handleOAuthCallback(o)?(new U.Notice("\u{1F389} \u6388\u6743\u6210\u529F\uFF01"),this.onSuccess(),this.close()):new U.Notice("\u274C \u6388\u6743\u5904\u7406\u5931\u8D25\uFF0C\u8BF7\u91CD\u8BD5")}catch(t){Promise.resolve().then(()=>(Y(),f)).then(({Debug:o})=>o.error("Process callback error:",t)),new U.Notice(`\u274C \u5904\u7406\u6388\u6743\u65F6\u53D1\u751F\u9519\u8BEF: ${String(t.message||t)}`)}}onClose(){let{contentEl:e}=this;e.empty()}};var $=require("obsidian"),P=class extends $.Modal{constructor(e,t,o){super(e);this.folders=[];this.currentPath=[];this.loading=!1;this.feishuApi=t,this.onSelect=o}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h2",{text:"\u9009\u62E9\u6587\u4EF6\u5939"}),this.createBreadcrumb(e);let t=e.createDiv("folder-list-container"),o=e.createDiv("button-container");o.addClass("setting-item-control");let r=o.createEl("button",{text:"\u9009\u62E9\u5F53\u524D\u6587\u4EF6\u5939",cls:"mod-cta"});r.onclick=()=>{let n=this.currentPath.length>0?this.currentPath[this.currentPath.length-1]:null;this.onSelect(n),this.close()};let A=o.createEl("button",{text:"\u53D6\u6D88"});A.onclick=()=>{this.close()},this.loadFolders(t)}createBreadcrumb(e){let t=e.createDiv("folder-breadcrumb");t.addClass("setting-item");let o=t.createSpan("breadcrumb-item");o.textContent="\u6211\u7684\u7A7A\u95F4",o.addClass("mod-clickable"),o.onclick=()=>this.navigateToRoot(),this.currentPath.forEach((r,A)=>{t.createSpan("breadcrumb-separator").textContent=" / ";let n=t.createSpan("breadcrumb-item");n.textContent=r.name,A<this.currentPath.length-1?(n.addClass("mod-clickable"),n.onclick=()=>this.navigateToFolder(A)):n.addClass("mod-muted")})}async loadFolders(e){if(this.loading)return;this.loading=!0,e.empty();let t=e.createDiv("loading-indicator");t.textContent="\u6B63\u5728\u52A0\u8F7D\u6587\u4EF6\u5939...";try{let o=this.currentPath.length>0?this.currentPath[this.currentPath.length-1].folder_token||this.currentPath[this.currentPath.length-1].token:void 0,r=await this.feishuApi.getFolderList(o);this.folders=r.data.folders,e.empty(),this.renderFolderList(e)}catch(o){Promise.resolve().then(()=>(Y(),f)).then(({Debug:A})=>A.error("Failed to load folders:",o)),e.empty();let r=e.createDiv("error-message");r.textContent=`\u52A0\u8F7D\u5931\u8D25: ${String(o.message||o)}`}finally{this.loading=!1}}renderFolderList(e){if(this.folders.length===0){let t=e.createDiv("empty-message");t.textContent="\u6B64\u6587\u4EF6\u5939\u4E3A\u7A7A";return}this.folders.forEach(t=>{let o=e.createDiv("folder-item"),r=o.createSpan("folder-icon");r.textContent="\u{1F4C1}";let A=o.createSpan("folder-name");A.textContent=t.name,o.addEventListener("mouseenter",()=>o.addClass("is-hover")),o.addEventListener("mouseleave",()=>o.removeClass("is-hover")),o.onclick=()=>{this.enterFolder(t)}})}async enterFolder(e){let t=this.currentPath.findIndex(A=>(A.folder_token||A.token)===(e.folder_token||e.token));t>=0?this.currentPath=this.currentPath.slice(0,t+1):this.currentPath.push(e);let o=this.contentEl.querySelector(".folder-breadcrumb");o&&(o.remove(),this.createBreadcrumb(this.contentEl));let r=this.contentEl.querySelector(".folder-list-container");r&&await this.loadFolders(r)}async navigateToRoot(){this.currentPath=[];let e=this.contentEl.querySelector(".folder-breadcrumb");e&&(e.remove(),this.createBreadcrumb(this.contentEl));let t=this.contentEl.querySelector(".folder-list-container");t&&await this.loadFolders(t)}async navigateToFolder(e){this.currentPath=this.currentPath.slice(0,e+1);let t=this.contentEl.querySelector(".folder-breadcrumb");t&&(t.remove(),this.createBreadcrumb(this.contentEl));let o=this.contentEl.querySelector(".folder-list-container");o&&await this.loadFolders(o)}onClose(){let{contentEl:e}=this;e.empty()}};var _=require("obsidian"),y=class extends _.Modal{constructor(e,t,o){super(e);this.spaces=[];this.nodes=[];this.currentSpace=null;this.currentPath=[];this.loading=!1;this.mode="space";this.feishuApi=t,this.onSelect=o}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h2",{text:"\u9009\u62E9\u77E5\u8BC6\u5E93\u4F4D\u7F6E"}),this.createNavigation(e);let t=e.createDiv("wiki-list-container"),o=e.createDiv("button-container");o.addClass("setting-item-control");let r=o.createEl("button",{text:"\u9009\u62E9\u5F53\u524D\u4F4D\u7F6E",cls:"mod-cta"});r.onclick=()=>{let n=this.currentPath.length>0?this.currentPath[this.currentPath.length-1]:null;this.onSelect(this.currentSpace,n),this.close()};let A=o.createEl("button",{text:"\u53D6\u6D88"});A.onclick=()=>{this.close()},this.loadSpaces(t)}createNavigation(e){var o;let t=e.createDiv("wiki-navigation");if(t.addClass("setting-item"),this.mode==="space")t.createSpan("nav-item").textContent="\u9009\u62E9\u77E5\u8BC6\u5E93";else{let r=t.createSpan("nav-item");r.textContent=((o=this.currentSpace)==null?void 0:o.name)||"\u672A\u77E5\u77E5\u8BC6\u5E93",r.addClass("mod-clickable"),r.onclick=()=>this.backToSpaceSelection(),this.currentPath.forEach((A,n)=>{t.createSpan("nav-separator").textContent=" / ";let a=t.createSpan("nav-item");a.textContent=A.title,n<this.currentPath.length-1?(a.addClass("mod-clickable"),a.onclick=()=>this.navigateToNode(n)):a.addClass("mod-muted")})}}async loadSpaces(e){if(this.loading)return;this.loading=!0,e.empty();let t=e.createDiv("loading-indicator");t.textContent="\u6B63\u5728\u52A0\u8F7D\u77E5\u8BC6\u5E93\u5217\u8868...";try{this.spaces=await this.feishuApi.getWikiSpaceList(),e.empty(),this.renderSpaceList(e)}catch(o){Promise.resolve().then(()=>(Y(),f)).then(({Debug:A})=>A.error("Failed to load wiki spaces:",o)),e.empty();let r=e.createDiv("error-message");r.textContent=`\u52A0\u8F7D\u5931\u8D25: ${String(o.message||o)}`}finally{this.loading=!1}}renderSpaceList(e){if(this.spaces.length===0){let t=e.createDiv("empty-message");t.textContent="\u6CA1\u6709\u53EF\u8BBF\u95EE\u7684\u77E5\u8BC6\u5E93";return}this.spaces.forEach(t=>{let o=e.createDiv("space-item"),r=o.createSpan("space-icon");r.textContent="\u{1F4DA}";let A=o.createDiv("space-info"),n=A.createDiv("space-name");if(n.textContent=t.name,t.description){let a=A.createDiv("space-desc");a.textContent=t.description}o.addEventListener("mouseenter",()=>o.addClass("is-hover")),o.addEventListener("mouseleave",()=>o.removeClass("is-hover")),o.onclick=()=>{this.enterSpace(t)}})}async enterSpace(e){this.currentSpace=e,this.currentPath=[],this.mode="node";let t=this.contentEl.querySelector(".wiki-navigation");t&&(t.remove(),this.createNavigation(this.contentEl));let o=this.contentEl.querySelector(".wiki-list-container");o&&await this.loadNodes(o)}async backToSpaceSelection(){this.currentSpace=null,this.currentPath=[],this.mode="space";let e=this.contentEl.querySelector(".wiki-navigation");e&&(e.remove(),this.createNavigation(this.contentEl));let t=this.contentEl.querySelector(".wiki-list-container");t&&await this.loadSpaces(t)}async loadNodes(e){if(this.loading||!this.currentSpace)return;this.loading=!0,e.empty();let t=e.createDiv("loading-indicator");t.textContent="\u6B63\u5728\u52A0\u8F7D\u8282\u70B9\u5217\u8868...";try{let o=this.currentPath.length>0?this.currentPath[this.currentPath.length-1].node_token:void 0;this.nodes=await this.feishuApi.getWikiNodeList(this.currentSpace.space_id,o),e.empty(),this.renderNodeList(e)}catch(o){Promise.resolve().then(()=>(Y(),f)).then(({Debug:A})=>A.error("Failed to load wiki nodes:",o)),e.empty();let r=e.createDiv("error-message");r.textContent=`\u52A0\u8F7D\u5931\u8D25: ${String(o.message||o)}`}finally{this.loading=!1}}renderNodeList(e){let t=this.nodes.filter(o=>o.has_child);if(t.length===0){let o=e.createDiv("empty-message");o.textContent="\u6B64\u4F4D\u7F6E\u6CA1\u6709\u5B50\u6587\u4EF6\u5939";return}t.forEach(o=>{let r=e.createDiv("node-item"),A=r.createSpan("node-icon");A.textContent="\u{1F4C1}";let n=r.createSpan("node-name");n.textContent=o.title,r.addEventListener("mouseenter",()=>r.addClass("is-hover")),r.addEventListener("mouseleave",()=>r.removeClass("is-hover")),r.onclick=()=>{this.enterNode(o)}})}async enterNode(e){let t=this.currentPath.findIndex(A=>A.node_token===e.node_token);t>=0?this.currentPath=this.currentPath.slice(0,t+1):this.currentPath.push(e);let o=this.contentEl.querySelector(".wiki-navigation");o&&(o.remove(),this.createNavigation(this.contentEl));let r=this.contentEl.querySelector(".wiki-list-container");r&&await this.loadNodes(r)}async navigateToNode(e){this.currentPath=this.currentPath.slice(0,e+1);let t=this.contentEl.querySelector(".wiki-navigation");t&&(t.remove(),this.createNavigation(this.contentEl));let o=this.contentEl.querySelector(".wiki-list-container");o&&await this.loadNodes(o)}onClose(){let{contentEl:e}=this;e.empty()}};var W=class extends x.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"\u98DE\u4E66\u5206\u4EAB\u8BBE\u7F6E"});let t=e.createDiv("setting-item-description"),o=t.createEl("p");o.textContent="\u76F4\u8FDE\u98DE\u4E66API\uFF0C\u56DE\u8C03\u5730\u5740\u4EC5\u4E2D\u8F6C\u65E0\u8BB0\u5F55\u3002";let r=t.createEl("p");r.createEl("strong").textContent="\u7279\u70B9\uFF1A",r.appendText("\u65E0\u4F9D\u8D56\u3001\u66F4\u5B89\u5168\u3001\u54CD\u5E94\u66F4\u5FEB"),e.createEl("h3",{text:"\u{1F527} \u5E94\u7528\u914D\u7F6E"}),new x.Setting(e).setName("App ID").setDesc("\u98DE\u4E66\u5E94\u7528\u7684 App ID").addText(B=>B.setPlaceholder("\u8F93\u5165\u98DE\u4E66\u5E94\u7528\u7684 App ID").setValue(this.plugin.settings.appId).onChange(async d=>{this.plugin.settings.appId=d.trim(),await this.plugin.saveSettings()})),new x.Setting(e).setName("App Secret").setDesc("\u98DE\u4E66\u5E94\u7528\u7684 App Secret").addText(B=>{B.setPlaceholder("\u8F93\u5165\u98DE\u4E66\u5E94\u7528\u7684 App Secret").setValue(this.plugin.settings.appSecret).onChange(async d=>{this.plugin.settings.appSecret=d.trim(),await this.plugin.saveSettings()}),B.inputEl.type="password"}),new x.Setting(e).setName("OAuth\u56DE\u8C03\u5730\u5740").setDesc("obsidian\u9700web\u56DE\u8C03\u4E2D\u8F6C\uFF0C\u4F8B\u5982\uFF1Ahttps://md2feishu.xinqi.life/oauth-callback").addText(B=>B.setPlaceholder("https://md2feishu.xinqi.life/oauth-callback").setValue(this.plugin.settings.callbackUrl).onChange(async d=>{this.plugin.settings.callbackUrl=d.trim(),await this.plugin.saveSettings()})),e.createEl("h3",{text:"\u{1F510} \u6388\u6743\u7BA1\u7406"});let n=e.createDiv("setting-item").createDiv("setting-item-info");n.createDiv("setting-item-name").setText("\u6388\u6743\u72B6\u6001");let a=n.createDiv("setting-item-description");if(this.plugin.settings.userInfo){a.createEl("span",{text:"\u2705 \u5DF2\u6388\u6743"}).addClass("mod-success"),a.createEl("br");let d=a.createDiv({cls:"setting-item-description"}),z=d.createEl("strong");z.textContent="\u7528\u6237\uFF1A",d.appendText(this.plugin.settings.userInfo.name),d.createEl("br");let v=d.createEl("strong");v.textContent="\u90AE\u7BB1\uFF1A",d.appendText(this.plugin.settings.userInfo.email)}else a.createEl("span",{text:"\u274C \u672A\u6388\u6743"}).addClass("mod-warning");new x.Setting(e).setName("\u{1F680} \u4E00\u952E\u6388\u6743\uFF08\u63A8\u8350\uFF09").setDesc("\u81EA\u52A8\u6253\u5F00\u6D4F\u89C8\u5668\u5B8C\u6210\u6388\u6743\uFF0C\u901A\u8FC7\u4E91\u7AEF\u56DE\u8C03\u81EA\u52A8\u8FD4\u56DE\u6388\u6743\u7ED3\u679C\uFF0C\u65E0\u9700\u624B\u52A8\u64CD\u4F5C").addButton(B=>{B.setButtonText("\u{1F680} \u4E00\u952E\u6388\u6743").setCta().onClick(()=>{this.startAutoAuth()})}),new x.Setting(e).setName("\u{1F4DD} \u624B\u52A8\u6388\u6743\uFF08\u5907\u7528\uFF09").setDesc("\u5982\u679C\u4E00\u952E\u6388\u6743\u9047\u5230\u95EE\u9898\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4F20\u7EDF\u7684\u624B\u52A8\u590D\u5236\u7C98\u8D34\u6388\u6743\u65B9\u5F0F").addButton(B=>{B.setButtonText("\u624B\u52A8\u6388\u6743").onClick(()=>{this.startManualAuth()})}),this.plugin.settings.userInfo&&new x.Setting(e).setName("\u6E05\u9664\u6388\u6743").setDesc("\u6E05\u9664\u5F53\u524D\u7684\u6388\u6743\u4FE1\u606F").addButton(B=>{B.setButtonText("\u{1F5D1}\uFE0F \u6E05\u9664\u6388\u6743").setWarning().onClick(async()=>{this.plugin.settings.accessToken="",this.plugin.settings.refreshToken="",this.plugin.settings.userInfo=null,await this.plugin.saveSettings(),this.plugin.feishuApi.updateSettings(this.plugin.settings),new x.Notice("\u2705 \u6388\u6743\u4FE1\u606F\u5DF2\u6E05\u9664"),this.display()})}),e.createEl("h3",{text:"\u{1F3AF} \u5206\u4EAB\u76EE\u6807\u8BBE\u7F6E"}),new x.Setting(e).setName("\u5206\u4EAB\u76EE\u6807").setDesc("\u9009\u62E9\u6587\u6863\u5206\u4EAB\u7684\u76EE\u6807\u4F4D\u7F6E").addDropdown(B=>{B.addOption("drive","\u4E91\u7A7A\u95F4").addOption("wiki","\u77E5\u8BC6\u5E93").setValue(this.plugin.settings.targetType||"drive").onChange(async d=>{this.plugin.settings.targetType=d,await this.plugin.saveSettings(),this.plugin.feishuApi.updateSettings(this.plugin.settings),this.display()})}),this.plugin.settings.targetType==="wiki"?this.addWikiSettings(e):this.addDriveSettings(e),e.createEl("h3",{text:"\u{1F4DD} \u5185\u5BB9\u5904\u7406\u8BBE\u7F6E"}),new x.Setting(e).setName("\u6587\u6863\u6807\u9898\u6765\u6E90").setDesc("\u9009\u62E9\u751F\u6210\u7684\u98DE\u4E66\u6587\u6863\u6807\u9898\u4F7F\u7528\u54EA\u4E2A\u6765\u6E90").addDropdown(B=>{B.addOption("filename","\u6587\u4EF6\u540D (Filename)").addOption("frontmatter",'YAML Front Matter \u7684 "title" \u5C5E\u6027').setValue(this.plugin.settings.titleSource).onChange(async d=>{this.plugin.settings.titleSource=d,await this.plugin.saveSettings()})}),new x.Setting(e).setName("\u6587\u6863\u5C5E\u6027\uFF08Front Matter\uFF09").setDesc("\u9009\u62E9\u5982\u4F55\u5904\u7406\u7B14\u8BB0\u9876\u90E8\u7684 YAML \u5C5E\u6027\u533A").addDropdown(B=>{B.addOption("remove","\u79FB\u9664 (Remove)").addOption("keep-as-code","\u4FDD\u7559\u4E3A\u4EE3\u7801\u5757 (Keep as Code Block)").setValue(this.plugin.settings.frontMatterHandling).onChange(async d=>{this.plugin.settings.frontMatterHandling=d,await this.plugin.saveSettings()})}),new x.Setting(e).setName("\u5B50\u6587\u6863\u4E0A\u4F20").setDesc("\u662F\u5426\u5904\u7406\u548C\u4E0A\u4F20\u7B14\u8BB0\u4E2D\u5F15\u7528\u7684\u5176\u4ED6 Markdown \u6587\u4EF6\u4F5C\u4E3A\u5B50\u6587\u6863").addToggle(B=>{B.setValue(this.plugin.settings.enableSubDocumentUpload).onChange(async d=>{this.plugin.settings.enableSubDocumentUpload=d,await this.plugin.saveSettings()})}),new x.Setting(e).setName("\u672C\u5730\u56FE\u7247\u4E0A\u4F20").setDesc("\u662F\u5426\u4E0A\u4F20\u7B14\u8BB0\u4E2D\u5F15\u7528\u7684\u672C\u5730\u56FE\u7247\u6587\u4EF6\u5230\u98DE\u4E66").addToggle(B=>{B.setValue(this.plugin.settings.enableLocalImageUpload).onChange(async d=>{this.plugin.settings.enableLocalImageUpload=d,await this.plugin.saveSettings()})}),new x.Setting(e).setName("\u672C\u5730\u9644\u4EF6\u4E0A\u4F20").setDesc("\u662F\u5426\u4E0A\u4F20\u7B14\u8BB0\u4E2D\u5F15\u7528\u7684\u672C\u5730\u9644\u4EF6\u6587\u4EF6\uFF08\u5982 PDF\u3001Word \u7B49\uFF09\u5230\u98DE\u4E66").addToggle(B=>{B.setValue(this.plugin.settings.enableLocalAttachmentUpload).onChange(async d=>{this.plugin.settings.enableLocalAttachmentUpload=d,await this.plugin.saveSettings()})}),new x.Setting(e).setName("\u81EA\u52A8\u6DFB\u52A0\u5206\u4EAB\u6807\u8BB0").setDesc("\u5206\u4EAB\u6210\u529F\u540E\uFF0C\u81EA\u52A8\u5728\u7B14\u8BB0\u7684 \u6587\u6863\u5C5E\u6027\uFF08Front Matter\uFF09 \u4E2D\u6DFB\u52A0\u5206\u4EAB\u6807\u8BB0\uFF08feishushare: true\u3001\u5206\u4EAB\u94FE\u63A5\u548C\u65F6\u95F4\uFF09").addToggle(B=>{B.setValue(this.plugin.settings.enableShareMarkInFrontMatter).onChange(async d=>{this.plugin.settings.enableShareMarkInFrontMatter=d,await this.plugin.saveSettings()})}),new x.Setting(e).setName("\u4EE3\u7801\u5757\u8FC7\u6EE4").setDesc("\u6BCF\u884C\u4E00\u4E2A\u4EE3\u7801\u5757\u8BED\u8A00\uFF08\u5927\u5C0F\u5199\u4E0D\u654F\u611F\uFF09\u3002\u5339\u914D\u7684 fenced code \u5C06\u88AB\u79FB\u9664\u3002\u4F8B\u5982\uFF1Ameta-bind-embed\u3001dataviewjs").then(B=>{let d=B.controlEl.createEl("textarea",{attr:{rows:"4",placeholder:`meta-bind-embed
dataviewjs`}});d.addClass("mod-align-left"),d.value=(this.plugin.settings.codeBlockFilterLanguages||[]).join(`
`),d.addEventListener("change",async()=>{let z=d.value.split(/\r?\n/).map(v=>v.trim()).filter(Boolean);this.plugin.settings.codeBlockFilterLanguages=z,await this.plugin.saveSettings()})}),e.createEl("h3",{text:"\u{1F514} \u901A\u77E5\u8BBE\u7F6E"}),new x.Setting(e).setName("\u53D6\u6D88\u5206\u4EAB\u72B6\u6001\u901A\u77E5").setDesc("\u542F\u7528\u540E\u4E0D\u663E\u793A\u5206\u4EAB\u201C\u8FC7\u7A0B\u72B6\u6001\u201D\u901A\u77E5\uFF08\u9519\u8BEF\u548C\u6700\u7EC8\u6210\u529F\u4ECD\u63D0\u793A\uFF09").addToggle(B=>{B.setValue(!!this.plugin.settings.suppressShareNotices).onChange(async d=>{this.plugin.settings.suppressShareNotices=d,await this.plugin.saveSettings()})}),new x.Setting(e).setName("\u7B80\u6D01\u6210\u529F\u901A\u77E5").setDesc("\u542F\u7528\u540E\u6210\u529F\u4EC5\u663E\u793A\u4E00\u884C\u63D0\u793A\uFF1B\u5173\u95ED\u65F6\u663E\u793A\u5E26\u201C\u590D\u5236/\u6253\u5F00\u201D\u6309\u94AE\u7684\u901A\u77E5").addToggle(B=>{B.setValue(!!this.plugin.settings.simpleSuccessNotice).onChange(async d=>{this.plugin.settings.simpleSuccessNotice=d,await this.plugin.saveSettings()})}),e.createEl("h3",{text:"\u{1F517} \u5206\u4EAB\u6743\u9650\u8BBE\u7F6E"}),new x.Setting(e).setName("\u542F\u7528\u94FE\u63A5\u5206\u4EAB").setDesc("\u662F\u5426\u4E3A\u5206\u4EAB\u7684\u6587\u6863\u8BBE\u7F6E\u94FE\u63A5\u5206\u4EAB\u6743\u9650\uFF0C\u8BA9\u7EC4\u7EC7\u5185\u7684\u4EBA\u53EF\u4EE5\u901A\u8FC7\u94FE\u63A5\u8BBF\u95EE").addToggle(B=>{B.setValue(this.plugin.settings.enableLinkShare).onChange(async d=>{this.plugin.settings.enableLinkShare=d,await this.plugin.saveSettings(),this.display()})}),this.plugin.settings.enableLinkShare&&new x.Setting(e).setName("\u94FE\u63A5\u5206\u4EAB\u6743\u9650").setDesc("\u8BBE\u7F6E\u83B7\u5F97\u94FE\u63A5\u7684\u4EBA\u7684\u8BBF\u95EE\u6743\u9650\u3002\u6CE8\u610F\uFF1A\u4E92\u8054\u7F51\u8BBF\u95EE\u9700\u8981\u4F01\u4E1A\u7BA1\u7406\u5458\u5141\u8BB8\u5916\u90E8\u5206\u4EAB").addDropdown(B=>{B.addOption("anyone_readable","\u{1F310} \u4E92\u8054\u7F51\u4E0A\u83B7\u5F97\u94FE\u63A5\u7684\u4EFB\u4F55\u4EBA\u53EF\u9605\u8BFB").addOption("anyone_editable","\u{1F310} \u4E92\u8054\u7F51\u4E0A\u83B7\u5F97\u94FE\u63A5\u7684\u4EFB\u4F55\u4EBA\u53EF\u7F16\u8F91").addOption("tenant_readable","\u{1F3E2} \u7EC4\u7EC7\u5185\u83B7\u5F97\u94FE\u63A5\u7684\u4EBA\u53EF\u9605\u8BFB").addOption("tenant_editable","\u{1F3E2} \u7EC4\u7EC7\u5185\u83B7\u5F97\u94FE\u63A5\u7684\u4EBA\u53EF\u7F16\u8F91").setValue(this.plugin.settings.linkSharePermission).onChange(async d=>{this.plugin.settings.linkSharePermission=d,await this.plugin.saveSettings()})}),e.createEl("h3",{text:"\u{1F4D6} \u4F7F\u7528\u8BF4\u660E"});let l=e.createDiv("setting-item-description"),c=l.createDiv();c.createEl("strong",{text:"\u{1F4DA} \u8BE6\u7EC6\u4F7F\u7528\u8BF4\u660E"}),c.createEl("br");let g=c.createEl("a",{text:"\u{1F517} \u70B9\u51FB\u67E5\u770B\u5B8C\u6574\u4F7F\u7528\u6559\u7A0B",href:"https://l0c34idk7v.feishu.cn/docx/Zk2VdWJPfoqmZhxPSJmcMfSbnHe"});g.target="_blank";let h=l.createDiv();h.createEl("strong",{text:"\u{1F4CB} \u5FEB\u901F\u914D\u7F6E\u6307\u5357"});let E=h.createEl("ol"),I=E.createEl("li");I.createEl("strong",{text:"\u521B\u5EFA\u98DE\u4E66\u5E94\u7528\uFF1A"}),I.appendText("\u8BBF\u95EE ");let C=I.createEl("a",{text:"\u98DE\u4E66\u5F00\u653E\u5E73\u53F0 \u{1F517}",href:"https://open.feishu.cn/app"});C.target="_blank",I.appendText(' \u521B\u5EFA"\u4F01\u4E1A\u81EA\u5EFA\u5E94\u7528"\uFF0C\u83B7\u53D6App ID\u548CApp Secret');let p=E.createEl("li");p.createEl("strong",{text:"\u914D\u7F6EOAuth\u56DE\u8C03\uFF1A"}),p.appendText('\u5728\u98DE\u4E66\u5E94\u7528"\u5B89\u5168\u8BBE\u7F6E"\u4E2D\u6DFB\u52A0\u56DE\u8C03\u5730\u5740\uFF1A'),p.createEl("br"),p.createEl("code",{text:"https://md2feishu.xinqi.life/oauth-callback"}),p.createEl("br"),p.createEl("span",{text:"\u{1F4A1} \u9ED8\u8BA4\u4F7F\u7528\u6211\u4EEC\u7684\u56DE\u8C03\u670D\u52A1\uFF0C\u4EE3\u7801\u5F00\u6E90\u53EF\u81EA\u884C\u90E8\u7F72",cls:"hint"});let u=E.createEl("li");u.createEl("strong",{text:"\u6DFB\u52A0\u5E94\u7528\u6743\u9650\uFF1A"}),u.appendText('\u5728"\u6743\u9650\u7BA1\u7406"\u4E2D\u6DFB\u52A0\u4EE5\u4E0B\u6743\u9650\uFF1A');let Q=u.createEl("ul");Q.createEl("li",{text:"user_access_token - \u7528\u6237\u8EAB\u4EFD\u6743\u9650\uFF08\u767B\u5F55\u7528\u6237\u8BBF\u95EE\uFF09"}),Q.createEl("li",{text:"contact:user.base:readonly - \u83B7\u53D6\u7528\u6237\u57FA\u672C\u4FE1\u606F"}),Q.createEl("li",{text:"docx:document - \u521B\u5EFA\u3001\u7F16\u8F91\u6587\u6863"}),Q.createEl("li",{text:"drive:drive - \u8BBF\u95EE\u4E91\u7A7A\u95F4\u6587\u4EF6"}),Q.createEl("li",{text:"wiki:wiki - \u8BBF\u95EE\u548C\u7BA1\u7406\u77E5\u8BC6\u5E93"});let w=E.createEl("li");w.createEl("strong",{text:"\u5B8C\u6210\u6388\u6743\uFF1A"}),w.appendText('\u5728\u4E0A\u65B9\u8F93\u5165App ID\u548CApp Secret\uFF0C\u70B9\u51FB"\u{1F680} \u4E00\u952E\u6388\u6743"');let G=E.createEl("li");G.createEl("strong",{text:"\u9009\u62E9\u6587\u4EF6\u5939\uFF1A"}),G.appendText("\u6388\u6743\u540E\u53EF\u9009\u62E9\u9ED8\u8BA4\u4FDD\u5B58\u6587\u4EF6\u5939\uFF08\u53EF\u9009\uFF09");let S=E.createEl("li");S.createEl("strong",{text:"\u5F00\u59CB\u4F7F\u7528\uFF1A"}),S.appendText('\u53F3\u952EMD\u6587\u4EF6\u9009\u62E9"\u{1F4E4} \u5206\u4EAB\u5230\u98DE\u4E66"\uFF0C\u6216\u4F7F\u7528\u547D\u4EE4\u9762\u677F');let F=l.createDiv();F.createEl("strong",{text:"\u{1F389} \u529F\u80FD\u7279\u8272\uFF1A"});let K=F.createEl("ul");K.createEl("li",{text:"\u2705 \u667A\u80FD\u6388\u6743\uFF1A\u81EA\u52A8\u68C0\u6D4Btoken\u72B6\u6001\uFF0C\u5931\u6548\u65F6\u81EA\u52A8\u91CD\u65B0\u6388\u6743"}),K.createEl("li",{text:"\u2705 \u65E0\u7F1D\u5206\u4EAB\uFF1A\u4E00\u952E\u5206\u4EAB\uFF0C\u81EA\u52A8\u5904\u7406\u6388\u6743\u548C\u8F6C\u6362\u6D41\u7A0B"}),K.createEl("li",{text:"\u2705 \u683C\u5F0F\u4FDD\u6301\uFF1A\u5B8C\u7F8E\u4FDD\u6301Markdown\u683C\u5F0F\uFF0C\u5305\u62EC\u56FE\u7247\u3001\u8868\u683C\u3001\u4EE3\u7801\u5757"}),K.createEl("li",{text:"\u2705 \u667A\u80FD\u5904\u7406\uFF1A\u81EA\u52A8\u5904\u7406Obsidian\u53CC\u5411\u94FE\u63A5\u3001\u6807\u7B7E\u7B49\u8BED\u6CD5"}),K.createEl("li",{text:"\u2705 \u53EF\u89C6\u5316\u9009\u62E9\uFF1A\u652F\u6301\u6D4F\u89C8\u548C\u9009\u62E9\u76EE\u6807\u6587\u4EF6\u5939"}),K.createEl("li",{text:"\u2705 \u94FE\u63A5\u5206\u4EAB\uFF1A\u81EA\u52A8\u8BBE\u7F6E\u6587\u6863\u5206\u4EAB\u6743\u9650\uFF0C\u652F\u6301\u7EC4\u7EC7\u5185\u94FE\u63A5\u8BBF\u95EE"}),K.createEl("li",{text:"\u2705 \u4E00\u952E\u590D\u5236\uFF1A\u5206\u4EAB\u6210\u529F\u540E\u53EF\u4E00\u952E\u590D\u5236\u6587\u6863\u94FE\u63A5"}),this.addAuthorSection(e),this.addRewardSection(e)}addAuthorSection(e){e.createEl("hr");let t=e.createDiv();t.createEl("h4",{text:"\u{1F468}\u200D\u{1F4BB} \u4E86\u89E3\u4F5C\u8005"}),t.createEl("p",{text:"\u60F3\u4E86\u89E3\u66F4\u591A\u5173\u4E8E\u4F5C\u8005\u548C\u5176\u4ED6\u9879\u76EE\u7684\u4FE1\u606F\uFF1F"}),t.createEl("button",{text:"\u{1F310} \u8BBF\u95EE\u4F5C\u8005\u4E3B\u9875",cls:"mod-cta"}).addEventListener("click",()=>{window.open("https://ai.xinqi.life/about","_blank")})}addRewardSection(e){e.createEl("hr");let t=e.createDiv();t.createEl("h4",{text:"\u2615 \u652F\u6301\u4F5C\u8005"}),t.createEl("p",{text:"\u5982\u679C\u8FD9\u4E2A\u63D2\u4EF6\u5BF9\u60A8\u6709\u5E2E\u52A9\uFF0C\u6B22\u8FCE\u901A\u8FC7\u5FAE\u4FE1\u626B\u7801\u6253\u8D4F\u652F\u6301\u4F5C\u8005\u7EE7\u7EED\u5F00\u53D1\uFF01"});let o=t.createDiv({cls:"setting-item-description"}),r=o.createEl("img");r.src="data:image/jpeg;base64,"+this.getRewardQRCodeBase64(),r.alt="\u5FAE\u4FE1\u6253\u8D4F\u4E8C\u7EF4\u7801";let A=o.createEl("p",{text:"\u5FAE\u4FE1\u626B\u4E00\u626B\uFF0C\u652F\u6301\u4F5C\u8005"})}getRewardQRCodeBase64(){return""}startAutoAuth(){if(!this.plugin.settings.appId||!this.plugin.settings.appSecret){new x.Notice("\u274C \u8BF7\u5148\u914D\u7F6E App ID \u548C App Secret"),Promise.resolve().then(()=>(Y(),f)).then(({Debug:e})=>e.error("Missing App ID or App Secret"));return}this.plugin.feishuApi.updateSettings(this.plugin.settings);try{let e=this.plugin.feishuApi.generateAuthUrl();window.open(e,"_blank"),new x.Notice("\u{1F504} \u5DF2\u6253\u5F00\u6D4F\u89C8\u5668\u8FDB\u884C\u6388\u6743\uFF0C\u5B8C\u6210\u540E\u5C06\u81EA\u52A8\u8FD4\u56DEObsidian");let t=()=>{this.display(),window.removeEventListener("feishu-auth-success",t)};window.addEventListener("feishu-auth-success",t)}catch(e){Promise.resolve().then(()=>(Y(),f)).then(({Debug:t})=>t.error("Auto auth error:",e)),new x.Notice(`\u274C \u81EA\u52A8\u6388\u6743\u5931\u8D25: ${e.message}`)}}startManualAuth(){if(!this.plugin.settings.appId||!this.plugin.settings.appSecret){new x.Notice("\u274C \u8BF7\u5148\u914D\u7F6E App ID \u548C App Secret");return}try{this.plugin.feishuApi.updateSettings(this.plugin.settings),new j(this.app,this.plugin.feishuApi,async()=>{await this.plugin.saveSettings(),this.display()}).open()}catch(e){Promise.resolve().then(()=>(Y(),f)).then(({Debug:t})=>t.error("[Feishu Plugin] Failed to start manual auth:",e)),new x.Notice("\u274C \u542F\u52A8\u6388\u6743\u5931\u8D25\uFF0C\u8BF7\u91CD\u8BD5")}}showFolderSelectModal(){try{if(!this.plugin.settings.accessToken||!this.plugin.settings.userInfo){new x.Notice("\u274C \u8BF7\u5148\u5728\u8BBE\u7F6E\u4E2D\u5B8C\u6210\u98DE\u4E66\u6388\u6743");return}new P(this.app,this.plugin.feishuApi,async t=>{try{t?(this.plugin.settings.defaultFolderId=t.folder_token||t.token||"",this.plugin.settings.defaultFolderName=t.name):(Promise.resolve().then(()=>(Y(),f)).then(({Debug:o})=>o.log("[Feishu Plugin] Root folder selected (\u6211\u7684\u7A7A\u95F4)")),this.plugin.settings.defaultFolderId="",this.plugin.settings.defaultFolderName="\u6211\u7684\u7A7A\u95F4"),await this.plugin.saveSettings(),new x.Notice("\u2705 \u9ED8\u8BA4\u6587\u4EF6\u5939\u8BBE\u7F6E\u5DF2\u4FDD\u5B58"),this.display()}catch(o){Promise.resolve().then(()=>(Y(),f)).then(({Debug:r})=>r.error("[Feishu Plugin] Failed to save folder settings:",o)),new x.Notice("\u274C \u4FDD\u5B58\u6587\u4EF6\u5939\u8BBE\u7F6E\u5931\u8D25")}}).open()}catch(e){Promise.resolve().then(()=>(Y(),f)).then(({Debug:t})=>t.error("[Feishu Plugin] Failed to open folder selection modal:",e)),new x.Notice("\u274C \u6253\u5F00\u6587\u4EF6\u5939\u9009\u62E9\u5931\u8D25")}}addDriveSettings(e){this.plugin.settings.userInfo&&(e.createEl("h4",{text:"\u{1F4C1} \u4E91\u7A7A\u95F4\u6587\u4EF6\u5939\u8BBE\u7F6E"}),new x.Setting(e).setName("\u5F53\u524D\u9ED8\u8BA4\u6587\u4EF6\u5939").setDesc(`\u6587\u6863\u5C06\u4FDD\u5B58\u5230\uFF1A${this.plugin.settings.defaultFolderName||"\u6211\u7684\u7A7A\u95F4"}${this.plugin.settings.defaultFolderId?` (ID: ${this.plugin.settings.defaultFolderId})`:""}`).addButton(t=>{t.setButtonText("\u{1F4C1} \u9009\u62E9\u6587\u4EF6\u5939").onClick(()=>{this.showFolderSelectModal()})}))}addWikiSettings(e){if(!this.plugin.settings.userInfo)return;e.createEl("h4",{text:"\u{1F4DA} \u77E5\u8BC6\u5E93\u8BBE\u7F6E"});let t=this.getWikiLocationDescription();new x.Setting(e).setName("\u5F53\u524D\u77E5\u8BC6\u5E93\u4F4D\u7F6E").setDesc(`\u6587\u6863\u5C06\u4FDD\u5B58\u5230\uFF1A${t}`).addButton(o=>{o.setButtonText("\u{1F4DA} \u9009\u62E9\u77E5\u8BC6\u5E93\u4F4D\u7F6E").onClick(()=>{this.showWikiSelectModal()})})}getWikiLocationDescription(){let e=this.plugin.settings.defaultWikiSpaceName||"\u672A\u9009\u62E9\u77E5\u8BC6\u5E93",t=this.plugin.settings.defaultWikiNodeName;return t?`${e} / ${t}`:`${e} (\u6839\u76EE\u5F55)`}async showWikiSelectModal(){try{if(!this.plugin.settings.accessToken||!this.plugin.settings.userInfo){new x.Notice("\u274C \u8BF7\u5148\u5728\u8BBE\u7F6E\u4E2D\u5B8C\u6210\u98DE\u4E66\u6388\u6743");return}new y(this.app,this.plugin.feishuApi,async(t,o)=>{t&&(this.plugin.settings.defaultWikiSpaceId=t.space_id,this.plugin.settings.defaultWikiSpaceName=t.name,o?(this.plugin.settings.defaultWikiNodeToken=o.node_token,this.plugin.settings.defaultWikiNodeName=o.title):(this.plugin.settings.defaultWikiNodeToken="",this.plugin.settings.defaultWikiNodeName=""),await this.plugin.saveSettings(),this.plugin.feishuApi.updateSettings(this.plugin.settings),new x.Notice("\u2705 \u77E5\u8BC6\u5E93\u4F4D\u7F6E\u5DF2\u66F4\u65B0"),this.display())}).open()}catch(e){Promise.resolve().then(()=>(Y(),f)).then(({Debug:t})=>t.error("[Feishu Plugin] Failed to open wiki selection modal:",e)),new x.Notice("\u274C \u6253\u5F00\u77E5\u8BC6\u5E93\u9009\u62E9\u5931\u8D25")}}};Y();var J=class extends q.Plugin{async onload(){await this.loadSettings(),this.feishuApi=new D(this.settings,this.app),this.markdownProcessor=new m(this.app),this.registerObsidianProtocolHandler("feishu-auth",e=>{this.handleOAuthCallback(e)}),this.addSettingTab(new W(this.app,this)),this.registerCommands(),this.registerMenus()}onunload(){}registerCommands(){this.addCommand({id:"share-current-note",name:"\u5206\u4EAB\u5F53\u524D\u7B14\u8BB0\u5230\u98DE\u4E66",editorCallback:(e,t)=>{this.shareCurrentNote()}}),this.addCommand({id:"toggle-feishu-debug",name:"\u{1F527} \u5207\u6362\u98DE\u4E66\u8C03\u8BD5\u65E5\u5FD7",callback:()=>{i.isEnabled()?(i.disable(),new q.Notice("\u{1F507} \u98DE\u4E66\u8C03\u8BD5\u65E5\u5FD7\u5DF2\u5173\u95ED")):(i.enable(),new q.Notice("\u{1F527} \u98DE\u4E66\u8C03\u8BD5\u65E5\u5FD7\u5DF2\u5F00\u542F"))}}),this.addCommand({id:"test-feishu-api",name:"\u{1F9EA} \u6D4B\u8BD5\u98DE\u4E66API\u8FDE\u63A5",callback:async()=>{this.log("\u{1F9EA} Starting API test...");try{let e=await this.feishuApi.testApiConnection();this.log(`\u{1F9EA} API test result: ${JSON.stringify(e)}`),new q.Notice(`API\u6D4B\u8BD5\u7ED3\u679C: ${e.success?"\u6210\u529F":"\u5931\u8D25 - "+e.error}`)}catch(e){this.log(`\u{1F9EA} API test error: ${e.message}`,"error"),new q.Notice(`API\u6D4B\u8BD5\u9519\u8BEF: ${e.message}`)}}})}registerMenus(){this.registerEvent(this.app.workspace.on("file-menu",(e,t)=>{t instanceof q.TFile&&t.extension==="md"&&e.addItem(o=>{o.setTitle("\u{1F4E4} \u5206\u4EAB\u5230\u98DE\u4E66").setIcon("share").onClick(()=>{this.shareFile(t)})})})),this.registerEvent(this.app.workspace.on("editor-menu",(e,t,o)=>{e.addItem(r=>{r.setTitle("\u{1F4E4} \u5206\u4EAB\u5230\u98DE\u4E66").setIcon("share").onClick(()=>{this.shareCurrentNote()})})}))}async loadSettings(){let e=await this.loadData();this.settings=Object.assign({},Z,e)}async saveSettings(){await this.saveData(this.settings),this.feishuApi&&this.feishuApi.updateSettings(this.settings)}async handleOAuthCallback(e){if(this.log("Processing OAuth callback"),e.code){new q.Notice("\u{1F504} \u6B63\u5728\u5904\u7406\u6388\u6743\u56DE\u8C03...");try{await this.feishuApi.processCallback(`obsidian://feishu-auth?${new URLSearchParams(e).toString()}`)?(this.log("OAuth authorization successful"),new q.Notice("\u{1F389} \u81EA\u52A8\u6388\u6743\u6210\u529F\uFF01"),await this.saveSettings(),window.dispatchEvent(new CustomEvent("feishu-auth-success",{detail:{timestamp:Date.now(),source:"oauth-callback"}}))):(this.log("OAuth authorization failed","warn"),new q.Notice("\u274C \u6388\u6743\u5904\u7406\u5931\u8D25\uFF0C\u8BF7\u91CD\u8BD5"))}catch(t){this.handleError(t,"OAuth\u56DE\u8C03\u5904\u7406")}}else if(e.error){let t=e.error_description||e.error;this.log(`OAuth error: ${t}`,"error"),new q.Notice(`\u274C \u6388\u6743\u5931\u8D25: ${t}`)}else this.log("Invalid OAuth callback parameters","warn"),new q.Notice("\u274C \u65E0\u6548\u7684\u6388\u6743\u56DE\u8C03")}async shareCurrentNote(){this.log("Attempting to share current note");let e=this.app.workspace.getActiveFile();if(!e){this.log("No active file found","warn"),new q.Notice("\u274C \u6CA1\u6709\u6253\u5F00\u7684\u7B14\u8BB0");return}if(e.extension!=="md"){this.log(`Unsupported file type: ${e.extension}`,"warn"),new q.Notice("\u274C \u53EA\u652F\u6301\u5206\u4EAB Markdown \u6587\u4EF6");return}this.log(`Sharing file: ${e.path}`),await this.shareFile(e)}async shareFile(e){this.log(`Starting file share process for: ${e.path}`);let t=this.settings.suppressShareNotices?void 0:new q.Notice("\u{1F504} \u6B63\u5728\u5206\u4EAB\u5230\u98DE\u4E66...",0);try{if(!this.settings.accessToken||!this.settings.userInfo){this.log("Authorization required","warn"),t==null||t.hide(),new q.Notice("\u274C \u8BF7\u5148\u5728\u8BBE\u7F6E\u4E2D\u5B8C\u6210\u98DE\u4E66\u6388\u6743");return}this.log("Ensuring file is saved to disk"),await this.ensureFileSaved(e),this.log("Reading file content");let o=await this.app.vault.read(e),r=this.markdownProcessor.processCompleteWithFiles(o,3,this.settings.frontMatterHandling,this.settings.enableSubDocumentUpload,this.settings.enableLocalImageUpload,this.settings.enableLocalAttachmentUpload,this.settings.titleSource,this.settings.codeBlockFilterLanguages||[]),A=this.markdownProcessor.extractTitle(e.basename,r.frontMatter,this.settings.titleSource);this.log(`Processing file with title: ${A}`);let n=this.checkUpdateMode(r.frontMatter),a,l=!1;if(n.shouldUpdate){this.log(`Update mode detected for existing document: ${n.feishuUrl}`),t==null||t.setMessage("\u{1F50D} \u68C0\u67E5\u73B0\u6709\u6587\u6863\u53EF\u8BBF\u95EE\u6027...");let c=await this.feishuApi.checkDocumentUrlAccessibility(n.feishuUrl);if(c.isAccessible)this.log("Existing document is accessible, updating content"),t==null||t.setMessage("\u{1F504} \u6B63\u5728\u66F4\u65B0\u73B0\u6709\u6587\u6863..."),a=await this.feishuApi.updateExistingDocument(n.feishuUrl,A,r,t);else if(c.needsReauth)if(this.log(`Token needs reauth, will retry after authorization: ${c.error}`),t==null||t.setMessage("\u{1F511} \u9700\u8981\u91CD\u65B0\u6388\u6743\uFF0C\u6388\u6743\u540E\u5C06\u91CD\u8BD5\u66F4\u65B0..."),await this.feishuApi.ensureValidTokenWithReauth(t)){this.log("Authorization completed, retrying original document access"),t==null||t.setMessage("\u{1F504} \u91CD\u65B0\u68C0\u67E5\u539F\u6587\u6863\u53EF\u8BBF\u95EE\u6027...");let h=await this.feishuApi.checkDocumentUrlAccessibility(n.feishuUrl);h.isAccessible?(this.log("Original document is now accessible after reauth, updating it"),t==null||t.setMessage("\u{1F504} \u6B63\u5728\u66F4\u65B0\u539F\u6587\u6863..."),a=await this.feishuApi.updateExistingDocument(n.feishuUrl,A,r,t)):(this.log(`Original document still not accessible after reauth: ${h.error}, creating new document`),a=await this.feishuApi.shareMarkdownWithFiles(A,r,t),l=!0,a.success&&this.log(`Document URL changed from ${n.feishuUrl} to ${a.url}`))}else throw new Error("\u91CD\u65B0\u6388\u6743\u5931\u8D25\uFF0C\u8BF7\u624B\u52A8\u91CD\u65B0\u6388\u6743");else this.log(`Existing document is not accessible: ${c.error}, creating new document`),t==null||t.setMessage("\u{1F4C4} \u539F\u6587\u6863\u4E0D\u53EF\u8BBF\u95EE\uFF0C\u6B63\u5728\u521B\u5EFA\u65B0\u6587\u6863..."),a=await this.feishuApi.shareMarkdownWithFiles(A,r,t),l=!0,a.success&&this.log(`Document URL changed from ${n.feishuUrl} to ${a.url}`)}else this.log("Normal share mode detected, creating new document"),a=await this.feishuApi.shareMarkdownWithFiles(A,r,t);if(t==null||t.hide(),a.success){if(n.shouldUpdate&&!l){if(this.log(`Document updated successfully: ${a.title}`),this.settings.enableShareMarkInFrontMatter)try{this.log("Updating share timestamp in front matter");let c=this.updateShareTimestamp(o);await this.app.vault.modify(e,c),this.log("Share timestamp updated successfully")}catch(c){this.log(`Failed to update share timestamp: ${c.message}`,"warn")}}else if(l?this.log(`Document URL changed, updating front matter: ${a.title}`):this.log(`File shared successfully: ${a.title}`),this.settings.enableShareMarkInFrontMatter&&a.url)try{this.log("Adding/updating share mark in front matter");let c=this.markdownProcessor.addShareMarkToFrontMatter(o,a.url);await this.app.vault.modify(e,c),this.log("Share mark added/updated successfully"),this.settings.suppressShareNotices||l&&n.shouldUpdate&&new q.Notice(`\u{1F4C4} \u6587\u6863\u94FE\u63A5\u5DF2\u66F4\u65B0\uFF08\u539F\u94FE\u63A5\u4E0D\u53EF\u8BBF\u95EE\uFF09
\u65B0\u94FE\u63A5\uFF1A${a.url}`,8e3)}catch(c){this.log(`Failed to add/update share mark: ${c.message}`,"warn")}this.showSuccessNotification(a)}else{let c=n.shouldUpdate?"\u66F4\u65B0":"\u5206\u4EAB";this.log(`${c} failed: ${a.error}`,"error"),new q.Notice(`\u274C ${c}\u5931\u8D25\uFF1A${a.error}`)}}catch(o){t==null||t.hide(),this.handleError(o,"\u6587\u4EF6\u5206\u4EAB")}}async ensureFileSaved(e){var t;try{let o=e.stat.mtime;i.verbose(`File mtime: ${o}`);let A=Date.now()-o;A<1e3&&(i.verbose(`File was recently modified (${A}ms ago), waiting for save...`),await new Promise(a=>setTimeout(a,500)),await this.app.vault.adapter.stat(e.path),i.verbose("File save wait completed"));let n=this.app.workspace.getActiveFile();if(n&&n.path===e.path){i.verbose("File is currently active, ensuring it's saved");let a=this.app.workspace.getActiveViewOfType(q.MarkdownView);a&&((t=a.file)==null?void 0:t.path)===e.path&&await a.save(),await new Promise(l=>setTimeout(l,200))}}catch(o){i.warn("Error ensuring file is saved:",o)}}checkUpdateMode(e){if(!e)return{shouldUpdate:!1};let t=e.feishushare===!0||e.feishushare==="true",o=e.feishu_url;return t&&o&&typeof o=="string"?(this.log(`Found feishushare marker with URL: ${o}`),{shouldUpdate:!0,feishuUrl:o}):{shouldUpdate:!1}}updateShareTimestamp(e){let t=new Date,o=new Date(t.getTime()+8*60*60*1e3),r=o.getUTCFullYear(),A=String(o.getUTCMonth()+1).padStart(2,"0"),n=String(o.getUTCDate()).padStart(2,"0"),a=String(o.getUTCHours()).padStart(2,"0"),l=String(o.getUTCMinutes()).padStart(2,"0"),c=`${r}-${A}-${n} ${a}:${l}`;if(!e.startsWith(`---
`)&&!e.startsWith(`---\r
`))return e;let g=e.split(`
`),h=-1;for(let E=1;E<g.length;E++)if(g[E].trim()==="---"){h=E;break}if(h===-1)return e;for(let E=1;E<h;E++)if(g[E].trim().startsWith("feishu_shared_at:")){g[E]=`feishu_shared_at: "${c}"`;break}return g.join(`
`)}async ensureValidAuth(){return!!this.settings.accessToken}showSuccessNotification(e){if(this.settings.simpleSuccessNotice||!e.url){let a=(e==null?void 0:e.title)||"\u6587\u6863",l=X.replace("{title}",a);new q.Notice(l,5e3);return}let t=`\u2705 \u5206\u4EAB\u6210\u529F\uFF01\u6587\u6863\uFF1A${e.title}`,r=new q.Notice(t,8e3).noticeEl.createEl("div",{cls:"setting-item-control"}),A=r.createEl("button",{text:"\u{1F4CB} \u590D\u5236\u94FE\u63A5",cls:"mod-cta"});A.addClass("mod-cta"),A.onclick=async()=>{try{let a=e.url;await navigator.clipboard.writeText(a),this.log("URL copied to clipboard"),A.textContent="\u2705 \u5DF2\u590D\u5236",setTimeout(()=>{A.textContent="\u{1F4CB} \u590D\u5236\u94FE\u63A5"},2e3)}catch(a){this.log(`Failed to copy URL: ${a.message}`,"error"),new q.Notice("\u274C \u590D\u5236\u5931\u8D25")}};let n=r.createEl("button",{text:"\u{1F517} \u6253\u5F00",cls:"mod-muted"});n.addClass("mod-muted"),n.onclick=()=>{e.url&&window.open(e.url,"_blank")}}handleError(e,t,o){i.error(`${t}:`,e);let r=o||`\u274C ${t}\u5931\u8D25: ${e.message}`;new q.Notice(r)}log(e,t="info"){switch(t){case"error":i.error(e);break;case"warn":i.warn(e);break;default:i.log(e)}}};
